(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["chatsora"] = factory();
	else
		root["chatsora"] = factory();
})((typeof self !== 'undefined' ? self : this), function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "00ee":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "0312":
/***/ (function(module, exports) {

var canUseDOM = !!(
  typeof window !== 'undefined' &&
  window.document &&
  window.document.createElement
);

module.exports = canUseDOM;

/***/ }),

/***/ "0366":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("1c0b");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "057f":
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable es/no-object-getownpropertynames -- safe */
var toIndexedObject = __webpack_require__("fc6a");
var $getOwnPropertyNames = __webpack_require__("241c").f;

var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : $getOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "0676":
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableSpread;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "06cf":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createPropertyDescriptor = __webpack_require__("5c6c");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var has = __webpack_require__("5135");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "07ac":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var $values = __webpack_require__("6f53").values;

// `Object.values` method
// https://tc39.es/ecma262/#sec-object.values
$({ target: 'Object', stat: true }, {
  values: function values(O) {
    return $values(O);
  }
});


/***/ }),

/***/ "0a06":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");
var buildURL = __webpack_require__("30b5");
var InterceptorManager = __webpack_require__("f6b4");
var dispatchRequest = __webpack_require__("5270");
var mergeConfig = __webpack_require__("4a7b");

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ "0cb2":
/***/ (function(module, exports, __webpack_require__) {

var toObject = __webpack_require__("7b0b");

var floor = Math.floor;
var replace = ''.replace;
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// https://tc39.es/ecma262/#sec-getsubstitution
module.exports = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace.call(replacement, symbols, function (match, ch) {
    var capture;
    switch (ch.charAt(0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return str.slice(0, position);
      case "'": return str.slice(tailPos);
      case '<':
        capture = namedCaptures[ch.slice(1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};


/***/ }),

/***/ "0cfb":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var createElement = __webpack_require__("cc12");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "0df6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "10d1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("da84");
var redefineAll = __webpack_require__("e2cc");
var InternalMetadataModule = __webpack_require__("f183");
var collection = __webpack_require__("6d61");
var collectionWeak = __webpack_require__("acac");
var isObject = __webpack_require__("861d");
var enforceIternalState = __webpack_require__("69f3").enforce;
var NATIVE_WEAK_MAP = __webpack_require__("7f9a");

var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
// eslint-disable-next-line es/no-object-isextensible -- safe
var isExtensible = Object.isExtensible;
var InternalWeakMap;

var wrapper = function (init) {
  return function WeakMap() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
};

// `WeakMap` constructor
// https://tc39.es/ecma262/#sec-weakmap-constructor
var $WeakMap = module.exports = collection('WeakMap', wrapper, collectionWeak);

// IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
  InternalMetadataModule.REQUIRED = true;
  var WeakMapPrototype = $WeakMap.prototype;
  var nativeDelete = WeakMapPrototype['delete'];
  var nativeHas = WeakMapPrototype.has;
  var nativeGet = WeakMapPrototype.get;
  var nativeSet = WeakMapPrototype.set;
  redefineAll(WeakMapPrototype, {
    'delete': function (key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeDelete.call(this, key) || state.frozen['delete'](key);
      } return nativeDelete.call(this, key);
    },
    has: function has(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas.call(this, key) || state.frozen.has(key);
      } return nativeHas.call(this, key);
    },
    get: function get(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas.call(this, key) ? nativeGet.call(this, key) : state.frozen.get(key);
      } return nativeGet.call(this, key);
    },
    set: function set(key, value) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        nativeHas.call(this, key) ? nativeSet.call(this, key, value) : state.frozen.set(key, value);
      } else nativeSet.call(this, key, value);
      return this;
    }
  });
}


/***/ }),

/***/ "11b0":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("a4d3");

__webpack_require__("e01a");

__webpack_require__("d3b7");

__webpack_require__("d28b");

__webpack_require__("e260");

__webpack_require__("3ca3");

__webpack_require__("ddb0");

__webpack_require__("a630");

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

module.exports = _iterableToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "1276":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var isRegExp = __webpack_require__("44e7");
var anObject = __webpack_require__("825a");
var requireObjectCoercible = __webpack_require__("1d80");
var speciesConstructor = __webpack_require__("4840");
var advanceStringIndex = __webpack_require__("8aa5");
var toLength = __webpack_require__("50c4");
var callRegExpExec = __webpack_require__("14c3");
var regexpExec = __webpack_require__("9263");
var stickyHelpers = __webpack_require__("9f7f");

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
var arrayPush = [].push;
var min = Math.min;
var MAX_UINT32 = 0xFFFFFFFF;

// @@split logic
fixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'.split(/(b)*/)[1] == 'c' ||
    // eslint-disable-next-line regexp/no-empty-group -- required for testing
    'test'.split(/(?:)/, -1).length != 4 ||
    'ab'.split(/(?:ab)*/).length != 2 ||
    '.'.split(/(.?)(.?)/).length != 4 ||
    // eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing
    '.'.split(/()()/).length > 1 ||
    ''.split(/.?/).length
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(requireObjectCoercible(this));
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (separator === undefined) return [string];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) {
        return nativeSplit.call(string, separator, lim);
      }
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy.lastIndex;
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));
          lastLength = match[0].length;
          lastLastIndex = lastIndex;
          if (output.length >= lim) break;
        }
        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
      }
      if (lastLastIndex === string.length) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output.length > lim ? output.slice(0, lim) : output;
    };
  // Chakra, V8
  } else if ('0'.split(undefined, 0).length) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);
    };
  } else internalSplit = nativeSplit;

  return [
    // `String.prototype.split` method
    // https://tc39.es/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = requireObjectCoercible(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (UNSUPPORTED_Y ? 'g' : 'y');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;
        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? S.slice(q) : S);
        var e;
        if (
          z === null ||
          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
}, UNSUPPORTED_Y);


/***/ }),

/***/ "129f":
/***/ (function(module, exports) {

// `SameValue` abstract operation
// https://tc39.es/ecma262/#sec-samevalue
// eslint-disable-next-line es/no-object-is -- safe
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare -- NaN check
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),

/***/ "1315":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', { value: true });

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _createForOfIteratorHelperLoose(o) {
  var i = 0;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () {
      if (i >= o.length) return {
        done: true
      };
      return {
        done: false,
        value: o[i++]
      };
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  i = o[Symbol.iterator]();
  return i.next.bind(i);
}

// these aren't really private, but nor are they really useful to document

/**
 * @private
 */
var LuxonError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(LuxonError, _Error);

  function LuxonError() {
    return _Error.apply(this, arguments) || this;
  }

  return LuxonError;
}( /*#__PURE__*/_wrapNativeSuper(Error));
/**
 * @private
 */


var InvalidDateTimeError = /*#__PURE__*/function (_LuxonError) {
  _inheritsLoose(InvalidDateTimeError, _LuxonError);

  function InvalidDateTimeError(reason) {
    return _LuxonError.call(this, "Invalid DateTime: " + reason.toMessage()) || this;
  }

  return InvalidDateTimeError;
}(LuxonError);
/**
 * @private
 */

var InvalidIntervalError = /*#__PURE__*/function (_LuxonError2) {
  _inheritsLoose(InvalidIntervalError, _LuxonError2);

  function InvalidIntervalError(reason) {
    return _LuxonError2.call(this, "Invalid Interval: " + reason.toMessage()) || this;
  }

  return InvalidIntervalError;
}(LuxonError);
/**
 * @private
 */

var InvalidDurationError = /*#__PURE__*/function (_LuxonError3) {
  _inheritsLoose(InvalidDurationError, _LuxonError3);

  function InvalidDurationError(reason) {
    return _LuxonError3.call(this, "Invalid Duration: " + reason.toMessage()) || this;
  }

  return InvalidDurationError;
}(LuxonError);
/**
 * @private
 */

var ConflictingSpecificationError = /*#__PURE__*/function (_LuxonError4) {
  _inheritsLoose(ConflictingSpecificationError, _LuxonError4);

  function ConflictingSpecificationError() {
    return _LuxonError4.apply(this, arguments) || this;
  }

  return ConflictingSpecificationError;
}(LuxonError);
/**
 * @private
 */

var InvalidUnitError = /*#__PURE__*/function (_LuxonError5) {
  _inheritsLoose(InvalidUnitError, _LuxonError5);

  function InvalidUnitError(unit) {
    return _LuxonError5.call(this, "Invalid unit " + unit) || this;
  }

  return InvalidUnitError;
}(LuxonError);
/**
 * @private
 */

var InvalidArgumentError = /*#__PURE__*/function (_LuxonError6) {
  _inheritsLoose(InvalidArgumentError, _LuxonError6);

  function InvalidArgumentError() {
    return _LuxonError6.apply(this, arguments) || this;
  }

  return InvalidArgumentError;
}(LuxonError);
/**
 * @private
 */

var ZoneIsAbstractError = /*#__PURE__*/function (_LuxonError7) {
  _inheritsLoose(ZoneIsAbstractError, _LuxonError7);

  function ZoneIsAbstractError() {
    return _LuxonError7.call(this, "Zone is an abstract class") || this;
  }

  return ZoneIsAbstractError;
}(LuxonError);

/**
 * @private
 */
var n = "numeric",
    s = "short",
    l = "long";
var DATE_SHORT = {
  year: n,
  month: n,
  day: n
};
var DATE_MED = {
  year: n,
  month: s,
  day: n
};
var DATE_MED_WITH_WEEKDAY = {
  year: n,
  month: s,
  day: n,
  weekday: s
};
var DATE_FULL = {
  year: n,
  month: l,
  day: n
};
var DATE_HUGE = {
  year: n,
  month: l,
  day: n,
  weekday: l
};
var TIME_SIMPLE = {
  hour: n,
  minute: n
};
var TIME_WITH_SECONDS = {
  hour: n,
  minute: n,
  second: n
};
var TIME_WITH_SHORT_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  timeZoneName: s
};
var TIME_WITH_LONG_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  timeZoneName: l
};
var TIME_24_SIMPLE = {
  hour: n,
  minute: n,
  hour12: false
};
/**
 * {@link toLocaleString}; format like '09:30:23', always 24-hour.
 */

var TIME_24_WITH_SECONDS = {
  hour: n,
  minute: n,
  second: n,
  hour12: false
};
/**
 * {@link toLocaleString}; format like '09:30:23 EDT', always 24-hour.
 */

var TIME_24_WITH_SHORT_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  hour12: false,
  timeZoneName: s
};
/**
 * {@link toLocaleString}; format like '09:30:23 Eastern Daylight Time', always 24-hour.
 */

var TIME_24_WITH_LONG_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  hour12: false,
  timeZoneName: l
};
/**
 * {@link toLocaleString}; format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.
 */

var DATETIME_SHORT = {
  year: n,
  month: n,
  day: n,
  hour: n,
  minute: n
};
/**
 * {@link toLocaleString}; format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.
 */

var DATETIME_SHORT_WITH_SECONDS = {
  year: n,
  month: n,
  day: n,
  hour: n,
  minute: n,
  second: n
};
var DATETIME_MED = {
  year: n,
  month: s,
  day: n,
  hour: n,
  minute: n
};
var DATETIME_MED_WITH_SECONDS = {
  year: n,
  month: s,
  day: n,
  hour: n,
  minute: n,
  second: n
};
var DATETIME_MED_WITH_WEEKDAY = {
  year: n,
  month: s,
  day: n,
  weekday: s,
  hour: n,
  minute: n
};
var DATETIME_FULL = {
  year: n,
  month: l,
  day: n,
  hour: n,
  minute: n,
  timeZoneName: s
};
var DATETIME_FULL_WITH_SECONDS = {
  year: n,
  month: l,
  day: n,
  hour: n,
  minute: n,
  second: n,
  timeZoneName: s
};
var DATETIME_HUGE = {
  year: n,
  month: l,
  day: n,
  weekday: l,
  hour: n,
  minute: n,
  timeZoneName: l
};
var DATETIME_HUGE_WITH_SECONDS = {
  year: n,
  month: l,
  day: n,
  weekday: l,
  hour: n,
  minute: n,
  second: n,
  timeZoneName: l
};

/*
  This is just a junk drawer, containing anything used across multiple classes.
  Because Luxon is small(ish), this should stay small and we won't worry about splitting
  it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.
*/
/**
 * @private
 */
// TYPES

function isUndefined(o) {
  return typeof o === "undefined";
}
function isNumber(o) {
  return typeof o === "number";
}
function isInteger(o) {
  return typeof o === "number" && o % 1 === 0;
}
function isString(o) {
  return typeof o === "string";
}
function isDate(o) {
  return Object.prototype.toString.call(o) === "[object Date]";
} // CAPABILITIES

function hasIntl() {
  try {
    return typeof Intl !== "undefined" && Intl.DateTimeFormat;
  } catch (e) {
    return false;
  }
}
function hasFormatToParts() {
  return !isUndefined(Intl.DateTimeFormat.prototype.formatToParts);
}
function hasRelative() {
  try {
    return typeof Intl !== "undefined" && !!Intl.RelativeTimeFormat;
  } catch (e) {
    return false;
  }
} // OBJECTS AND ARRAYS

function maybeArray(thing) {
  return Array.isArray(thing) ? thing : [thing];
}
function bestBy(arr, by, compare) {
  if (arr.length === 0) {
    return undefined;
  }

  return arr.reduce(function (best, next) {
    var pair = [by(next), next];

    if (!best) {
      return pair;
    } else if (compare(best[0], pair[0]) === best[0]) {
      return best;
    } else {
      return pair;
    }
  }, null)[1];
}
function pick(obj, keys) {
  return keys.reduce(function (a, k) {
    a[k] = obj[k];
    return a;
  }, {});
}
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
} // NUMBERS AND STRINGS

function integerBetween(thing, bottom, top) {
  return isInteger(thing) && thing >= bottom && thing <= top;
} // x % n but takes the sign of n instead of x

function floorMod(x, n) {
  return x - n * Math.floor(x / n);
}
function padStart(input, n) {
  if (n === void 0) {
    n = 2;
  }

  var minus = input < 0 ? "-" : "";
  var target = minus ? input * -1 : input;
  var result;

  if (target.toString().length < n) {
    result = ("0".repeat(n) + target).slice(-n);
  } else {
    result = target.toString();
  }

  return "" + minus + result;
}
function parseInteger(string) {
  if (isUndefined(string) || string === null || string === "") {
    return undefined;
  } else {
    return parseInt(string, 10);
  }
}
function parseMillis(fraction) {
  // Return undefined (instead of 0) in these cases, where fraction is not set
  if (isUndefined(fraction) || fraction === null || fraction === "") {
    return undefined;
  } else {
    var f = parseFloat("0." + fraction) * 1000;
    return Math.floor(f);
  }
}
function roundTo(number, digits, towardZero) {
  if (towardZero === void 0) {
    towardZero = false;
  }

  var factor = Math.pow(10, digits),
      rounder = towardZero ? Math.trunc : Math.round;
  return rounder(number * factor) / factor;
} // DATE BASICS

function isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
function daysInMonth(year, month) {
  var modMonth = floorMod(month - 1, 12) + 1,
      modYear = year + (month - modMonth) / 12;

  if (modMonth === 2) {
    return isLeapYear(modYear) ? 29 : 28;
  } else {
    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];
  }
} // covert a calendar object to a local timestamp (epoch, but with the offset baked in)

function objToLocalTS(obj) {
  var d = Date.UTC(obj.year, obj.month - 1, obj.day, obj.hour, obj.minute, obj.second, obj.millisecond); // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that

  if (obj.year < 100 && obj.year >= 0) {
    d = new Date(d);
    d.setUTCFullYear(d.getUTCFullYear() - 1900);
  }

  return +d;
}
function weeksInWeekYear(weekYear) {
  var p1 = (weekYear + Math.floor(weekYear / 4) - Math.floor(weekYear / 100) + Math.floor(weekYear / 400)) % 7,
      last = weekYear - 1,
      p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;
  return p1 === 4 || p2 === 3 ? 53 : 52;
}
function untruncateYear(year) {
  if (year > 99) {
    return year;
  } else return year > 60 ? 1900 + year : 2000 + year;
} // PARSING

function parseZoneInfo(ts, offsetFormat, locale, timeZone) {
  if (timeZone === void 0) {
    timeZone = null;
  }

  var date = new Date(ts),
      intlOpts = {
    hour12: false,
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit"
  };

  if (timeZone) {
    intlOpts.timeZone = timeZone;
  }

  var modified = Object.assign({
    timeZoneName: offsetFormat
  }, intlOpts),
      intl = hasIntl();

  if (intl && hasFormatToParts()) {
    var parsed = new Intl.DateTimeFormat(locale, modified).formatToParts(date).find(function (m) {
      return m.type.toLowerCase() === "timezonename";
    });
    return parsed ? parsed.value : null;
  } else if (intl) {
    // this probably doesn't work for all locales
    var without = new Intl.DateTimeFormat(locale, intlOpts).format(date),
        included = new Intl.DateTimeFormat(locale, modified).format(date),
        diffed = included.substring(without.length),
        trimmed = diffed.replace(/^[, \u200e]+/, "");
    return trimmed;
  } else {
    return null;
  }
} // signedOffset('-5', '30') -> -330

function signedOffset(offHourStr, offMinuteStr) {
  var offHour = parseInt(offHourStr, 10); // don't || this because we want to preserve -0

  if (Number.isNaN(offHour)) {
    offHour = 0;
  }

  var offMin = parseInt(offMinuteStr, 10) || 0,
      offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;
  return offHour * 60 + offMinSigned;
} // COERCION

function asNumber(value) {
  var numericValue = Number(value);
  if (typeof value === "boolean" || value === "" || Number.isNaN(numericValue)) throw new InvalidArgumentError("Invalid unit value " + value);
  return numericValue;
}
function normalizeObject(obj, normalizer, nonUnitKeys) {
  var normalized = {};

  for (var u in obj) {
    if (hasOwnProperty(obj, u)) {
      if (nonUnitKeys.indexOf(u) >= 0) continue;
      var v = obj[u];
      if (v === undefined || v === null) continue;
      normalized[normalizer(u)] = asNumber(v);
    }
  }

  return normalized;
}
function formatOffset(offset, format) {
  var hours = Math.trunc(Math.abs(offset / 60)),
      minutes = Math.trunc(Math.abs(offset % 60)),
      sign = offset >= 0 ? "+" : "-";

  switch (format) {
    case "short":
      return "" + sign + padStart(hours, 2) + ":" + padStart(minutes, 2);

    case "narrow":
      return "" + sign + hours + (minutes > 0 ? ":" + minutes : "");

    case "techie":
      return "" + sign + padStart(hours, 2) + padStart(minutes, 2);

    default:
      throw new RangeError("Value format " + format + " is out of range for property format");
  }
}
function timeObject(obj) {
  return pick(obj, ["hour", "minute", "second", "millisecond"]);
}
var ianaRegex = /[A-Za-z_+-]{1,256}(:?\/[A-Za-z_+-]{1,256}(\/[A-Za-z_+-]{1,256})?)?/;

function stringify(obj) {
  return JSON.stringify(obj, Object.keys(obj).sort());
}
/**
 * @private
 */


var monthsLong = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
var monthsShort = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
var monthsNarrow = ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"];
function months(length) {
  switch (length) {
    case "narrow":
      return monthsNarrow;

    case "short":
      return monthsShort;

    case "long":
      return monthsLong;

    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];

    case "2-digit":
      return ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];

    default:
      return null;
  }
}
var weekdaysLong = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
var weekdaysShort = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];
var weekdaysNarrow = ["M", "T", "W", "T", "F", "S", "S"];
function weekdays(length) {
  switch (length) {
    case "narrow":
      return weekdaysNarrow;

    case "short":
      return weekdaysShort;

    case "long":
      return weekdaysLong;

    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7"];

    default:
      return null;
  }
}
var meridiems = ["AM", "PM"];
var erasLong = ["Before Christ", "Anno Domini"];
var erasShort = ["BC", "AD"];
var erasNarrow = ["B", "A"];
function eras(length) {
  switch (length) {
    case "narrow":
      return erasNarrow;

    case "short":
      return erasShort;

    case "long":
      return erasLong;

    default:
      return null;
  }
}
function meridiemForDateTime(dt) {
  return meridiems[dt.hour < 12 ? 0 : 1];
}
function weekdayForDateTime(dt, length) {
  return weekdays(length)[dt.weekday - 1];
}
function monthForDateTime(dt, length) {
  return months(length)[dt.month - 1];
}
function eraForDateTime(dt, length) {
  return eras(length)[dt.year < 0 ? 0 : 1];
}
function formatRelativeTime(unit, count, numeric, narrow) {
  if (numeric === void 0) {
    numeric = "always";
  }

  if (narrow === void 0) {
    narrow = false;
  }

  var units = {
    years: ["year", "yr."],
    quarters: ["quarter", "qtr."],
    months: ["month", "mo."],
    weeks: ["week", "wk."],
    days: ["day", "day", "days"],
    hours: ["hour", "hr."],
    minutes: ["minute", "min."],
    seconds: ["second", "sec."]
  };
  var lastable = ["hours", "minutes", "seconds"].indexOf(unit) === -1;

  if (numeric === "auto" && lastable) {
    var isDay = unit === "days";

    switch (count) {
      case 1:
        return isDay ? "tomorrow" : "next " + units[unit][0];

      case -1:
        return isDay ? "yesterday" : "last " + units[unit][0];

      case 0:
        return isDay ? "today" : "this " + units[unit][0];

    }
  }

  var isInPast = Object.is(count, -0) || count < 0,
      fmtValue = Math.abs(count),
      singular = fmtValue === 1,
      lilUnits = units[unit],
      fmtUnit = narrow ? singular ? lilUnits[1] : lilUnits[2] || lilUnits[1] : singular ? units[unit][0] : unit;
  return isInPast ? fmtValue + " " + fmtUnit + " ago" : "in " + fmtValue + " " + fmtUnit;
}
function formatString(knownFormat) {
  // these all have the offsets removed because we don't have access to them
  // without all the intl stuff this is backfilling
  var filtered = pick(knownFormat, ["weekday", "era", "year", "month", "day", "hour", "minute", "second", "timeZoneName", "hour12"]),
      key = stringify(filtered),
      dateTimeHuge = "EEEE, LLLL d, yyyy, h:mm a";

  switch (key) {
    case stringify(DATE_SHORT):
      return "M/d/yyyy";

    case stringify(DATE_MED):
      return "LLL d, yyyy";

    case stringify(DATE_MED_WITH_WEEKDAY):
      return "EEE, LLL d, yyyy";

    case stringify(DATE_FULL):
      return "LLLL d, yyyy";

    case stringify(DATE_HUGE):
      return "EEEE, LLLL d, yyyy";

    case stringify(TIME_SIMPLE):
      return "h:mm a";

    case stringify(TIME_WITH_SECONDS):
      return "h:mm:ss a";

    case stringify(TIME_WITH_SHORT_OFFSET):
      return "h:mm a";

    case stringify(TIME_WITH_LONG_OFFSET):
      return "h:mm a";

    case stringify(TIME_24_SIMPLE):
      return "HH:mm";

    case stringify(TIME_24_WITH_SECONDS):
      return "HH:mm:ss";

    case stringify(TIME_24_WITH_SHORT_OFFSET):
      return "HH:mm";

    case stringify(TIME_24_WITH_LONG_OFFSET):
      return "HH:mm";

    case stringify(DATETIME_SHORT):
      return "M/d/yyyy, h:mm a";

    case stringify(DATETIME_MED):
      return "LLL d, yyyy, h:mm a";

    case stringify(DATETIME_FULL):
      return "LLLL d, yyyy, h:mm a";

    case stringify(DATETIME_HUGE):
      return dateTimeHuge;

    case stringify(DATETIME_SHORT_WITH_SECONDS):
      return "M/d/yyyy, h:mm:ss a";

    case stringify(DATETIME_MED_WITH_SECONDS):
      return "LLL d, yyyy, h:mm:ss a";

    case stringify(DATETIME_MED_WITH_WEEKDAY):
      return "EEE, d LLL yyyy, h:mm a";

    case stringify(DATETIME_FULL_WITH_SECONDS):
      return "LLLL d, yyyy, h:mm:ss a";

    case stringify(DATETIME_HUGE_WITH_SECONDS):
      return "EEEE, LLLL d, yyyy, h:mm:ss a";

    default:
      return dateTimeHuge;
  }
}

function stringifyTokens(splits, tokenToString) {
  var s = "";

  for (var _iterator = _createForOfIteratorHelperLoose(splits), _step; !(_step = _iterator()).done;) {
    var token = _step.value;

    if (token.literal) {
      s += token.val;
    } else {
      s += tokenToString(token.val);
    }
  }

  return s;
}

var _macroTokenToFormatOpts = {
  D: DATE_SHORT,
  DD: DATE_MED,
  DDD: DATE_FULL,
  DDDD: DATE_HUGE,
  t: TIME_SIMPLE,
  tt: TIME_WITH_SECONDS,
  ttt: TIME_WITH_SHORT_OFFSET,
  tttt: TIME_WITH_LONG_OFFSET,
  T: TIME_24_SIMPLE,
  TT: TIME_24_WITH_SECONDS,
  TTT: TIME_24_WITH_SHORT_OFFSET,
  TTTT: TIME_24_WITH_LONG_OFFSET,
  f: DATETIME_SHORT,
  ff: DATETIME_MED,
  fff: DATETIME_FULL,
  ffff: DATETIME_HUGE,
  F: DATETIME_SHORT_WITH_SECONDS,
  FF: DATETIME_MED_WITH_SECONDS,
  FFF: DATETIME_FULL_WITH_SECONDS,
  FFFF: DATETIME_HUGE_WITH_SECONDS
};
/**
 * @private
 */

var Formatter = /*#__PURE__*/function () {
  Formatter.create = function create(locale, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return new Formatter(locale, opts);
  };

  Formatter.parseFormat = function parseFormat(fmt) {
    var current = null,
        currentFull = "",
        bracketed = false;
    var splits = [];

    for (var i = 0; i < fmt.length; i++) {
      var c = fmt.charAt(i);

      if (c === "'") {
        if (currentFull.length > 0) {
          splits.push({
            literal: bracketed,
            val: currentFull
          });
        }

        current = null;
        currentFull = "";
        bracketed = !bracketed;
      } else if (bracketed) {
        currentFull += c;
      } else if (c === current) {
        currentFull += c;
      } else {
        if (currentFull.length > 0) {
          splits.push({
            literal: false,
            val: currentFull
          });
        }

        currentFull = c;
        current = c;
      }
    }

    if (currentFull.length > 0) {
      splits.push({
        literal: bracketed,
        val: currentFull
      });
    }

    return splits;
  };

  Formatter.macroTokenToFormatOpts = function macroTokenToFormatOpts(token) {
    return _macroTokenToFormatOpts[token];
  };

  function Formatter(locale, formatOpts) {
    this.opts = formatOpts;
    this.loc = locale;
    this.systemLoc = null;
  }

  var _proto = Formatter.prototype;

  _proto.formatWithSystemDefault = function formatWithSystemDefault(dt, opts) {
    if (this.systemLoc === null) {
      this.systemLoc = this.loc.redefaultToSystem();
    }

    var df = this.systemLoc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.format();
  };

  _proto.formatDateTime = function formatDateTime(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.format();
  };

  _proto.formatDateTimeParts = function formatDateTimeParts(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.formatToParts();
  };

  _proto.resolvedOptions = function resolvedOptions(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.resolvedOptions();
  };

  _proto.num = function num(n, p) {
    if (p === void 0) {
      p = 0;
    }

    // we get some perf out of doing this here, annoyingly
    if (this.opts.forceSimple) {
      return padStart(n, p);
    }

    var opts = Object.assign({}, this.opts);

    if (p > 0) {
      opts.padTo = p;
    }

    return this.loc.numberFormatter(opts).format(n);
  };

  _proto.formatDateTimeFromString = function formatDateTimeFromString(dt, fmt) {
    var _this = this;

    var knownEnglish = this.loc.listingMode() === "en",
        useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== "gregory" && hasFormatToParts(),
        string = function string(opts, extract) {
      return _this.loc.extract(dt, opts, extract);
    },
        formatOffset = function formatOffset(opts) {
      if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {
        return "Z";
      }

      return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : "";
    },
        meridiem = function meridiem() {
      return knownEnglish ? meridiemForDateTime(dt) : string({
        hour: "numeric",
        hour12: true
      }, "dayperiod");
    },
        month = function month(length, standalone) {
      return knownEnglish ? monthForDateTime(dt, length) : string(standalone ? {
        month: length
      } : {
        month: length,
        day: "numeric"
      }, "month");
    },
        weekday = function weekday(length, standalone) {
      return knownEnglish ? weekdayForDateTime(dt, length) : string(standalone ? {
        weekday: length
      } : {
        weekday: length,
        month: "long",
        day: "numeric"
      }, "weekday");
    },
        maybeMacro = function maybeMacro(token) {
      var formatOpts = Formatter.macroTokenToFormatOpts(token);

      if (formatOpts) {
        return _this.formatWithSystemDefault(dt, formatOpts);
      } else {
        return token;
      }
    },
        era = function era(length) {
      return knownEnglish ? eraForDateTime(dt, length) : string({
        era: length
      }, "era");
    },
        tokenToString = function tokenToString(token) {
      // Where possible: http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles
      switch (token) {
        // ms
        case "S":
          return _this.num(dt.millisecond);

        case "u": // falls through

        case "SSS":
          return _this.num(dt.millisecond, 3);
        // seconds

        case "s":
          return _this.num(dt.second);

        case "ss":
          return _this.num(dt.second, 2);
        // minutes

        case "m":
          return _this.num(dt.minute);

        case "mm":
          return _this.num(dt.minute, 2);
        // hours

        case "h":
          return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);

        case "hh":
          return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);

        case "H":
          return _this.num(dt.hour);

        case "HH":
          return _this.num(dt.hour, 2);
        // offset

        case "Z":
          // like +6
          return formatOffset({
            format: "narrow",
            allowZ: _this.opts.allowZ
          });

        case "ZZ":
          // like +06:00
          return formatOffset({
            format: "short",
            allowZ: _this.opts.allowZ
          });

        case "ZZZ":
          // like +0600
          return formatOffset({
            format: "techie",
            allowZ: _this.opts.allowZ
          });

        case "ZZZZ":
          // like EST
          return dt.zone.offsetName(dt.ts, {
            format: "short",
            locale: _this.loc.locale
          });

        case "ZZZZZ":
          // like Eastern Standard Time
          return dt.zone.offsetName(dt.ts, {
            format: "long",
            locale: _this.loc.locale
          });
        // zone

        case "z":
          // like America/New_York
          return dt.zoneName;
        // meridiems

        case "a":
          return meridiem();
        // dates

        case "d":
          return useDateTimeFormatter ? string({
            day: "numeric"
          }, "day") : _this.num(dt.day);

        case "dd":
          return useDateTimeFormatter ? string({
            day: "2-digit"
          }, "day") : _this.num(dt.day, 2);
        // weekdays - standalone

        case "c":
          // like 1
          return _this.num(dt.weekday);

        case "ccc":
          // like 'Tues'
          return weekday("short", true);

        case "cccc":
          // like 'Tuesday'
          return weekday("long", true);

        case "ccccc":
          // like 'T'
          return weekday("narrow", true);
        // weekdays - format

        case "E":
          // like 1
          return _this.num(dt.weekday);

        case "EEE":
          // like 'Tues'
          return weekday("short", false);

        case "EEEE":
          // like 'Tuesday'
          return weekday("long", false);

        case "EEEEE":
          // like 'T'
          return weekday("narrow", false);
        // months - standalone

        case "L":
          // like 1
          return useDateTimeFormatter ? string({
            month: "numeric",
            day: "numeric"
          }, "month") : _this.num(dt.month);

        case "LL":
          // like 01, doesn't seem to work
          return useDateTimeFormatter ? string({
            month: "2-digit",
            day: "numeric"
          }, "month") : _this.num(dt.month, 2);

        case "LLL":
          // like Jan
          return month("short", true);

        case "LLLL":
          // like January
          return month("long", true);

        case "LLLLL":
          // like J
          return month("narrow", true);
        // months - format

        case "M":
          // like 1
          return useDateTimeFormatter ? string({
            month: "numeric"
          }, "month") : _this.num(dt.month);

        case "MM":
          // like 01
          return useDateTimeFormatter ? string({
            month: "2-digit"
          }, "month") : _this.num(dt.month, 2);

        case "MMM":
          // like Jan
          return month("short", false);

        case "MMMM":
          // like January
          return month("long", false);

        case "MMMMM":
          // like J
          return month("narrow", false);
        // years

        case "y":
          // like 2014
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year);

        case "yy":
          // like 14
          return useDateTimeFormatter ? string({
            year: "2-digit"
          }, "year") : _this.num(dt.year.toString().slice(-2), 2);

        case "yyyy":
          // like 0012
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year, 4);

        case "yyyyyy":
          // like 000012
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year, 6);
        // eras

        case "G":
          // like AD
          return era("short");

        case "GG":
          // like Anno Domini
          return era("long");

        case "GGGGG":
          return era("narrow");

        case "kk":
          return _this.num(dt.weekYear.toString().slice(-2), 2);

        case "kkkk":
          return _this.num(dt.weekYear, 4);

        case "W":
          return _this.num(dt.weekNumber);

        case "WW":
          return _this.num(dt.weekNumber, 2);

        case "o":
          return _this.num(dt.ordinal);

        case "ooo":
          return _this.num(dt.ordinal, 3);

        case "q":
          // like 1
          return _this.num(dt.quarter);

        case "qq":
          // like 01
          return _this.num(dt.quarter, 2);

        case "X":
          return _this.num(Math.floor(dt.ts / 1000));

        case "x":
          return _this.num(dt.ts);

        default:
          return maybeMacro(token);
      }
    };

    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);
  };

  _proto.formatDurationFromString = function formatDurationFromString(dur, fmt) {
    var _this2 = this;

    var tokenToField = function tokenToField(token) {
      switch (token[0]) {
        case "S":
          return "millisecond";

        case "s":
          return "second";

        case "m":
          return "minute";

        case "h":
          return "hour";

        case "d":
          return "day";

        case "M":
          return "month";

        case "y":
          return "year";

        default:
          return null;
      }
    },
        tokenToString = function tokenToString(lildur) {
      return function (token) {
        var mapped = tokenToField(token);

        if (mapped) {
          return _this2.num(lildur.get(mapped), token.length);
        } else {
          return token;
        }
      };
    },
        tokens = Formatter.parseFormat(fmt),
        realTokens = tokens.reduce(function (found, _ref) {
      var literal = _ref.literal,
          val = _ref.val;
      return literal ? found : found.concat(val);
    }, []),
        collapsed = dur.shiftTo.apply(dur, realTokens.map(tokenToField).filter(function (t) {
      return t;
    }));

    return stringifyTokens(tokens, tokenToString(collapsed));
  };

  return Formatter;
}();

var Invalid = /*#__PURE__*/function () {
  function Invalid(reason, explanation) {
    this.reason = reason;
    this.explanation = explanation;
  }

  var _proto = Invalid.prototype;

  _proto.toMessage = function toMessage() {
    if (this.explanation) {
      return this.reason + ": " + this.explanation;
    } else {
      return this.reason;
    }
  };

  return Invalid;
}();

/**
 * @interface
 */

var Zone = /*#__PURE__*/function () {
  function Zone() {}

  var _proto = Zone.prototype;

  /**
   * Returns the offset's common name (such as EST) at the specified timestamp
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the name
   * @param {Object} opts - Options to affect the format
   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.
   * @param {string} opts.locale - What locale to return the offset name in.
   * @return {string}
   */
  _proto.offsetName = function offsetName(ts, opts) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Returns the offset's value as a string
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the offset
   * @param {string} format - What style of offset to return.
   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
   * @return {string}
   */
  ;

  _proto.formatOffset = function formatOffset(ts, format) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return the offset in minutes for this zone at the specified timestamp.
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to compute the offset
   * @return {number}
   */
  ;

  _proto.offset = function offset(ts) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return whether this Zone is equal to another zone
   * @abstract
   * @param {Zone} otherZone - the zone to compare
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(otherZone) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return whether this Zone is valid.
   * @abstract
   * @type {boolean}
   */
  ;

  _createClass(Zone, [{
    key: "type",

    /**
     * The type of zone
     * @abstract
     * @type {string}
     */
    get: function get() {
      throw new ZoneIsAbstractError();
    }
    /**
     * The name of this zone.
     * @abstract
     * @type {string}
     */

  }, {
    key: "name",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
    /**
     * Returns whether the offset is known to be fixed for the whole year.
     * @abstract
     * @type {boolean}
     */

  }, {
    key: "universal",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
  }, {
    key: "isValid",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
  }]);

  return Zone;
}();

var singleton = null;
/**
 * Represents the local zone for this JavaScript environment.
 * @implements {Zone}
 */

var LocalZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(LocalZone, _Zone);

  function LocalZone() {
    return _Zone.apply(this, arguments) || this;
  }

  var _proto = LocalZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName(ts, _ref) {
    var format = _ref.format,
        locale = _ref.locale;
    return parseZoneInfo(ts, format, locale);
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.offset(ts), format);
  }
  /** @override **/
  ;

  _proto.offset = function offset(ts) {
    return -new Date(ts).getTimezoneOffset();
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "local";
  }
  /** @override **/
  ;

  _createClass(LocalZone, [{
    key: "type",

    /** @override **/
    get: function get() {
      return "local";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      if (hasIntl()) {
        return new Intl.DateTimeFormat().resolvedOptions().timeZone;
      } else return "local";
    }
    /** @override **/

  }, {
    key: "universal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return true;
    }
  }], [{
    key: "instance",

    /**
     * Get a singleton instance of the local zone
     * @return {LocalZone}
     */
    get: function get() {
      if (singleton === null) {
        singleton = new LocalZone();
      }

      return singleton;
    }
  }]);

  return LocalZone;
}(Zone);

var matchingRegex = RegExp("^" + ianaRegex.source + "$");
var dtfCache = {};

function makeDTF(zone) {
  if (!dtfCache[zone]) {
    dtfCache[zone] = new Intl.DateTimeFormat("en-US", {
      hour12: false,
      timeZone: zone,
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }

  return dtfCache[zone];
}

var typeToPos = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};

function hackyOffset(dtf, date) {
  var formatted = dtf.format(date).replace(/\u200E/g, ""),
      parsed = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(formatted),
      fMonth = parsed[1],
      fDay = parsed[2],
      fYear = parsed[3],
      fHour = parsed[4],
      fMinute = parsed[5],
      fSecond = parsed[6];
  return [fYear, fMonth, fDay, fHour, fMinute, fSecond];
}

function partsOffset(dtf, date) {
  var formatted = dtf.formatToParts(date),
      filled = [];

  for (var i = 0; i < formatted.length; i++) {
    var _formatted$i = formatted[i],
        type = _formatted$i.type,
        value = _formatted$i.value,
        pos = typeToPos[type];

    if (!isUndefined(pos)) {
      filled[pos] = parseInt(value, 10);
    }
  }

  return filled;
}

var ianaZoneCache = {};
/**
 * A zone identified by an IANA identifier, like America/New_York
 * @implements {Zone}
 */

var IANAZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(IANAZone, _Zone);

  /**
   * @param {string} name - Zone name
   * @return {IANAZone}
   */
  IANAZone.create = function create(name) {
    if (!ianaZoneCache[name]) {
      ianaZoneCache[name] = new IANAZone(name);
    }

    return ianaZoneCache[name];
  }
  /**
   * Reset local caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  ;

  IANAZone.resetCache = function resetCache() {
    ianaZoneCache = {};
    dtfCache = {};
  }
  /**
   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.
   * @param {string} s - The string to check validity on
   * @example IANAZone.isValidSpecifier("America/New_York") //=> true
   * @example IANAZone.isValidSpecifier("Fantasia/Castle") //=> true
   * @example IANAZone.isValidSpecifier("Sport~~blorp") //=> false
   * @return {boolean}
   */
  ;

  IANAZone.isValidSpecifier = function isValidSpecifier(s) {
    return !!(s && s.match(matchingRegex));
  }
  /**
   * Returns whether the provided string identifies a real zone
   * @param {string} zone - The string to check
   * @example IANAZone.isValidZone("America/New_York") //=> true
   * @example IANAZone.isValidZone("Fantasia/Castle") //=> false
   * @example IANAZone.isValidZone("Sport~~blorp") //=> false
   * @return {boolean}
   */
  ;

  IANAZone.isValidZone = function isValidZone(zone) {
    try {
      new Intl.DateTimeFormat("en-US", {
        timeZone: zone
      }).format();
      return true;
    } catch (e) {
      return false;
    }
  } // Etc/GMT+8 -> -480

  /** @ignore */
  ;

  IANAZone.parseGMTOffset = function parseGMTOffset(specifier) {
    if (specifier) {
      var match = specifier.match(/^Etc\/GMT([+-]\d{1,2})$/i);

      if (match) {
        return -60 * parseInt(match[1]);
      }
    }

    return null;
  };

  function IANAZone(name) {
    var _this;

    _this = _Zone.call(this) || this;
    /** @private **/

    _this.zoneName = name;
    /** @private **/

    _this.valid = IANAZone.isValidZone(name);
    return _this;
  }
  /** @override **/


  var _proto = IANAZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName(ts, _ref) {
    var format = _ref.format,
        locale = _ref.locale;
    return parseZoneInfo(ts, format, locale, this.name);
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.offset(ts), format);
  }
  /** @override **/
  ;

  _proto.offset = function offset(ts) {
    var date = new Date(ts),
        dtf = makeDTF(this.name),
        _ref2 = dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date),
        year = _ref2[0],
        month = _ref2[1],
        day = _ref2[2],
        hour = _ref2[3],
        minute = _ref2[4],
        second = _ref2[5],
        adjustedHour = hour === 24 ? 0 : hour;

    var asUTC = objToLocalTS({
      year: year,
      month: month,
      day: day,
      hour: adjustedHour,
      minute: minute,
      second: second,
      millisecond: 0
    });
    var asTS = +date;
    var over = asTS % 1000;
    asTS -= over >= 0 ? over : 1000 + over;
    return (asUTC - asTS) / (60 * 1000);
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "iana" && otherZone.name === this.name;
  }
  /** @override **/
  ;

  _createClass(IANAZone, [{
    key: "type",
    get: function get() {
      return "iana";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.zoneName;
    }
    /** @override **/

  }, {
    key: "universal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return this.valid;
    }
  }]);

  return IANAZone;
}(Zone);

var singleton$1 = null;
/**
 * A zone with a fixed offset (meaning no DST)
 * @implements {Zone}
 */

var FixedOffsetZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(FixedOffsetZone, _Zone);

  /**
   * Get an instance with a specified offset
   * @param {number} offset - The offset in minutes
   * @return {FixedOffsetZone}
   */
  FixedOffsetZone.instance = function instance(offset) {
    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);
  }
  /**
   * Get an instance of FixedOffsetZone from a UTC offset string, like "UTC+6"
   * @param {string} s - The offset string to parse
   * @example FixedOffsetZone.parseSpecifier("UTC+6")
   * @example FixedOffsetZone.parseSpecifier("UTC+06")
   * @example FixedOffsetZone.parseSpecifier("UTC-6:00")
   * @return {FixedOffsetZone}
   */
  ;

  FixedOffsetZone.parseSpecifier = function parseSpecifier(s) {
    if (s) {
      var r = s.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);

      if (r) {
        return new FixedOffsetZone(signedOffset(r[1], r[2]));
      }
    }

    return null;
  };

  _createClass(FixedOffsetZone, null, [{
    key: "utcInstance",

    /**
     * Get a singleton instance of UTC
     * @return {FixedOffsetZone}
     */
    get: function get() {
      if (singleton$1 === null) {
        singleton$1 = new FixedOffsetZone(0);
      }

      return singleton$1;
    }
  }]);

  function FixedOffsetZone(offset) {
    var _this;

    _this = _Zone.call(this) || this;
    /** @private **/

    _this.fixed = offset;
    return _this;
  }
  /** @override **/


  var _proto = FixedOffsetZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName() {
    return this.name;
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.fixed, format);
  }
  /** @override **/
  ;

  /** @override **/
  _proto.offset = function offset() {
    return this.fixed;
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "fixed" && otherZone.fixed === this.fixed;
  }
  /** @override **/
  ;

  _createClass(FixedOffsetZone, [{
    key: "type",
    get: function get() {
      return "fixed";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.fixed === 0 ? "UTC" : "UTC" + formatOffset(this.fixed, "narrow");
    }
  }, {
    key: "universal",
    get: function get() {
      return true;
    }
  }, {
    key: "isValid",
    get: function get() {
      return true;
    }
  }]);

  return FixedOffsetZone;
}(Zone);

/**
 * A zone that failed to parse. You should never need to instantiate this.
 * @implements {Zone}
 */

var InvalidZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(InvalidZone, _Zone);

  function InvalidZone(zoneName) {
    var _this;

    _this = _Zone.call(this) || this;
    /**  @private */

    _this.zoneName = zoneName;
    return _this;
  }
  /** @override **/


  var _proto = InvalidZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName() {
    return null;
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset() {
    return "";
  }
  /** @override **/
  ;

  _proto.offset = function offset() {
    return NaN;
  }
  /** @override **/
  ;

  _proto.equals = function equals() {
    return false;
  }
  /** @override **/
  ;

  _createClass(InvalidZone, [{
    key: "type",
    get: function get() {
      return "invalid";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.zoneName;
    }
    /** @override **/

  }, {
    key: "universal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return false;
    }
  }]);

  return InvalidZone;
}(Zone);

/**
 * @private
 */
function normalizeZone(input, defaultZone) {
  var offset;

  if (isUndefined(input) || input === null) {
    return defaultZone;
  } else if (input instanceof Zone) {
    return input;
  } else if (isString(input)) {
    var lowered = input.toLowerCase();
    if (lowered === "local") return defaultZone;else if (lowered === "utc" || lowered === "gmt") return FixedOffsetZone.utcInstance;else if ((offset = IANAZone.parseGMTOffset(input)) != null) {
      // handle Etc/GMT-4, which V8 chokes on
      return FixedOffsetZone.instance(offset);
    } else if (IANAZone.isValidSpecifier(lowered)) return IANAZone.create(input);else return FixedOffsetZone.parseSpecifier(lowered) || new InvalidZone(input);
  } else if (isNumber(input)) {
    return FixedOffsetZone.instance(input);
  } else if (typeof input === "object" && input.offset && typeof input.offset === "number") {
    // This is dumb, but the instanceof check above doesn't seem to really work
    // so we're duck checking it
    return input;
  } else {
    return new InvalidZone(input);
  }
}

var now = function now() {
  return Date.now();
},
    defaultZone = null,
    // not setting this directly to LocalZone.instance bc loading order issues
defaultLocale = null,
    defaultNumberingSystem = null,
    defaultOutputCalendar = null,
    throwOnInvalid = false;
/**
 * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.
 */


var Settings = /*#__PURE__*/function () {
  function Settings() {}

  /**
   * Reset Luxon's global caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  Settings.resetCaches = function resetCaches() {
    Locale.resetCache();
    IANAZone.resetCache();
  };

  _createClass(Settings, null, [{
    key: "now",

    /**
     * Get the callback for returning the current timestamp.
     * @type {function}
     */
    get: function get() {
      return now;
    }
    /**
     * Set the callback for returning the current timestamp.
     * The function should return a number, which will be interpreted as an Epoch millisecond count
     * @type {function}
     * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future
     * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time
     */
    ,
    set: function set(n) {
      now = n;
    }
    /**
     * Get the default time zone to create DateTimes in.
     * @type {string}
     */

  }, {
    key: "defaultZoneName",
    get: function get() {
      return Settings.defaultZone.name;
    }
    /**
     * Set the default time zone to create DateTimes in. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(z) {
      if (!z) {
        defaultZone = null;
      } else {
        defaultZone = normalizeZone(z);
      }
    }
    /**
     * Get the default time zone object to create DateTimes in. Does not affect existing instances.
     * @type {Zone}
     */

  }, {
    key: "defaultZone",
    get: function get() {
      return defaultZone || LocalZone.instance;
    }
    /**
     * Get the default locale to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultLocale",
    get: function get() {
      return defaultLocale;
    }
    /**
     * Set the default locale to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(locale) {
      defaultLocale = locale;
    }
    /**
     * Get the default numbering system to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultNumberingSystem",
    get: function get() {
      return defaultNumberingSystem;
    }
    /**
     * Set the default numbering system to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(numberingSystem) {
      defaultNumberingSystem = numberingSystem;
    }
    /**
     * Get the default output calendar to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultOutputCalendar",
    get: function get() {
      return defaultOutputCalendar;
    }
    /**
     * Set the default output calendar to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(outputCalendar) {
      defaultOutputCalendar = outputCalendar;
    }
    /**
     * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
     * @type {boolean}
     */

  }, {
    key: "throwOnInvalid",
    get: function get() {
      return throwOnInvalid;
    }
    /**
     * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
     * @type {boolean}
     */
    ,
    set: function set(t) {
      throwOnInvalid = t;
    }
  }]);

  return Settings;
}();

var intlDTCache = {};

function getCachedDTF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var key = JSON.stringify([locString, opts]);
  var dtf = intlDTCache[key];

  if (!dtf) {
    dtf = new Intl.DateTimeFormat(locString, opts);
    intlDTCache[key] = dtf;
  }

  return dtf;
}

var intlNumCache = {};

function getCachedINF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var key = JSON.stringify([locString, opts]);
  var inf = intlNumCache[key];

  if (!inf) {
    inf = new Intl.NumberFormat(locString, opts);
    intlNumCache[key] = inf;
  }

  return inf;
}

var intlRelCache = {};

function getCachedRTF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var _opts = opts,
      base = _opts.base,
      cacheKeyOpts = _objectWithoutPropertiesLoose(_opts, ["base"]); // exclude `base` from the options


  var key = JSON.stringify([locString, cacheKeyOpts]);
  var inf = intlRelCache[key];

  if (!inf) {
    inf = new Intl.RelativeTimeFormat(locString, opts);
    intlRelCache[key] = inf;
  }

  return inf;
}

var sysLocaleCache = null;

function systemLocale() {
  if (sysLocaleCache) {
    return sysLocaleCache;
  } else if (hasIntl()) {
    var computedSys = new Intl.DateTimeFormat().resolvedOptions().locale; // node sometimes defaults to "und". Override that because that is dumb

    sysLocaleCache = !computedSys || computedSys === "und" ? "en-US" : computedSys;
    return sysLocaleCache;
  } else {
    sysLocaleCache = "en-US";
    return sysLocaleCache;
  }
}

function parseLocaleString(localeStr) {
  // I really want to avoid writing a BCP 47 parser
  // see, e.g. https://github.com/wooorm/bcp-47
  // Instead, we'll do this:
  // a) if the string has no -u extensions, just leave it alone
  // b) if it does, use Intl to resolve everything
  // c) if Intl fails, try again without the -u
  var uIndex = localeStr.indexOf("-u-");

  if (uIndex === -1) {
    return [localeStr];
  } else {
    var options;
    var smaller = localeStr.substring(0, uIndex);

    try {
      options = getCachedDTF(localeStr).resolvedOptions();
    } catch (e) {
      options = getCachedDTF(smaller).resolvedOptions();
    }

    var _options = options,
        numberingSystem = _options.numberingSystem,
        calendar = _options.calendar; // return the smaller one so that we can append the calendar and numbering overrides to it

    return [smaller, numberingSystem, calendar];
  }
}

function intlConfigString(localeStr, numberingSystem, outputCalendar) {
  if (hasIntl()) {
    if (outputCalendar || numberingSystem) {
      localeStr += "-u";

      if (outputCalendar) {
        localeStr += "-ca-" + outputCalendar;
      }

      if (numberingSystem) {
        localeStr += "-nu-" + numberingSystem;
      }

      return localeStr;
    } else {
      return localeStr;
    }
  } else {
    return [];
  }
}

function mapMonths(f) {
  var ms = [];

  for (var i = 1; i <= 12; i++) {
    var dt = DateTime.utc(2016, i, 1);
    ms.push(f(dt));
  }

  return ms;
}

function mapWeekdays(f) {
  var ms = [];

  for (var i = 1; i <= 7; i++) {
    var dt = DateTime.utc(2016, 11, 13 + i);
    ms.push(f(dt));
  }

  return ms;
}

function listStuff(loc, length, defaultOK, englishFn, intlFn) {
  var mode = loc.listingMode(defaultOK);

  if (mode === "error") {
    return null;
  } else if (mode === "en") {
    return englishFn(length);
  } else {
    return intlFn(length);
  }
}

function supportsFastNumbers(loc) {
  if (loc.numberingSystem && loc.numberingSystem !== "latn") {
    return false;
  } else {
    return loc.numberingSystem === "latn" || !loc.locale || loc.locale.startsWith("en") || hasIntl() && new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === "latn";
  }
}
/**
 * @private
 */


var PolyNumberFormatter = /*#__PURE__*/function () {
  function PolyNumberFormatter(intl, forceSimple, opts) {
    this.padTo = opts.padTo || 0;
    this.floor = opts.floor || false;

    if (!forceSimple && hasIntl()) {
      var intlOpts = {
        useGrouping: false
      };
      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;
      this.inf = getCachedINF(intl, intlOpts);
    }
  }

  var _proto = PolyNumberFormatter.prototype;

  _proto.format = function format(i) {
    if (this.inf) {
      var fixed = this.floor ? Math.floor(i) : i;
      return this.inf.format(fixed);
    } else {
      // to match the browser's numberformatter defaults
      var _fixed = this.floor ? Math.floor(i) : roundTo(i, 3);

      return padStart(_fixed, this.padTo);
    }
  };

  return PolyNumberFormatter;
}();
/**
 * @private
 */


var PolyDateFormatter = /*#__PURE__*/function () {
  function PolyDateFormatter(dt, intl, opts) {
    this.opts = opts;
    this.hasIntl = hasIntl();
    var z;

    if (dt.zone.universal && this.hasIntl) {
      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.
      // That is why fixed-offset TZ is set to that unless it is:
      // 1. Outside of the supported range Etc/GMT-14 to Etc/GMT+12.
      // 2. Not a whole hour, e.g. UTC+4:30.
      var gmtOffset = -1 * (dt.offset / 60);

      if (gmtOffset >= -14 && gmtOffset <= 12 && gmtOffset % 1 === 0) {
        z = gmtOffset >= 0 ? "Etc/GMT+" + gmtOffset : "Etc/GMT" + gmtOffset;
        this.dt = dt;
      } else {
        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata.
        // So we have to make do. Two cases:
        // 1. The format options tell us to show the zone. We can't do that, so the best
        // we can do is format the date in UTC.
        // 2. The format options don't tell us to show the zone. Then we can adjust them
        // the time and tell the formatter to show it to us in UTC, so that the time is right
        // and the bad zone doesn't show up.
        z = "UTC";

        if (opts.timeZoneName) {
          this.dt = dt;
        } else {
          this.dt = dt.offset === 0 ? dt : DateTime.fromMillis(dt.ts + dt.offset * 60 * 1000);
        }
      }
    } else if (dt.zone.type === "local") {
      this.dt = dt;
    } else {
      this.dt = dt;
      z = dt.zone.name;
    }

    if (this.hasIntl) {
      var intlOpts = Object.assign({}, this.opts);

      if (z) {
        intlOpts.timeZone = z;
      }

      this.dtf = getCachedDTF(intl, intlOpts);
    }
  }

  var _proto2 = PolyDateFormatter.prototype;

  _proto2.format = function format() {
    if (this.hasIntl) {
      return this.dtf.format(this.dt.toJSDate());
    } else {
      var tokenFormat = formatString(this.opts),
          loc = Locale.create("en-US");
      return Formatter.create(loc).formatDateTimeFromString(this.dt, tokenFormat);
    }
  };

  _proto2.formatToParts = function formatToParts() {
    if (this.hasIntl && hasFormatToParts()) {
      return this.dtf.formatToParts(this.dt.toJSDate());
    } else {
      // This is kind of a cop out. We actually could do this for English. However, we couldn't do it for intl strings
      // and IMO it's too weird to have an uncanny valley like that
      return [];
    }
  };

  _proto2.resolvedOptions = function resolvedOptions() {
    if (this.hasIntl) {
      return this.dtf.resolvedOptions();
    } else {
      return {
        locale: "en-US",
        numberingSystem: "latn",
        outputCalendar: "gregory"
      };
    }
  };

  return PolyDateFormatter;
}();
/**
 * @private
 */


var PolyRelFormatter = /*#__PURE__*/function () {
  function PolyRelFormatter(intl, isEnglish, opts) {
    this.opts = Object.assign({
      style: "long"
    }, opts);

    if (!isEnglish && hasRelative()) {
      this.rtf = getCachedRTF(intl, opts);
    }
  }

  var _proto3 = PolyRelFormatter.prototype;

  _proto3.format = function format(count, unit) {
    if (this.rtf) {
      return this.rtf.format(count, unit);
    } else {
      return formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== "long");
    }
  };

  _proto3.formatToParts = function formatToParts(count, unit) {
    if (this.rtf) {
      return this.rtf.formatToParts(count, unit);
    } else {
      return [];
    }
  };

  return PolyRelFormatter;
}();
/**
 * @private
 */


var Locale = /*#__PURE__*/function () {
  Locale.fromOpts = function fromOpts(opts) {
    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);
  };

  Locale.create = function create(locale, numberingSystem, outputCalendar, defaultToEN) {
    if (defaultToEN === void 0) {
      defaultToEN = false;
    }

    var specifiedLocale = locale || Settings.defaultLocale,
        // the system locale is useful for human readable strings but annoying for parsing/formatting known formats
    localeR = specifiedLocale || (defaultToEN ? "en-US" : systemLocale()),
        numberingSystemR = numberingSystem || Settings.defaultNumberingSystem,
        outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;
    return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);
  };

  Locale.resetCache = function resetCache() {
    sysLocaleCache = null;
    intlDTCache = {};
    intlNumCache = {};
    intlRelCache = {};
  };

  Locale.fromObject = function fromObject(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        locale = _ref.locale,
        numberingSystem = _ref.numberingSystem,
        outputCalendar = _ref.outputCalendar;

    return Locale.create(locale, numberingSystem, outputCalendar);
  };

  function Locale(locale, numbering, outputCalendar, specifiedLocale) {
    var _parseLocaleString = parseLocaleString(locale),
        parsedLocale = _parseLocaleString[0],
        parsedNumberingSystem = _parseLocaleString[1],
        parsedOutputCalendar = _parseLocaleString[2];

    this.locale = parsedLocale;
    this.numberingSystem = numbering || parsedNumberingSystem || null;
    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;
    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);
    this.weekdaysCache = {
      format: {},
      standalone: {}
    };
    this.monthsCache = {
      format: {},
      standalone: {}
    };
    this.meridiemCache = null;
    this.eraCache = {};
    this.specifiedLocale = specifiedLocale;
    this.fastNumbersCached = null;
  }

  var _proto4 = Locale.prototype;

  _proto4.listingMode = function listingMode(defaultOK) {
    if (defaultOK === void 0) {
      defaultOK = true;
    }

    var intl = hasIntl(),
        hasFTP = intl && hasFormatToParts(),
        isActuallyEn = this.isEnglish(),
        hasNoWeirdness = (this.numberingSystem === null || this.numberingSystem === "latn") && (this.outputCalendar === null || this.outputCalendar === "gregory");

    if (!hasFTP && !(isActuallyEn && hasNoWeirdness) && !defaultOK) {
      return "error";
    } else if (!hasFTP || isActuallyEn && hasNoWeirdness) {
      return "en";
    } else {
      return "intl";
    }
  };

  _proto4.clone = function clone(alts) {
    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {
      return this;
    } else {
      return Locale.create(alts.locale || this.specifiedLocale, alts.numberingSystem || this.numberingSystem, alts.outputCalendar || this.outputCalendar, alts.defaultToEN || false);
    }
  };

  _proto4.redefaultToEN = function redefaultToEN(alts) {
    if (alts === void 0) {
      alts = {};
    }

    return this.clone(Object.assign({}, alts, {
      defaultToEN: true
    }));
  };

  _proto4.redefaultToSystem = function redefaultToSystem(alts) {
    if (alts === void 0) {
      alts = {};
    }

    return this.clone(Object.assign({}, alts, {
      defaultToEN: false
    }));
  };

  _proto4.months = function months$1(length, format, defaultOK) {
    var _this = this;

    if (format === void 0) {
      format = false;
    }

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, months, function () {
      var intl = format ? {
        month: length,
        day: "numeric"
      } : {
        month: length
      },
          formatStr = format ? "format" : "standalone";

      if (!_this.monthsCache[formatStr][length]) {
        _this.monthsCache[formatStr][length] = mapMonths(function (dt) {
          return _this.extract(dt, intl, "month");
        });
      }

      return _this.monthsCache[formatStr][length];
    });
  };

  _proto4.weekdays = function weekdays$1(length, format, defaultOK) {
    var _this2 = this;

    if (format === void 0) {
      format = false;
    }

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, weekdays, function () {
      var intl = format ? {
        weekday: length,
        year: "numeric",
        month: "long",
        day: "numeric"
      } : {
        weekday: length
      },
          formatStr = format ? "format" : "standalone";

      if (!_this2.weekdaysCache[formatStr][length]) {
        _this2.weekdaysCache[formatStr][length] = mapWeekdays(function (dt) {
          return _this2.extract(dt, intl, "weekday");
        });
      }

      return _this2.weekdaysCache[formatStr][length];
    });
  };

  _proto4.meridiems = function meridiems$1(defaultOK) {
    var _this3 = this;

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, undefined, defaultOK, function () {
      return meridiems;
    }, function () {
      // In theory there could be aribitrary day periods. We're gonna assume there are exactly two
      // for AM and PM. This is probably wrong, but it's makes parsing way easier.
      if (!_this3.meridiemCache) {
        var intl = {
          hour: "numeric",
          hour12: true
        };
        _this3.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(function (dt) {
          return _this3.extract(dt, intl, "dayperiod");
        });
      }

      return _this3.meridiemCache;
    });
  };

  _proto4.eras = function eras$1(length, defaultOK) {
    var _this4 = this;

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, eras, function () {
      var intl = {
        era: length
      }; // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates
      // to definitely enumerate them.

      if (!_this4.eraCache[length]) {
        _this4.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map(function (dt) {
          return _this4.extract(dt, intl, "era");
        });
      }

      return _this4.eraCache[length];
    });
  };

  _proto4.extract = function extract(dt, intlOpts, field) {
    var df = this.dtFormatter(dt, intlOpts),
        results = df.formatToParts(),
        matching = results.find(function (m) {
      return m.type.toLowerCase() === field;
    });
    return matching ? matching.value : null;
  };

  _proto4.numberFormatter = function numberFormatter(opts) {
    if (opts === void 0) {
      opts = {};
    }

    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)
    // (in contrast, the rest of the condition is used heavily)
    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);
  };

  _proto4.dtFormatter = function dtFormatter(dt, intlOpts) {
    if (intlOpts === void 0) {
      intlOpts = {};
    }

    return new PolyDateFormatter(dt, this.intl, intlOpts);
  };

  _proto4.relFormatter = function relFormatter(opts) {
    if (opts === void 0) {
      opts = {};
    }

    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);
  };

  _proto4.isEnglish = function isEnglish() {
    return this.locale === "en" || this.locale.toLowerCase() === "en-us" || hasIntl() && new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us");
  };

  _proto4.equals = function equals(other) {
    return this.locale === other.locale && this.numberingSystem === other.numberingSystem && this.outputCalendar === other.outputCalendar;
  };

  _createClass(Locale, [{
    key: "fastNumbers",
    get: function get() {
      if (this.fastNumbersCached == null) {
        this.fastNumbersCached = supportsFastNumbers(this);
      }

      return this.fastNumbersCached;
    }
  }]);

  return Locale;
}();

/*
 * This file handles parsing for well-specified formats. Here's how it works:
 * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.
 * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object
 * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.
 * Extractors can take a "cursor" representing the offset in the match to look at. This makes it easy to combine extractors.
 * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.
 * Some extractions are super dumb and simpleParse and fromStrings help DRY them.
 */

function combineRegexes() {
  for (var _len = arguments.length, regexes = new Array(_len), _key = 0; _key < _len; _key++) {
    regexes[_key] = arguments[_key];
  }

  var full = regexes.reduce(function (f, r) {
    return f + r.source;
  }, "");
  return RegExp("^" + full + "$");
}

function combineExtractors() {
  for (var _len2 = arguments.length, extractors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    extractors[_key2] = arguments[_key2];
  }

  return function (m) {
    return extractors.reduce(function (_ref, ex) {
      var mergedVals = _ref[0],
          mergedZone = _ref[1],
          cursor = _ref[2];

      var _ex = ex(m, cursor),
          val = _ex[0],
          zone = _ex[1],
          next = _ex[2];

      return [Object.assign(mergedVals, val), mergedZone || zone, next];
    }, [{}, null, 1]).slice(0, 2);
  };
}

function parse(s) {
  if (s == null) {
    return [null, null];
  }

  for (var _len3 = arguments.length, patterns = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    patterns[_key3 - 1] = arguments[_key3];
  }

  for (var _i = 0, _patterns = patterns; _i < _patterns.length; _i++) {
    var _patterns$_i = _patterns[_i],
        regex = _patterns$_i[0],
        extractor = _patterns$_i[1];
    var m = regex.exec(s);

    if (m) {
      return extractor(m);
    }
  }

  return [null, null];
}

function simpleParse() {
  for (var _len4 = arguments.length, keys = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    keys[_key4] = arguments[_key4];
  }

  return function (match, cursor) {
    var ret = {};
    var i;

    for (i = 0; i < keys.length; i++) {
      ret[keys[i]] = parseInteger(match[cursor + i]);
    }

    return [ret, null, cursor + i];
  };
} // ISO and SQL parsing


var offsetRegex = /(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,
    isoTimeBaseRegex = /(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,
    isoTimeRegex = RegExp("" + isoTimeBaseRegex.source + offsetRegex.source + "?"),
    isoTimeExtensionRegex = RegExp("(?:T" + isoTimeRegex.source + ")?"),
    isoYmdRegex = /([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,
    isoWeekRegex = /(\d{4})-?W(\d\d)(?:-?(\d))?/,
    isoOrdinalRegex = /(\d{4})-?(\d{3})/,
    extractISOWeekData = simpleParse("weekYear", "weekNumber", "weekDay"),
    extractISOOrdinalData = simpleParse("year", "ordinal"),
    sqlYmdRegex = /(\d{4})-(\d\d)-(\d\d)/,
    // dumbed-down version of the ISO one
sqlTimeRegex = RegExp(isoTimeBaseRegex.source + " ?(?:" + offsetRegex.source + "|(" + ianaRegex.source + "))?"),
    sqlTimeExtensionRegex = RegExp("(?: " + sqlTimeRegex.source + ")?");

function int(match, pos, fallback) {
  var m = match[pos];
  return isUndefined(m) ? fallback : parseInteger(m);
}

function extractISOYmd(match, cursor) {
  var item = {
    year: int(match, cursor),
    month: int(match, cursor + 1, 1),
    day: int(match, cursor + 2, 1)
  };
  return [item, null, cursor + 3];
}

function extractISOTime(match, cursor) {
  var item = {
    hours: int(match, cursor, 0),
    minutes: int(match, cursor + 1, 0),
    seconds: int(match, cursor + 2, 0),
    milliseconds: parseMillis(match[cursor + 3])
  };
  return [item, null, cursor + 4];
}

function extractISOOffset(match, cursor) {
  var local = !match[cursor] && !match[cursor + 1],
      fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),
      zone = local ? null : FixedOffsetZone.instance(fullOffset);
  return [{}, zone, cursor + 3];
}

function extractIANAZone(match, cursor) {
  var zone = match[cursor] ? IANAZone.create(match[cursor]) : null;
  return [{}, zone, cursor + 1];
} // ISO time parsing


var isoTimeOnly = RegExp("^T?" + isoTimeBaseRegex.source + "$"); // ISO duration parsing

var isoDuration = /^-?P(?:(?:(-?\d{1,9})Y)?(?:(-?\d{1,9})M)?(?:(-?\d{1,9})W)?(?:(-?\d{1,9})D)?(?:T(?:(-?\d{1,9})H)?(?:(-?\d{1,9})M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,9}))?S)?)?)$/;

function extractISODuration(match) {
  var s = match[0],
      yearStr = match[1],
      monthStr = match[2],
      weekStr = match[3],
      dayStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      millisecondsStr = match[8];
  var hasNegativePrefix = s[0] === "-";

  var maybeNegate = function maybeNegate(num) {
    return num && hasNegativePrefix ? -num : num;
  };

  return [{
    years: maybeNegate(parseInteger(yearStr)),
    months: maybeNegate(parseInteger(monthStr)),
    weeks: maybeNegate(parseInteger(weekStr)),
    days: maybeNegate(parseInteger(dayStr)),
    hours: maybeNegate(parseInteger(hourStr)),
    minutes: maybeNegate(parseInteger(minuteStr)),
    seconds: maybeNegate(parseInteger(secondStr)),
    milliseconds: maybeNegate(parseMillis(millisecondsStr))
  }];
} // These are a little braindead. EDT *should* tell us that we're in, say, America/New_York
// and not just that we're in -240 *right now*. But since I don't think these are used that often
// I'm just going to ignore that


var obsOffsets = {
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};

function fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  var result = {
    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),
    month: monthsShort.indexOf(monthStr) + 1,
    day: parseInteger(dayStr),
    hour: parseInteger(hourStr),
    minute: parseInteger(minuteStr)
  };
  if (secondStr) result.second = parseInteger(secondStr);

  if (weekdayStr) {
    result.weekday = weekdayStr.length > 3 ? weekdaysLong.indexOf(weekdayStr) + 1 : weekdaysShort.indexOf(weekdayStr) + 1;
  }

  return result;
} // RFC 2822/5322


var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;

function extractRFC2822(match) {
  var weekdayStr = match[1],
      dayStr = match[2],
      monthStr = match[3],
      yearStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      obsOffset = match[8],
      milOffset = match[9],
      offHourStr = match[10],
      offMinuteStr = match[11],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  var offset;

  if (obsOffset) {
    offset = obsOffsets[obsOffset];
  } else if (milOffset) {
    offset = 0;
  } else {
    offset = signedOffset(offHourStr, offMinuteStr);
  }

  return [result, new FixedOffsetZone(offset)];
}

function preprocessRFC2822(s) {
  // Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").trim();
} // http date


var rfc1123 = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,
    rfc850 = /^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,
    ascii = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;

function extractRFC1123Or850(match) {
  var weekdayStr = match[1],
      dayStr = match[2],
      monthStr = match[3],
      yearStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}

function extractASCII(match) {
  var weekdayStr = match[1],
      monthStr = match[2],
      dayStr = match[3],
      hourStr = match[4],
      minuteStr = match[5],
      secondStr = match[6],
      yearStr = match[7],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}

var isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);
var isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);
var isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);
var isoTimeCombinedRegex = combineRegexes(isoTimeRegex);
var extractISOYmdTimeAndOffset = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset);
var extractISOWeekTimeAndOffset = combineExtractors(extractISOWeekData, extractISOTime, extractISOOffset);
var extractISOOrdinalDataAndTime = combineExtractors(extractISOOrdinalData, extractISOTime);
var extractISOTimeAndOffset = combineExtractors(extractISOTime, extractISOOffset);
/**
 * @private
 */

function parseISODate(s) {
  return parse(s, [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset], [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset], [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDataAndTime], [isoTimeCombinedRegex, extractISOTimeAndOffset]);
}
function parseRFC2822Date(s) {
  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);
}
function parseHTTPDate(s) {
  return parse(s, [rfc1123, extractRFC1123Or850], [rfc850, extractRFC1123Or850], [ascii, extractASCII]);
}
function parseISODuration(s) {
  return parse(s, [isoDuration, extractISODuration]);
}
var extractISOTimeOnly = combineExtractors(extractISOTime);
function parseISOTimeOnly(s) {
  return parse(s, [isoTimeOnly, extractISOTimeOnly]);
}
var sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);
var sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);
var extractISOYmdTimeOffsetAndIANAZone = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset, extractIANAZone);
var extractISOTimeOffsetAndIANAZone = combineExtractors(extractISOTime, extractISOOffset, extractIANAZone);
function parseSQL(s) {
  return parse(s, [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeOffsetAndIANAZone], [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]);
}

var INVALID = "Invalid Duration"; // unit conversion constants

var lowOrderMatrix = {
  weeks: {
    days: 7,
    hours: 7 * 24,
    minutes: 7 * 24 * 60,
    seconds: 7 * 24 * 60 * 60,
    milliseconds: 7 * 24 * 60 * 60 * 1000
  },
  days: {
    hours: 24,
    minutes: 24 * 60,
    seconds: 24 * 60 * 60,
    milliseconds: 24 * 60 * 60 * 1000
  },
  hours: {
    minutes: 60,
    seconds: 60 * 60,
    milliseconds: 60 * 60 * 1000
  },
  minutes: {
    seconds: 60,
    milliseconds: 60 * 1000
  },
  seconds: {
    milliseconds: 1000
  }
},
    casualMatrix = Object.assign({
  years: {
    quarters: 4,
    months: 12,
    weeks: 52,
    days: 365,
    hours: 365 * 24,
    minutes: 365 * 24 * 60,
    seconds: 365 * 24 * 60 * 60,
    milliseconds: 365 * 24 * 60 * 60 * 1000
  },
  quarters: {
    months: 3,
    weeks: 13,
    days: 91,
    hours: 91 * 24,
    minutes: 91 * 24 * 60,
    seconds: 91 * 24 * 60 * 60,
    milliseconds: 91 * 24 * 60 * 60 * 1000
  },
  months: {
    weeks: 4,
    days: 30,
    hours: 30 * 24,
    minutes: 30 * 24 * 60,
    seconds: 30 * 24 * 60 * 60,
    milliseconds: 30 * 24 * 60 * 60 * 1000
  }
}, lowOrderMatrix),
    daysInYearAccurate = 146097.0 / 400,
    daysInMonthAccurate = 146097.0 / 4800,
    accurateMatrix = Object.assign({
  years: {
    quarters: 4,
    months: 12,
    weeks: daysInYearAccurate / 7,
    days: daysInYearAccurate,
    hours: daysInYearAccurate * 24,
    minutes: daysInYearAccurate * 24 * 60,
    seconds: daysInYearAccurate * 24 * 60 * 60,
    milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000
  },
  quarters: {
    months: 3,
    weeks: daysInYearAccurate / 28,
    days: daysInYearAccurate / 4,
    hours: daysInYearAccurate * 24 / 4,
    minutes: daysInYearAccurate * 24 * 60 / 4,
    seconds: daysInYearAccurate * 24 * 60 * 60 / 4,
    milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000 / 4
  },
  months: {
    weeks: daysInMonthAccurate / 7,
    days: daysInMonthAccurate,
    hours: daysInMonthAccurate * 24,
    minutes: daysInMonthAccurate * 24 * 60,
    seconds: daysInMonthAccurate * 24 * 60 * 60,
    milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000
  }
}, lowOrderMatrix); // units ordered by size

var orderedUnits = ["years", "quarters", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds"];
var reverseUnits = orderedUnits.slice(0).reverse(); // clone really means "create another instance just like this one, but with these changes"

function clone(dur, alts, clear) {
  if (clear === void 0) {
    clear = false;
  }

  // deep merge for vals
  var conf = {
    values: clear ? alts.values : Object.assign({}, dur.values, alts.values || {}),
    loc: dur.loc.clone(alts.loc),
    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy
  };
  return new Duration(conf);
}

function antiTrunc(n) {
  return n < 0 ? Math.floor(n) : Math.ceil(n);
} // NB: mutates parameters


function convert(matrix, fromMap, fromUnit, toMap, toUnit) {
  var conv = matrix[toUnit][fromUnit],
      raw = fromMap[fromUnit] / conv,
      sameSign = Math.sign(raw) === Math.sign(toMap[toUnit]),
      // ok, so this is wild, but see the matrix in the tests
  added = !sameSign && toMap[toUnit] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);
  toMap[toUnit] += added;
  fromMap[fromUnit] -= added * conv;
} // NB: mutates parameters


function normalizeValues(matrix, vals) {
  reverseUnits.reduce(function (previous, current) {
    if (!isUndefined(vals[current])) {
      if (previous) {
        convert(matrix, vals, previous, vals, current);
      }

      return current;
    } else {
      return previous;
    }
  }, null);
}
/**
 * A Duration object represents a period of time, like "2 months" or "1 day, 1 hour". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime.plus} to add a Duration object to a DateTime, producing another DateTime.
 *
 * Here is a brief overview of commonly used methods and getters in Duration:
 *
 * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.
 * * **Unit values** See the {@link Duration.years}, {@link Duration.months}, {@link Duration.weeks}, {@link Duration.days}, {@link Duration.hours}, {@link Duration.minutes}, {@link Duration.seconds}, {@link Duration.milliseconds} accessors.
 * * **Configuration** See  {@link Duration.locale} and {@link Duration.numberingSystem} accessors.
 * * **Transformation** To create new Durations out of old ones use {@link Duration.plus}, {@link Duration.minus}, {@link Duration.normalize}, {@link Duration.set}, {@link Duration.reconfigure}, {@link Duration.shiftTo}, and {@link Duration.negate}.
 * * **Output** To convert the Duration into other representations, see {@link Duration.as}, {@link Duration.toISO}, {@link Duration.toFormat}, and {@link Duration.toJSON}
 *
 * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.
 */


var Duration = /*#__PURE__*/function () {
  /**
   * @private
   */
  function Duration(config) {
    var accurate = config.conversionAccuracy === "longterm" || false;
    /**
     * @access private
     */

    this.values = config.values;
    /**
     * @access private
     */

    this.loc = config.loc || Locale.create();
    /**
     * @access private
     */

    this.conversionAccuracy = accurate ? "longterm" : "casual";
    /**
     * @access private
     */

    this.invalid = config.invalid || null;
    /**
     * @access private
     */

    this.matrix = accurate ? accurateMatrix : casualMatrix;
    /**
     * @access private
     */

    this.isLuxonDuration = true;
  }
  /**
   * Create Duration from a number of milliseconds.
   * @param {number} count of milliseconds
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */


  Duration.fromMillis = function fromMillis(count, opts) {
    return Duration.fromObject(Object.assign({
      milliseconds: count
    }, opts));
  }
  /**
   * Create a Duration from a JavaScript object with keys like 'years' and 'hours.
   * If this object is empty then a zero milliseconds duration is returned.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.years
   * @param {number} obj.quarters
   * @param {number} obj.months
   * @param {number} obj.weeks
   * @param {number} obj.days
   * @param {number} obj.hours
   * @param {number} obj.minutes
   * @param {number} obj.seconds
   * @param {number} obj.milliseconds
   * @param {string} [obj.locale='en-US'] - the locale to use
   * @param {string} obj.numberingSystem - the numbering system to use
   * @param {string} [obj.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  ;

  Duration.fromObject = function fromObject(obj) {
    if (obj == null || typeof obj !== "object") {
      throw new InvalidArgumentError("Duration.fromObject: argument expected to be an object, got " + (obj === null ? "null" : typeof obj));
    }

    return new Duration({
      values: normalizeObject(obj, Duration.normalizeUnit, ["locale", "numberingSystem", "conversionAccuracy", "zone" // a bit of debt; it's super inconvenient internally not to be able to blindly pass this
      ]),
      loc: Locale.fromObject(obj),
      conversionAccuracy: obj.conversionAccuracy
    });
  }
  /**
   * Create a Duration from an ISO 8601 duration string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }
   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }
   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }
   * @return {Duration}
   */
  ;

  Duration.fromISO = function fromISO(text, opts) {
    var _parseISODuration = parseISODuration(text),
        parsed = _parseISODuration[0];

    if (parsed) {
      var obj = Object.assign(parsed, opts);
      return Duration.fromObject(obj);
    } else {
      return Duration.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
    }
  }
  /**
   * Create a Duration from an ISO 8601 time string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }
   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @return {Duration}
   */
  ;

  Duration.fromISOTime = function fromISOTime(text, opts) {
    var _parseISOTimeOnly = parseISOTimeOnly(text),
        parsed = _parseISOTimeOnly[0];

    if (parsed) {
      var obj = Object.assign(parsed, opts);
      return Duration.fromObject(obj);
    } else {
      return Duration.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
    }
  }
  /**
   * Create an invalid Duration.
   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Duration}
   */
  ;

  Duration.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the Duration is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidDurationError(invalid);
    } else {
      return new Duration({
        invalid: invalid
      });
    }
  }
  /**
   * @private
   */
  ;

  Duration.normalizeUnit = function normalizeUnit(unit) {
    var normalized = {
      year: "years",
      years: "years",
      quarter: "quarters",
      quarters: "quarters",
      month: "months",
      months: "months",
      week: "weeks",
      weeks: "weeks",
      day: "days",
      days: "days",
      hour: "hours",
      hours: "hours",
      minute: "minutes",
      minutes: "minutes",
      second: "seconds",
      seconds: "seconds",
      millisecond: "milliseconds",
      milliseconds: "milliseconds"
    }[unit ? unit.toLowerCase() : unit];
    if (!normalized) throw new InvalidUnitError(unit);
    return normalized;
  }
  /**
   * Check if an object is a Duration. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  Duration.isDuration = function isDuration(o) {
    return o && o.isLuxonDuration || false;
  }
  /**
   * Get  the locale of a Duration, such 'en-GB'
   * @type {string}
   */
  ;

  var _proto = Duration.prototype;

  /**
   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:
   * * `S` for milliseconds
   * * `s` for seconds
   * * `m` for minutes
   * * `h` for hours
   * * `d` for days
   * * `M` for months
   * * `y` for years
   * Notes:
   * * Add padding by repeating the token, e.g. "yy" pads the years to two digits, "hhhh" pads the hours out to four digits
   * * The duration will be converted to the set of units in the format string using {@link Duration.shiftTo} and the Durations's conversion accuracy setting.
   * @param {string} fmt - the format string
   * @param {Object} opts - options
   * @param {boolean} [opts.floor=true] - floor numerical values
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("y d s") //=> "1 6 2"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("yy dd sss") //=> "01 06 002"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("M S") //=> "12 518402000"
   * @return {string}
   */
  _proto.toFormat = function toFormat(fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    // reverse-compat since 1.2; we always round down now, never up, and we do it by default
    var fmtOpts = Object.assign({}, opts, {
      floor: opts.round !== false && opts.floor !== false
    });
    return this.isValid ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt) : INVALID;
  }
  /**
   * Returns a JavaScript object with this Duration's values.
   * @param opts - options for generating the object
   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }
   * @return {Object}
   */
  ;

  _proto.toObject = function toObject(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return {};
    var base = Object.assign({}, this.values);

    if (opts.includeConfig) {
      base.conversionAccuracy = this.conversionAccuracy;
      base.numberingSystem = this.loc.numberingSystem;
      base.locale = this.loc.locale;
    }

    return base;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'
   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'
   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'
   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'
   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'
   * @return {string}
   */
  ;

  _proto.toISO = function toISO() {
    // we could use the formatter, but this is an easier way to get the minimum string
    if (!this.isValid) return null;
    var s = "P";
    if (this.years !== 0) s += this.years + "Y";
    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + "M";
    if (this.weeks !== 0) s += this.weeks + "W";
    if (this.days !== 0) s += this.days + "D";
    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0) s += "T";
    if (this.hours !== 0) s += this.hours + "H";
    if (this.minutes !== 0) s += this.minutes + "M";
    if (this.seconds !== 0 || this.milliseconds !== 0) // this will handle "floating point madness" by removing extra decimal places
      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken
      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + "S";
    if (s === "P") s += "T0S";
    return s;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.
   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return null;
    var millis = this.toMillis();
    if (millis < 0 || millis >= 86400000) return null;
    opts = Object.assign({
      suppressMilliseconds: false,
      suppressSeconds: false,
      includePrefix: false,
      format: "extended"
    }, opts);
    var value = this.shiftTo("hours", "minutes", "seconds", "milliseconds");
    var fmt = opts.format === "basic" ? "hhmm" : "hh:mm";

    if (!opts.suppressSeconds || value.seconds !== 0 || value.milliseconds !== 0) {
      fmt += opts.format === "basic" ? "ss" : ":ss";

      if (!opts.suppressMilliseconds || value.milliseconds !== 0) {
        fmt += ".SSS";
      }
    }

    var str = value.toFormat(fmt);

    if (opts.includePrefix) {
      str = "T" + str;
    }

    return str;
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.
   * @return {string}
   */
  ;

  _proto.toJSON = function toJSON() {
    return this.toISO();
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    return this.toISO();
  }
  /**
   * Returns an milliseconds value of this Duration.
   * @return {number}
   */
  ;

  _proto.toMillis = function toMillis() {
    return this.as("milliseconds");
  }
  /**
   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}
   * @return {number}
   */
  ;

  _proto.valueOf = function valueOf() {
    return this.toMillis();
  }
  /**
   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  ;

  _proto.plus = function plus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration),
        result = {};

    for (var _iterator = _createForOfIteratorHelperLoose(orderedUnits), _step; !(_step = _iterator()).done;) {
      var k = _step.value;

      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {
        result[k] = dur.get(k) + this.get(k);
      }
    }

    return clone(this, {
      values: result
    }, true);
  }
  /**
   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  ;

  _proto.minus = function minus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration);
    return this.plus(dur.negate());
  }
  /**
   * Scale this Duration by the specified amount. Return a newly-constructed Duration.
   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit(x => x * 2) //=> { hours: 2, minutes: 60 }
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit((x, u) => u === "hour" ? x * 2 : x) //=> { hours: 2, minutes: 30 }
   * @return {Duration}
   */
  ;

  _proto.mapUnits = function mapUnits(fn) {
    if (!this.isValid) return this;
    var result = {};

    for (var _i = 0, _Object$keys = Object.keys(this.values); _i < _Object$keys.length; _i++) {
      var k = _Object$keys[_i];
      result[k] = asNumber(fn(this.values[k], k));
    }

    return clone(this, {
      values: result
    }, true);
  }
  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example Duration.fromObject({years: 2, days: 3}).years //=> 2
   * @example Duration.fromObject({years: 2, days: 3}).months //=> 0
   * @example Duration.fromObject({years: 2, days: 3}).days //=> 3
   * @return {number}
   */
  ;

  _proto.get = function get(unit) {
    return this[Duration.normalizeUnit(unit)];
  }
  /**
   * "Set" the values of specified units. Return a newly-constructed Duration.
   * @param {Object} values - a mapping of units to numbers
   * @example dur.set({ years: 2017 })
   * @example dur.set({ hours: 8, minutes: 30 })
   * @return {Duration}
   */
  ;

  _proto.set = function set(values) {
    if (!this.isValid) return this;
    var mixed = Object.assign(this.values, normalizeObject(values, Duration.normalizeUnit, []));
    return clone(this, {
      values: mixed
    });
  }
  /**
   * "Set" the locale and/or numberingSystem.  Returns a newly-constructed Duration.
   * @example dur.reconfigure({ locale: 'en-GB' })
   * @return {Duration}
   */
  ;

  _proto.reconfigure = function reconfigure(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        locale = _ref.locale,
        numberingSystem = _ref.numberingSystem,
        conversionAccuracy = _ref.conversionAccuracy;

    var loc = this.loc.clone({
      locale: locale,
      numberingSystem: numberingSystem
    }),
        opts = {
      loc: loc
    };

    if (conversionAccuracy) {
      opts.conversionAccuracy = conversionAccuracy;
    }

    return clone(this, opts);
  }
  /**
   * Return the length of the duration in the specified unit.
   * @param {string} unit - a unit such as 'minutes' or 'days'
   * @example Duration.fromObject({years: 1}).as('days') //=> 365
   * @example Duration.fromObject({years: 1}).as('months') //=> 12
   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5
   * @return {number}
   */
  ;

  _proto.as = function as(unit) {
    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;
  }
  /**
   * Reduce this Duration to its canonical representation in its current units.
   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }
   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }
   * @return {Duration}
   */
  ;

  _proto.normalize = function normalize() {
    if (!this.isValid) return this;
    var vals = this.toObject();
    normalizeValues(this.matrix, vals);
    return clone(this, {
      values: vals
    }, true);
  }
  /**
   * Convert this Duration into its representation in a different set of units.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }
   * @return {Duration}
   */
  ;

  _proto.shiftTo = function shiftTo() {
    for (var _len = arguments.length, units = new Array(_len), _key = 0; _key < _len; _key++) {
      units[_key] = arguments[_key];
    }

    if (!this.isValid) return this;

    if (units.length === 0) {
      return this;
    }

    units = units.map(function (u) {
      return Duration.normalizeUnit(u);
    });
    var built = {},
        accumulated = {},
        vals = this.toObject();
    var lastUnit;

    for (var _iterator2 = _createForOfIteratorHelperLoose(orderedUnits), _step2; !(_step2 = _iterator2()).done;) {
      var k = _step2.value;

      if (units.indexOf(k) >= 0) {
        lastUnit = k;
        var own = 0; // anything we haven't boiled down yet should get boiled to this unit

        for (var ak in accumulated) {
          own += this.matrix[ak][k] * accumulated[ak];
          accumulated[ak] = 0;
        } // plus anything that's already in this unit


        if (isNumber(vals[k])) {
          own += vals[k];
        }

        var i = Math.trunc(own);
        built[k] = i;
        accumulated[k] = own - i; // we'd like to absorb these fractions in another unit
        // plus anything further down the chain that should be rolled up in to this

        for (var down in vals) {
          if (orderedUnits.indexOf(down) > orderedUnits.indexOf(k)) {
            convert(this.matrix, vals, down, built, k);
          }
        } // otherwise, keep it in the wings to boil it later

      } else if (isNumber(vals[k])) {
        accumulated[k] = vals[k];
      }
    } // anything leftover becomes the decimal for the last unit
    // lastUnit must be defined since units is not empty


    for (var key in accumulated) {
      if (accumulated[key] !== 0) {
        built[lastUnit] += key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];
      }
    }

    return clone(this, {
      values: built
    }, true).normalize();
  }
  /**
   * Return the negative of this Duration.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }
   * @return {Duration}
   */
  ;

  _proto.negate = function negate() {
    if (!this.isValid) return this;
    var negated = {};

    for (var _i2 = 0, _Object$keys2 = Object.keys(this.values); _i2 < _Object$keys2.length; _i2++) {
      var k = _Object$keys2[_i2];
      negated[k] = -this.values[k];
    }

    return clone(this, {
      values: negated
    }, true);
  }
  /**
   * Get the years.
   * @type {number}
   */
  ;

  /**
   * Equality check
   * Two Durations are equal iff they have the same units and the same values for each unit.
   * @param {Duration} other
   * @return {boolean}
   */
  _proto.equals = function equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }

    if (!this.loc.equals(other.loc)) {
      return false;
    }

    function eq(v1, v2) {
      // Consider 0 and undefined as equal
      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;
      return v1 === v2;
    }

    for (var _iterator3 = _createForOfIteratorHelperLoose(orderedUnits), _step3; !(_step3 = _iterator3()).done;) {
      var u = _step3.value;

      if (!eq(this.values[u], other.values[u])) {
        return false;
      }
    }

    return true;
  };

  _createClass(Duration, [{
    key: "locale",
    get: function get() {
      return this.isValid ? this.loc.locale : null;
    }
    /**
     * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration
     *
     * @type {string}
     */

  }, {
    key: "numberingSystem",
    get: function get() {
      return this.isValid ? this.loc.numberingSystem : null;
    }
  }, {
    key: "years",
    get: function get() {
      return this.isValid ? this.values.years || 0 : NaN;
    }
    /**
     * Get the quarters.
     * @type {number}
     */

  }, {
    key: "quarters",
    get: function get() {
      return this.isValid ? this.values.quarters || 0 : NaN;
    }
    /**
     * Get the months.
     * @type {number}
     */

  }, {
    key: "months",
    get: function get() {
      return this.isValid ? this.values.months || 0 : NaN;
    }
    /**
     * Get the weeks
     * @type {number}
     */

  }, {
    key: "weeks",
    get: function get() {
      return this.isValid ? this.values.weeks || 0 : NaN;
    }
    /**
     * Get the days.
     * @type {number}
     */

  }, {
    key: "days",
    get: function get() {
      return this.isValid ? this.values.days || 0 : NaN;
    }
    /**
     * Get the hours.
     * @type {number}
     */

  }, {
    key: "hours",
    get: function get() {
      return this.isValid ? this.values.hours || 0 : NaN;
    }
    /**
     * Get the minutes.
     * @type {number}
     */

  }, {
    key: "minutes",
    get: function get() {
      return this.isValid ? this.values.minutes || 0 : NaN;
    }
    /**
     * Get the seconds.
     * @return {number}
     */

  }, {
    key: "seconds",
    get: function get() {
      return this.isValid ? this.values.seconds || 0 : NaN;
    }
    /**
     * Get the milliseconds.
     * @return {number}
     */

  }, {
    key: "milliseconds",
    get: function get() {
      return this.isValid ? this.values.milliseconds || 0 : NaN;
    }
    /**
     * Returns whether the Duration is invalid. Invalid durations are returned by diff operations
     * on invalid DateTimes or Intervals.
     * @return {boolean}
     */

  }, {
    key: "isValid",
    get: function get() {
      return this.invalid === null;
    }
    /**
     * Returns an error code if this Duration became invalid, or null if the Duration is valid
     * @return {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this Duration became invalid, or null if the Duration is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
  }]);

  return Duration;
}();
function friendlyDuration(durationish) {
  if (isNumber(durationish)) {
    return Duration.fromMillis(durationish);
  } else if (Duration.isDuration(durationish)) {
    return durationish;
  } else if (typeof durationish === "object") {
    return Duration.fromObject(durationish);
  } else {
    throw new InvalidArgumentError("Unknown duration argument " + durationish + " of type " + typeof durationish);
  }
}

var INVALID$1 = "Invalid Interval"; // checks if the start is equal to or before the end

function validateStartEnd(start, end) {
  if (!start || !start.isValid) {
    return Interval.invalid("missing or invalid start");
  } else if (!end || !end.isValid) {
    return Interval.invalid("missing or invalid end");
  } else if (end < start) {
    return Interval.invalid("end before start", "The end of an interval must be after its start, but you had start=" + start.toISO() + " and end=" + end.toISO());
  } else {
    return null;
  }
}
/**
 * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.
 *
 * Here is a brief overview of the most commonly used methods and getters in Interval:
 *
 * * **Creation** To create an Interval, use {@link fromDateTimes}, {@link after}, {@link before}, or {@link fromISO}.
 * * **Accessors** Use {@link start} and {@link end} to get the start and end.
 * * **Interrogation** To analyze the Interval, use {@link count}, {@link length}, {@link hasSame}, {@link contains}, {@link isAfter}, or {@link isBefore}.
 * * **Transformation** To create other Intervals out of this one, use {@link set}, {@link splitAt}, {@link splitBy}, {@link divideEqually}, {@link merge}, {@link xor}, {@link union}, {@link intersection}, or {@link difference}.
 * * **Comparison** To compare this Interval to another one, use {@link equals}, {@link overlaps}, {@link abutsStart}, {@link abutsEnd}, {@link engulfs}.
 * * **Output** To convert the Interval into other representations, see {@link toString}, {@link toISO}, {@link toISODate}, {@link toISOTime}, {@link toFormat}, and {@link toDuration}.
 */


var Interval = /*#__PURE__*/function () {
  /**
   * @private
   */
  function Interval(config) {
    /**
     * @access private
     */
    this.s = config.start;
    /**
     * @access private
     */

    this.e = config.end;
    /**
     * @access private
     */

    this.invalid = config.invalid || null;
    /**
     * @access private
     */

    this.isLuxonInterval = true;
  }
  /**
   * Create an invalid Interval.
   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Interval}
   */


  Interval.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the Interval is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidIntervalError(invalid);
    } else {
      return new Interval({
        invalid: invalid
      });
    }
  }
  /**
   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.
   * @param {DateTime|Date|Object} start
   * @param {DateTime|Date|Object} end
   * @return {Interval}
   */
  ;

  Interval.fromDateTimes = function fromDateTimes(start, end) {
    var builtStart = friendlyDateTime(start),
        builtEnd = friendlyDateTime(end);
    var validateError = validateStartEnd(builtStart, builtEnd);

    if (validateError == null) {
      return new Interval({
        start: builtStart,
        end: builtEnd
      });
    } else {
      return validateError;
    }
  }
  /**
   * Create an Interval from a start DateTime and a Duration to extend to.
   * @param {DateTime|Date|Object} start
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  ;

  Interval.after = function after(start, duration) {
    var dur = friendlyDuration(duration),
        dt = friendlyDateTime(start);
    return Interval.fromDateTimes(dt, dt.plus(dur));
  }
  /**
   * Create an Interval from an end DateTime and a Duration to extend backwards to.
   * @param {DateTime|Date|Object} end
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  ;

  Interval.before = function before(end, duration) {
    var dur = friendlyDuration(duration),
        dt = friendlyDateTime(end);
    return Interval.fromDateTimes(dt.minus(dur), dt);
  }
  /**
   * Create an Interval from an ISO 8601 string.
   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.
   * @param {string} text - the ISO string to parse
   * @param {Object} [opts] - options to pass {@link DateTime.fromISO} and optionally {@link Duration.fromISO}
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {Interval}
   */
  ;

  Interval.fromISO = function fromISO(text, opts) {
    var _split = (text || "").split("/", 2),
        s = _split[0],
        e = _split[1];

    if (s && e) {
      var start, startIsValid;

      try {
        start = DateTime.fromISO(s, opts);
        startIsValid = start.isValid;
      } catch (e) {
        startIsValid = false;
      }

      var end, endIsValid;

      try {
        end = DateTime.fromISO(e, opts);
        endIsValid = end.isValid;
      } catch (e) {
        endIsValid = false;
      }

      if (startIsValid && endIsValid) {
        return Interval.fromDateTimes(start, end);
      }

      if (startIsValid) {
        var dur = Duration.fromISO(e, opts);

        if (dur.isValid) {
          return Interval.after(start, dur);
        }
      } else if (endIsValid) {
        var _dur = Duration.fromISO(s, opts);

        if (_dur.isValid) {
          return Interval.before(end, _dur);
        }
      }
    }

    return Interval.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
  }
  /**
   * Check if an object is an Interval. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  Interval.isInterval = function isInterval(o) {
    return o && o.isLuxonInterval || false;
  }
  /**
   * Returns the start of the Interval
   * @type {DateTime}
   */
  ;

  var _proto = Interval.prototype;

  /**
   * Returns the length of the Interval in the specified unit.
   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.
   * @return {number}
   */
  _proto.length = function length(unit) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    return this.isValid ? this.toDuration.apply(this, [unit]).get(unit) : NaN;
  }
  /**
   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.
   * Unlike {@link length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'
   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'
   * @param {string} [unit='milliseconds'] - the unit of time to count.
   * @return {number}
   */
  ;

  _proto.count = function count(unit) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (!this.isValid) return NaN;
    var start = this.start.startOf(unit),
        end = this.end.startOf(unit);
    return Math.floor(end.diff(start, unit).get(unit)) + 1;
  }
  /**
   * Returns whether this Interval's start and end are both in the same unit of time
   * @param {string} unit - the unit of time to check sameness on
   * @return {boolean}
   */
  ;

  _proto.hasSame = function hasSame(unit) {
    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;
  }
  /**
   * Return whether this Interval has the same start and end DateTimes.
   * @return {boolean}
   */
  ;

  _proto.isEmpty = function isEmpty() {
    return this.s.valueOf() === this.e.valueOf();
  }
  /**
   * Return whether this Interval's start is after the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.isAfter = function isAfter(dateTime) {
    if (!this.isValid) return false;
    return this.s > dateTime;
  }
  /**
   * Return whether this Interval's end is before the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.isBefore = function isBefore(dateTime) {
    if (!this.isValid) return false;
    return this.e <= dateTime;
  }
  /**
   * Return whether this Interval contains the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.contains = function contains(dateTime) {
    if (!this.isValid) return false;
    return this.s <= dateTime && this.e > dateTime;
  }
  /**
   * "Sets" the start and/or end dates. Returns a newly-constructed Interval.
   * @param {Object} values - the values to set
   * @param {DateTime} values.start - the starting DateTime
   * @param {DateTime} values.end - the ending DateTime
   * @return {Interval}
   */
  ;

  _proto.set = function set(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        start = _ref.start,
        end = _ref.end;

    if (!this.isValid) return this;
    return Interval.fromDateTimes(start || this.s, end || this.e);
  }
  /**
   * Split this Interval at each of the specified DateTimes
   * @param {...[DateTime]} dateTimes - the unit of time to count.
   * @return {[Interval]}
   */
  ;

  _proto.splitAt = function splitAt() {
    var _this = this;

    if (!this.isValid) return [];

    for (var _len = arguments.length, dateTimes = new Array(_len), _key = 0; _key < _len; _key++) {
      dateTimes[_key] = arguments[_key];
    }

    var sorted = dateTimes.map(friendlyDateTime).filter(function (d) {
      return _this.contains(d);
    }).sort(),
        results = [];
    var s = this.s,
        i = 0;

    while (s < this.e) {
      var added = sorted[i] || this.e,
          next = +added > +this.e ? this.e : added;
      results.push(Interval.fromDateTimes(s, next));
      s = next;
      i += 1;
    }

    return results;
  }
  /**
   * Split this Interval into smaller Intervals, each of the specified length.
   * Left over time is grouped into a smaller interval
   * @param {Duration|Object|number} duration - The length of each resulting interval.
   * @return {[Interval]}
   */
  ;

  _proto.splitBy = function splitBy(duration) {
    var dur = friendlyDuration(duration);

    if (!this.isValid || !dur.isValid || dur.as("milliseconds") === 0) {
      return [];
    }

    var s = this.s,
        added,
        next;
    var results = [];

    while (s < this.e) {
      added = s.plus(dur);
      next = +added > +this.e ? this.e : added;
      results.push(Interval.fromDateTimes(s, next));
      s = next;
    }

    return results;
  }
  /**
   * Split this Interval into the specified number of smaller intervals.
   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.
   * @return {[Interval]}
   */
  ;

  _proto.divideEqually = function divideEqually(numberOfParts) {
    if (!this.isValid) return [];
    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);
  }
  /**
   * Return whether this Interval overlaps with the specified Interval
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.overlaps = function overlaps(other) {
    return this.e > other.s && this.s < other.e;
  }
  /**
   * Return whether this Interval's end is adjacent to the specified Interval's start.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.abutsStart = function abutsStart(other) {
    if (!this.isValid) return false;
    return +this.e === +other.s;
  }
  /**
   * Return whether this Interval's start is adjacent to the specified Interval's end.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.abutsEnd = function abutsEnd(other) {
    if (!this.isValid) return false;
    return +other.e === +this.s;
  }
  /**
   * Return whether this Interval engulfs the start and end of the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.engulfs = function engulfs(other) {
    if (!this.isValid) return false;
    return this.s <= other.s && this.e >= other.e;
  }
  /**
   * Return whether this Interval has the same start and end as the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }

    return this.s.equals(other.s) && this.e.equals(other.e);
  }
  /**
   * Return an Interval representing the intersection of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.
   * Returns null if the intersection is empty, meaning, the intervals don't intersect.
   * @param {Interval} other
   * @return {Interval}
   */
  ;

  _proto.intersection = function intersection(other) {
    if (!this.isValid) return this;
    var s = this.s > other.s ? this.s : other.s,
        e = this.e < other.e ? this.e : other.e;

    if (s > e) {
      return null;
    } else {
      return Interval.fromDateTimes(s, e);
    }
  }
  /**
   * Return an Interval representing the union of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.
   * @param {Interval} other
   * @return {Interval}
   */
  ;

  _proto.union = function union(other) {
    if (!this.isValid) return this;
    var s = this.s < other.s ? this.s : other.s,
        e = this.e > other.e ? this.e : other.e;
    return Interval.fromDateTimes(s, e);
  }
  /**
   * Merge an array of Intervals into a equivalent minimal set of Intervals.
   * Combines overlapping and adjacent Intervals.
   * @param {[Interval]} intervals
   * @return {[Interval]}
   */
  ;

  Interval.merge = function merge(intervals) {
    var _intervals$sort$reduc = intervals.sort(function (a, b) {
      return a.s - b.s;
    }).reduce(function (_ref2, item) {
      var sofar = _ref2[0],
          current = _ref2[1];

      if (!current) {
        return [sofar, item];
      } else if (current.overlaps(item) || current.abutsStart(item)) {
        return [sofar, current.union(item)];
      } else {
        return [sofar.concat([current]), item];
      }
    }, [[], null]),
        found = _intervals$sort$reduc[0],
        final = _intervals$sort$reduc[1];

    if (final) {
      found.push(final);
    }

    return found;
  }
  /**
   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.
   * @param {[Interval]} intervals
   * @return {[Interval]}
   */
  ;

  Interval.xor = function xor(intervals) {
    var _Array$prototype;

    var start = null,
        currentCount = 0;

    var results = [],
        ends = intervals.map(function (i) {
      return [{
        time: i.s,
        type: "s"
      }, {
        time: i.e,
        type: "e"
      }];
    }),
        flattened = (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, ends),
        arr = flattened.sort(function (a, b) {
      return a.time - b.time;
    });

    for (var _iterator = _createForOfIteratorHelperLoose(arr), _step; !(_step = _iterator()).done;) {
      var i = _step.value;
      currentCount += i.type === "s" ? 1 : -1;

      if (currentCount === 1) {
        start = i.time;
      } else {
        if (start && +start !== +i.time) {
          results.push(Interval.fromDateTimes(start, i.time));
        }

        start = null;
      }
    }

    return Interval.merge(results);
  }
  /**
   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.
   * @param {...Interval} intervals
   * @return {[Interval]}
   */
  ;

  _proto.difference = function difference() {
    var _this2 = this;

    for (var _len2 = arguments.length, intervals = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      intervals[_key2] = arguments[_key2];
    }

    return Interval.xor([this].concat(intervals)).map(function (i) {
      return _this2.intersection(i);
    }).filter(function (i) {
      return i && !i.isEmpty();
    });
  }
  /**
   * Returns a string representation of this Interval appropriate for debugging.
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    if (!this.isValid) return INVALID$1;
    return "[" + this.s.toISO() + " \u2013 " + this.e.toISO() + ")";
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Interval.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime.toISO}
   * @return {string}
   */
  ;

  _proto.toISO = function toISO(opts) {
    if (!this.isValid) return INVALID$1;
    return this.s.toISO(opts) + "/" + this.e.toISO(opts);
  }
  /**
   * Returns an ISO 8601-compliant string representation of date of this Interval.
   * The time components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {string}
   */
  ;

  _proto.toISODate = function toISODate() {
    if (!this.isValid) return INVALID$1;
    return this.s.toISODate() + "/" + this.e.toISODate();
  }
  /**
   * Returns an ISO 8601-compliant string representation of time of this Interval.
   * The date components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime.toISO}
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(opts) {
    if (!this.isValid) return INVALID$1;
    return this.s.toISOTime(opts) + "/" + this.e.toISOTime(opts);
  }
  /**
   * Returns a string representation of this Interval formatted according to the specified format string.
   * @param {string} dateFormat - the format string. This string formats the start and end time. See {@link DateTime.toFormat} for details.
   * @param {Object} opts - options
   * @param {string} [opts.separator =  ' – '] - a separator to place between the start and end representations
   * @return {string}
   */
  ;

  _proto.toFormat = function toFormat(dateFormat, _temp2) {
    var _ref3 = _temp2 === void 0 ? {} : _temp2,
        _ref3$separator = _ref3.separator,
        separator = _ref3$separator === void 0 ? " – " : _ref3$separator;

    if (!this.isValid) return INVALID$1;
    return "" + this.s.toFormat(dateFormat) + separator + this.e.toFormat(dateFormat);
  }
  /**
   * Return a Duration representing the time spanned by this interval.
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }
   * @return {Duration}
   */
  ;

  _proto.toDuration = function toDuration(unit, opts) {
    if (!this.isValid) {
      return Duration.invalid(this.invalidReason);
    }

    return this.e.diff(this.s, unit, opts);
  }
  /**
   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes
   * @param {function} mapFn
   * @return {Interval}
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))
   */
  ;

  _proto.mapEndpoints = function mapEndpoints(mapFn) {
    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));
  };

  _createClass(Interval, [{
    key: "start",
    get: function get() {
      return this.isValid ? this.s : null;
    }
    /**
     * Returns the end of the Interval
     * @type {DateTime}
     */

  }, {
    key: "end",
    get: function get() {
      return this.isValid ? this.e : null;
    }
    /**
     * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.
     * @type {boolean}
     */

  }, {
    key: "isValid",
    get: function get() {
      return this.invalidReason === null;
    }
    /**
     * Returns an error code if this Interval is invalid, or null if the Interval is valid
     * @type {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this Interval became invalid, or null if the Interval is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
  }]);

  return Interval;
}();

/**
 * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.
 */

var Info = /*#__PURE__*/function () {
  function Info() {}

  /**
   * Return whether the specified zone contains a DST.
   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.
   * @return {boolean}
   */
  Info.hasDST = function hasDST(zone) {
    if (zone === void 0) {
      zone = Settings.defaultZone;
    }

    var proto = DateTime.now().setZone(zone).set({
      month: 12
    });
    return !zone.universal && proto.offset !== proto.set({
      month: 6
    }).offset;
  }
  /**
   * Return whether the specified zone is a valid IANA specifier.
   * @param {string} zone - Zone to check
   * @return {boolean}
   */
  ;

  Info.isValidIANAZone = function isValidIANAZone(zone) {
    return IANAZone.isValidSpecifier(zone) && IANAZone.isValidZone(zone);
  }
  /**
   * Converts the input into a {@link Zone} instance.
   *
   * * If `input` is already a Zone instance, it is returned unchanged.
   * * If `input` is a string containing a valid time zone name, a Zone instance
   *   with that name is returned.
   * * If `input` is a string that doesn't refer to a known time zone, a Zone
   *   instance with {@link Zone.isValid} == false is returned.
   * * If `input is a number, a Zone instance with the specified fixed offset
   *   in minutes is returned.
   * * If `input` is `null` or `undefined`, the default zone is returned.
   * @param {string|Zone|number} [input] - the value to be converted
   * @return {Zone}
   */
  ;

  Info.normalizeZone = function normalizeZone$1(input) {
    return normalizeZone(input, Settings.defaultZone);
  }
  /**
   * Return an array of standalone month names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @example Info.months()[0] //=> 'January'
   * @example Info.months('short')[0] //=> 'Jan'
   * @example Info.months('numeric')[0] //=> '1'
   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'
   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'
   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'
   * @return {[string]}
   */
  ;

  Info.months = function months(length, _temp) {
    if (length === void 0) {
      length = "long";
    }

    var _ref = _temp === void 0 ? {} : _temp,
        _ref$locale = _ref.locale,
        locale = _ref$locale === void 0 ? null : _ref$locale,
        _ref$numberingSystem = _ref.numberingSystem,
        numberingSystem = _ref$numberingSystem === void 0 ? null : _ref$numberingSystem,
        _ref$outputCalendar = _ref.outputCalendar,
        outputCalendar = _ref$outputCalendar === void 0 ? "gregory" : _ref$outputCalendar;

    return Locale.create(locale, numberingSystem, outputCalendar).months(length);
  }
  /**
   * Return an array of format month names.
   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that
   * changes the string.
   * See {@link months}
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @return {[string]}
   */
  ;

  Info.monthsFormat = function monthsFormat(length, _temp2) {
    if (length === void 0) {
      length = "long";
    }

    var _ref2 = _temp2 === void 0 ? {} : _temp2,
        _ref2$locale = _ref2.locale,
        locale = _ref2$locale === void 0 ? null : _ref2$locale,
        _ref2$numberingSystem = _ref2.numberingSystem,
        numberingSystem = _ref2$numberingSystem === void 0 ? null : _ref2$numberingSystem,
        _ref2$outputCalendar = _ref2.outputCalendar,
        outputCalendar = _ref2$outputCalendar === void 0 ? "gregory" : _ref2$outputCalendar;

    return Locale.create(locale, numberingSystem, outputCalendar).months(length, true);
  }
  /**
   * Return an array of standalone week names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @example Info.weekdays()[0] //=> 'Monday'
   * @example Info.weekdays('short')[0] //=> 'Mon'
   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'
   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'
   * @return {[string]}
   */
  ;

  Info.weekdays = function weekdays(length, _temp3) {
    if (length === void 0) {
      length = "long";
    }

    var _ref3 = _temp3 === void 0 ? {} : _temp3,
        _ref3$locale = _ref3.locale,
        locale = _ref3$locale === void 0 ? null : _ref3$locale,
        _ref3$numberingSystem = _ref3.numberingSystem,
        numberingSystem = _ref3$numberingSystem === void 0 ? null : _ref3$numberingSystem;

    return Locale.create(locale, numberingSystem, null).weekdays(length);
  }
  /**
   * Return an array of format week names.
   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that
   * changes the string.
   * See {@link weekdays}
   * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale=null] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @return {[string]}
   */
  ;

  Info.weekdaysFormat = function weekdaysFormat(length, _temp4) {
    if (length === void 0) {
      length = "long";
    }

    var _ref4 = _temp4 === void 0 ? {} : _temp4,
        _ref4$locale = _ref4.locale,
        locale = _ref4$locale === void 0 ? null : _ref4$locale,
        _ref4$numberingSystem = _ref4.numberingSystem,
        numberingSystem = _ref4$numberingSystem === void 0 ? null : _ref4$numberingSystem;

    return Locale.create(locale, numberingSystem, null).weekdays(length, true);
  }
  /**
   * Return an array of meridiems.
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.meridiems() //=> [ 'AM', 'PM' ]
   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]
   * @return {[string]}
   */
  ;

  Info.meridiems = function meridiems(_temp5) {
    var _ref5 = _temp5 === void 0 ? {} : _temp5,
        _ref5$locale = _ref5.locale,
        locale = _ref5$locale === void 0 ? null : _ref5$locale;

    return Locale.create(locale).meridiems();
  }
  /**
   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.
   * @param {string} [length='short'] - the length of the era representation, such as "short" or "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.eras() //=> [ 'BC', 'AD' ]
   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]
   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]
   * @return {[string]}
   */
  ;

  Info.eras = function eras(length, _temp6) {
    if (length === void 0) {
      length = "short";
    }

    var _ref6 = _temp6 === void 0 ? {} : _temp6,
        _ref6$locale = _ref6.locale,
        locale = _ref6$locale === void 0 ? null : _ref6$locale;

    return Locale.create(locale, null, "gregory").eras(length);
  }
  /**
   * Return the set of available features in this environment.
   * Some features of Luxon are not available in all environments. For example, on older browsers, timezone support is not available. Use this function to figure out if that's the case.
   * Keys:
   * * `zones`: whether this environment supports IANA timezones
   * * `intlTokens`: whether this environment supports internationalized token-based formatting/parsing
   * * `intl`: whether this environment supports general internationalization
   * * `relative`: whether this environment supports relative time formatting
   * @example Info.features() //=> { intl: true, intlTokens: false, zones: true, relative: false }
   * @return {Object}
   */
  ;

  Info.features = function features() {
    var intl = false,
        intlTokens = false,
        zones = false,
        relative = false;

    if (hasIntl()) {
      intl = true;
      intlTokens = hasFormatToParts();
      relative = hasRelative();

      try {
        zones = new Intl.DateTimeFormat("en", {
          timeZone: "America/New_York"
        }).resolvedOptions().timeZone === "America/New_York";
      } catch (e) {
        zones = false;
      }
    }

    return {
      intl: intl,
      intlTokens: intlTokens,
      zones: zones,
      relative: relative
    };
  };

  return Info;
}();

function dayDiff(earlier, later) {
  var utcDayStart = function utcDayStart(dt) {
    return dt.toUTC(0, {
      keepLocalTime: true
    }).startOf("day").valueOf();
  },
      ms = utcDayStart(later) - utcDayStart(earlier);

  return Math.floor(Duration.fromMillis(ms).as("days"));
}

function highOrderDiffs(cursor, later, units) {
  var differs = [["years", function (a, b) {
    return b.year - a.year;
  }], ["quarters", function (a, b) {
    return b.quarter - a.quarter;
  }], ["months", function (a, b) {
    return b.month - a.month + (b.year - a.year) * 12;
  }], ["weeks", function (a, b) {
    var days = dayDiff(a, b);
    return (days - days % 7) / 7;
  }], ["days", dayDiff]];
  var results = {};
  var lowestOrder, highWater;

  for (var _i = 0, _differs = differs; _i < _differs.length; _i++) {
    var _differs$_i = _differs[_i],
        unit = _differs$_i[0],
        differ = _differs$_i[1];

    if (units.indexOf(unit) >= 0) {
      var _cursor$plus;

      lowestOrder = unit;
      var delta = differ(cursor, later);
      highWater = cursor.plus((_cursor$plus = {}, _cursor$plus[unit] = delta, _cursor$plus));

      if (highWater > later) {
        var _cursor$plus2;

        cursor = cursor.plus((_cursor$plus2 = {}, _cursor$plus2[unit] = delta - 1, _cursor$plus2));
        delta -= 1;
      } else {
        cursor = highWater;
      }

      results[unit] = delta;
    }
  }

  return [cursor, results, highWater, lowestOrder];
}

function _diff (earlier, later, units, opts) {
  var _highOrderDiffs = highOrderDiffs(earlier, later, units),
      cursor = _highOrderDiffs[0],
      results = _highOrderDiffs[1],
      highWater = _highOrderDiffs[2],
      lowestOrder = _highOrderDiffs[3];

  var remainingMillis = later - cursor;
  var lowerOrderUnits = units.filter(function (u) {
    return ["hours", "minutes", "seconds", "milliseconds"].indexOf(u) >= 0;
  });

  if (lowerOrderUnits.length === 0) {
    if (highWater < later) {
      var _cursor$plus3;

      highWater = cursor.plus((_cursor$plus3 = {}, _cursor$plus3[lowestOrder] = 1, _cursor$plus3));
    }

    if (highWater !== cursor) {
      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);
    }
  }

  var duration = Duration.fromObject(Object.assign(results, opts));

  if (lowerOrderUnits.length > 0) {
    var _Duration$fromMillis;

    return (_Duration$fromMillis = Duration.fromMillis(remainingMillis, opts)).shiftTo.apply(_Duration$fromMillis, lowerOrderUnits).plus(duration);
  } else {
    return duration;
  }
}

var numberingSystems = {
  arab: "[\u0660-\u0669]",
  arabext: "[\u06F0-\u06F9]",
  bali: "[\u1B50-\u1B59]",
  beng: "[\u09E6-\u09EF]",
  deva: "[\u0966-\u096F]",
  fullwide: "[\uFF10-\uFF19]",
  gujr: "[\u0AE6-\u0AEF]",
  hanidec: "[〇|一|二|三|四|五|六|七|八|九]",
  khmr: "[\u17E0-\u17E9]",
  knda: "[\u0CE6-\u0CEF]",
  laoo: "[\u0ED0-\u0ED9]",
  limb: "[\u1946-\u194F]",
  mlym: "[\u0D66-\u0D6F]",
  mong: "[\u1810-\u1819]",
  mymr: "[\u1040-\u1049]",
  orya: "[\u0B66-\u0B6F]",
  tamldec: "[\u0BE6-\u0BEF]",
  telu: "[\u0C66-\u0C6F]",
  thai: "[\u0E50-\u0E59]",
  tibt: "[\u0F20-\u0F29]",
  latn: "\\d"
};
var numberingSystemsUTF16 = {
  arab: [1632, 1641],
  arabext: [1776, 1785],
  bali: [6992, 7001],
  beng: [2534, 2543],
  deva: [2406, 2415],
  fullwide: [65296, 65303],
  gujr: [2790, 2799],
  khmr: [6112, 6121],
  knda: [3302, 3311],
  laoo: [3792, 3801],
  limb: [6470, 6479],
  mlym: [3430, 3439],
  mong: [6160, 6169],
  mymr: [4160, 4169],
  orya: [2918, 2927],
  tamldec: [3046, 3055],
  telu: [3174, 3183],
  thai: [3664, 3673],
  tibt: [3872, 3881]
}; // eslint-disable-next-line

var hanidecChars = numberingSystems.hanidec.replace(/[\[|\]]/g, "").split("");
function parseDigits(str) {
  var value = parseInt(str, 10);

  if (isNaN(value)) {
    value = "";

    for (var i = 0; i < str.length; i++) {
      var code = str.charCodeAt(i);

      if (str[i].search(numberingSystems.hanidec) !== -1) {
        value += hanidecChars.indexOf(str[i]);
      } else {
        for (var key in numberingSystemsUTF16) {
          var _numberingSystemsUTF = numberingSystemsUTF16[key],
              min = _numberingSystemsUTF[0],
              max = _numberingSystemsUTF[1];

          if (code >= min && code <= max) {
            value += code - min;
          }
        }
      }
    }

    return parseInt(value, 10);
  } else {
    return value;
  }
}
function digitRegex(_ref, append) {
  var numberingSystem = _ref.numberingSystem;

  if (append === void 0) {
    append = "";
  }

  return new RegExp("" + numberingSystems[numberingSystem || "latn"] + append);
}

var MISSING_FTP = "missing Intl.DateTimeFormat.formatToParts support";

function intUnit(regex, post) {
  if (post === void 0) {
    post = function post(i) {
      return i;
    };
  }

  return {
    regex: regex,
    deser: function deser(_ref) {
      var s = _ref[0];
      return post(parseDigits(s));
    }
  };
}

var NBSP = String.fromCharCode(160);
var spaceOrNBSP = "( |" + NBSP + ")";
var spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, "g");

function fixListRegex(s) {
  // make dots optional and also make them literal
  // make space and non breakable space characters interchangeable
  return s.replace(/\./g, "\\.?").replace(spaceOrNBSPRegExp, spaceOrNBSP);
}

function stripInsensitivities(s) {
  return s.replace(/\./g, "") // ignore dots that were made optional
  .replace(spaceOrNBSPRegExp, " ") // interchange space and nbsp
  .toLowerCase();
}

function oneOf(strings, startIndex) {
  if (strings === null) {
    return null;
  } else {
    return {
      regex: RegExp(strings.map(fixListRegex).join("|")),
      deser: function deser(_ref2) {
        var s = _ref2[0];
        return strings.findIndex(function (i) {
          return stripInsensitivities(s) === stripInsensitivities(i);
        }) + startIndex;
      }
    };
  }
}

function offset(regex, groups) {
  return {
    regex: regex,
    deser: function deser(_ref3) {
      var h = _ref3[1],
          m = _ref3[2];
      return signedOffset(h, m);
    },
    groups: groups
  };
}

function simple(regex) {
  return {
    regex: regex,
    deser: function deser(_ref4) {
      var s = _ref4[0];
      return s;
    }
  };
}

function escapeToken(value) {
  // eslint-disable-next-line no-useless-escape
  return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
}

function unitForToken(token, loc) {
  var one = digitRegex(loc),
      two = digitRegex(loc, "{2}"),
      three = digitRegex(loc, "{3}"),
      four = digitRegex(loc, "{4}"),
      six = digitRegex(loc, "{6}"),
      oneOrTwo = digitRegex(loc, "{1,2}"),
      oneToThree = digitRegex(loc, "{1,3}"),
      oneToSix = digitRegex(loc, "{1,6}"),
      oneToNine = digitRegex(loc, "{1,9}"),
      twoToFour = digitRegex(loc, "{2,4}"),
      fourToSix = digitRegex(loc, "{4,6}"),
      literal = function literal(t) {
    return {
      regex: RegExp(escapeToken(t.val)),
      deser: function deser(_ref5) {
        var s = _ref5[0];
        return s;
      },
      literal: true
    };
  },
      unitate = function unitate(t) {
    if (token.literal) {
      return literal(t);
    }

    switch (t.val) {
      // era
      case "G":
        return oneOf(loc.eras("short", false), 0);

      case "GG":
        return oneOf(loc.eras("long", false), 0);
      // years

      case "y":
        return intUnit(oneToSix);

      case "yy":
        return intUnit(twoToFour, untruncateYear);

      case "yyyy":
        return intUnit(four);

      case "yyyyy":
        return intUnit(fourToSix);

      case "yyyyyy":
        return intUnit(six);
      // months

      case "M":
        return intUnit(oneOrTwo);

      case "MM":
        return intUnit(two);

      case "MMM":
        return oneOf(loc.months("short", true, false), 1);

      case "MMMM":
        return oneOf(loc.months("long", true, false), 1);

      case "L":
        return intUnit(oneOrTwo);

      case "LL":
        return intUnit(two);

      case "LLL":
        return oneOf(loc.months("short", false, false), 1);

      case "LLLL":
        return oneOf(loc.months("long", false, false), 1);
      // dates

      case "d":
        return intUnit(oneOrTwo);

      case "dd":
        return intUnit(two);
      // ordinals

      case "o":
        return intUnit(oneToThree);

      case "ooo":
        return intUnit(three);
      // time

      case "HH":
        return intUnit(two);

      case "H":
        return intUnit(oneOrTwo);

      case "hh":
        return intUnit(two);

      case "h":
        return intUnit(oneOrTwo);

      case "mm":
        return intUnit(two);

      case "m":
        return intUnit(oneOrTwo);

      case "q":
        return intUnit(oneOrTwo);

      case "qq":
        return intUnit(two);

      case "s":
        return intUnit(oneOrTwo);

      case "ss":
        return intUnit(two);

      case "S":
        return intUnit(oneToThree);

      case "SSS":
        return intUnit(three);

      case "u":
        return simple(oneToNine);
      // meridiem

      case "a":
        return oneOf(loc.meridiems(), 0);
      // weekYear (k)

      case "kkkk":
        return intUnit(four);

      case "kk":
        return intUnit(twoToFour, untruncateYear);
      // weekNumber (W)

      case "W":
        return intUnit(oneOrTwo);

      case "WW":
        return intUnit(two);
      // weekdays

      case "E":
      case "c":
        return intUnit(one);

      case "EEE":
        return oneOf(loc.weekdays("short", false, false), 1);

      case "EEEE":
        return oneOf(loc.weekdays("long", false, false), 1);

      case "ccc":
        return oneOf(loc.weekdays("short", true, false), 1);

      case "cccc":
        return oneOf(loc.weekdays("long", true, false), 1);
      // offset/zone

      case "Z":
      case "ZZ":
        return offset(new RegExp("([+-]" + oneOrTwo.source + ")(?::(" + two.source + "))?"), 2);

      case "ZZZ":
        return offset(new RegExp("([+-]" + oneOrTwo.source + ")(" + two.source + ")?"), 2);
      // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing
      // because we don't have any way to figure out what they are

      case "z":
        return simple(/[a-z_+-/]{1,256}?/i);

      default:
        return literal(t);
    }
  };

  var unit = unitate(token) || {
    invalidReason: MISSING_FTP
  };
  unit.token = token;
  return unit;
}

var partTypeStyleToTokenVal = {
  year: {
    "2-digit": "yy",
    numeric: "yyyyy"
  },
  month: {
    numeric: "M",
    "2-digit": "MM",
    short: "MMM",
    long: "MMMM"
  },
  day: {
    numeric: "d",
    "2-digit": "dd"
  },
  weekday: {
    short: "EEE",
    long: "EEEE"
  },
  dayperiod: "a",
  dayPeriod: "a",
  hour: {
    numeric: "h",
    "2-digit": "hh"
  },
  minute: {
    numeric: "m",
    "2-digit": "mm"
  },
  second: {
    numeric: "s",
    "2-digit": "ss"
  }
};

function tokenForPart(part, locale, formatOpts) {
  var type = part.type,
      value = part.value;

  if (type === "literal") {
    return {
      literal: true,
      val: value
    };
  }

  var style = formatOpts[type];
  var val = partTypeStyleToTokenVal[type];

  if (typeof val === "object") {
    val = val[style];
  }

  if (val) {
    return {
      literal: false,
      val: val
    };
  }

  return undefined;
}

function buildRegex(units) {
  var re = units.map(function (u) {
    return u.regex;
  }).reduce(function (f, r) {
    return f + "(" + r.source + ")";
  }, "");
  return ["^" + re + "$", units];
}

function match(input, regex, handlers) {
  var matches = input.match(regex);

  if (matches) {
    var all = {};
    var matchIndex = 1;

    for (var i in handlers) {
      if (hasOwnProperty(handlers, i)) {
        var h = handlers[i],
            groups = h.groups ? h.groups + 1 : 1;

        if (!h.literal && h.token) {
          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));
        }

        matchIndex += groups;
      }
    }

    return [matches, all];
  } else {
    return [matches, {}];
  }
}

function dateTimeFromMatches(matches) {
  var toField = function toField(token) {
    switch (token) {
      case "S":
        return "millisecond";

      case "s":
        return "second";

      case "m":
        return "minute";

      case "h":
      case "H":
        return "hour";

      case "d":
        return "day";

      case "o":
        return "ordinal";

      case "L":
      case "M":
        return "month";

      case "y":
        return "year";

      case "E":
      case "c":
        return "weekday";

      case "W":
        return "weekNumber";

      case "k":
        return "weekYear";

      case "q":
        return "quarter";

      default:
        return null;
    }
  };

  var zone;

  if (!isUndefined(matches.Z)) {
    zone = new FixedOffsetZone(matches.Z);
  } else if (!isUndefined(matches.z)) {
    zone = IANAZone.create(matches.z);
  } else {
    zone = null;
  }

  if (!isUndefined(matches.q)) {
    matches.M = (matches.q - 1) * 3 + 1;
  }

  if (!isUndefined(matches.h)) {
    if (matches.h < 12 && matches.a === 1) {
      matches.h += 12;
    } else if (matches.h === 12 && matches.a === 0) {
      matches.h = 0;
    }
  }

  if (matches.G === 0 && matches.y) {
    matches.y = -matches.y;
  }

  if (!isUndefined(matches.u)) {
    matches.S = parseMillis(matches.u);
  }

  var vals = Object.keys(matches).reduce(function (r, k) {
    var f = toField(k);

    if (f) {
      r[f] = matches[k];
    }

    return r;
  }, {});
  return [vals, zone];
}

var dummyDateTimeCache = null;

function getDummyDateTime() {
  if (!dummyDateTimeCache) {
    dummyDateTimeCache = DateTime.fromMillis(1555555555555);
  }

  return dummyDateTimeCache;
}

function maybeExpandMacroToken(token, locale) {
  if (token.literal) {
    return token;
  }

  var formatOpts = Formatter.macroTokenToFormatOpts(token.val);

  if (!formatOpts) {
    return token;
  }

  var formatter = Formatter.create(locale, formatOpts);
  var parts = formatter.formatDateTimeParts(getDummyDateTime());
  var tokens = parts.map(function (p) {
    return tokenForPart(p, locale, formatOpts);
  });

  if (tokens.includes(undefined)) {
    return token;
  }

  return tokens;
}

function expandMacroTokens(tokens, locale) {
  var _Array$prototype;

  return (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, tokens.map(function (t) {
    return maybeExpandMacroToken(t, locale);
  }));
}
/**
 * @private
 */


function explainFromTokens(locale, input, format) {
  var tokens = expandMacroTokens(Formatter.parseFormat(format), locale),
      units = tokens.map(function (t) {
    return unitForToken(t, locale);
  }),
      disqualifyingUnit = units.find(function (t) {
    return t.invalidReason;
  });

  if (disqualifyingUnit) {
    return {
      input: input,
      tokens: tokens,
      invalidReason: disqualifyingUnit.invalidReason
    };
  } else {
    var _buildRegex = buildRegex(units),
        regexString = _buildRegex[0],
        handlers = _buildRegex[1],
        regex = RegExp(regexString, "i"),
        _match = match(input, regex, handlers),
        rawMatches = _match[0],
        matches = _match[1],
        _ref6 = matches ? dateTimeFromMatches(matches) : [null, null],
        result = _ref6[0],
        zone = _ref6[1];

    if (hasOwnProperty(matches, "a") && hasOwnProperty(matches, "H")) {
      throw new ConflictingSpecificationError("Can't include meridiem when specifying 24-hour format");
    }

    return {
      input: input,
      tokens: tokens,
      regex: regex,
      rawMatches: rawMatches,
      matches: matches,
      result: result,
      zone: zone
    };
  }
}
function parseFromTokens(locale, input, format) {
  var _explainFromTokens = explainFromTokens(locale, input, format),
      result = _explainFromTokens.result,
      zone = _explainFromTokens.zone,
      invalidReason = _explainFromTokens.invalidReason;

  return [result, zone, invalidReason];
}

var nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
    leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];

function unitOutOfRange(unit, value) {
  return new Invalid("unit out of range", "you specified " + value + " (of type " + typeof value + ") as a " + unit + ", which is invalid");
}

function dayOfWeek(year, month, day) {
  var js = new Date(Date.UTC(year, month - 1, day)).getUTCDay();
  return js === 0 ? 7 : js;
}

function computeOrdinal(year, month, day) {
  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];
}

function uncomputeOrdinal(year, ordinal) {
  var table = isLeapYear(year) ? leapLadder : nonLeapLadder,
      month0 = table.findIndex(function (i) {
    return i < ordinal;
  }),
      day = ordinal - table[month0];
  return {
    month: month0 + 1,
    day: day
  };
}
/**
 * @private
 */


function gregorianToWeek(gregObj) {
  var year = gregObj.year,
      month = gregObj.month,
      day = gregObj.day,
      ordinal = computeOrdinal(year, month, day),
      weekday = dayOfWeek(year, month, day);
  var weekNumber = Math.floor((ordinal - weekday + 10) / 7),
      weekYear;

  if (weekNumber < 1) {
    weekYear = year - 1;
    weekNumber = weeksInWeekYear(weekYear);
  } else if (weekNumber > weeksInWeekYear(year)) {
    weekYear = year + 1;
    weekNumber = 1;
  } else {
    weekYear = year;
  }

  return Object.assign({
    weekYear: weekYear,
    weekNumber: weekNumber,
    weekday: weekday
  }, timeObject(gregObj));
}
function weekToGregorian(weekData) {
  var weekYear = weekData.weekYear,
      weekNumber = weekData.weekNumber,
      weekday = weekData.weekday,
      weekdayOfJan4 = dayOfWeek(weekYear, 1, 4),
      yearInDays = daysInYear(weekYear);
  var ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3,
      year;

  if (ordinal < 1) {
    year = weekYear - 1;
    ordinal += daysInYear(year);
  } else if (ordinal > yearInDays) {
    year = weekYear + 1;
    ordinal -= daysInYear(weekYear);
  } else {
    year = weekYear;
  }

  var _uncomputeOrdinal = uncomputeOrdinal(year, ordinal),
      month = _uncomputeOrdinal.month,
      day = _uncomputeOrdinal.day;

  return Object.assign({
    year: year,
    month: month,
    day: day
  }, timeObject(weekData));
}
function gregorianToOrdinal(gregData) {
  var year = gregData.year,
      month = gregData.month,
      day = gregData.day,
      ordinal = computeOrdinal(year, month, day);
  return Object.assign({
    year: year,
    ordinal: ordinal
  }, timeObject(gregData));
}
function ordinalToGregorian(ordinalData) {
  var year = ordinalData.year,
      ordinal = ordinalData.ordinal,
      _uncomputeOrdinal2 = uncomputeOrdinal(year, ordinal),
      month = _uncomputeOrdinal2.month,
      day = _uncomputeOrdinal2.day;

  return Object.assign({
    year: year,
    month: month,
    day: day
  }, timeObject(ordinalData));
}
function hasInvalidWeekData(obj) {
  var validYear = isInteger(obj.weekYear),
      validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)),
      validWeekday = integerBetween(obj.weekday, 1, 7);

  if (!validYear) {
    return unitOutOfRange("weekYear", obj.weekYear);
  } else if (!validWeek) {
    return unitOutOfRange("week", obj.week);
  } else if (!validWeekday) {
    return unitOutOfRange("weekday", obj.weekday);
  } else return false;
}
function hasInvalidOrdinalData(obj) {
  var validYear = isInteger(obj.year),
      validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));

  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validOrdinal) {
    return unitOutOfRange("ordinal", obj.ordinal);
  } else return false;
}
function hasInvalidGregorianData(obj) {
  var validYear = isInteger(obj.year),
      validMonth = integerBetween(obj.month, 1, 12),
      validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));

  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validMonth) {
    return unitOutOfRange("month", obj.month);
  } else if (!validDay) {
    return unitOutOfRange("day", obj.day);
  } else return false;
}
function hasInvalidTimeData(obj) {
  var hour = obj.hour,
      minute = obj.minute,
      second = obj.second,
      millisecond = obj.millisecond;
  var validHour = integerBetween(hour, 0, 23) || hour === 24 && minute === 0 && second === 0 && millisecond === 0,
      validMinute = integerBetween(minute, 0, 59),
      validSecond = integerBetween(second, 0, 59),
      validMillisecond = integerBetween(millisecond, 0, 999);

  if (!validHour) {
    return unitOutOfRange("hour", hour);
  } else if (!validMinute) {
    return unitOutOfRange("minute", minute);
  } else if (!validSecond) {
    return unitOutOfRange("second", second);
  } else if (!validMillisecond) {
    return unitOutOfRange("millisecond", millisecond);
  } else return false;
}

var INVALID$2 = "Invalid DateTime";
var MAX_DATE = 8.64e15;

function unsupportedZone(zone) {
  return new Invalid("unsupported zone", "the zone \"" + zone.name + "\" is not supported");
} // we cache week data on the DT object and this intermediates the cache


function possiblyCachedWeekData(dt) {
  if (dt.weekData === null) {
    dt.weekData = gregorianToWeek(dt.c);
  }

  return dt.weekData;
} // clone really means, "make a new object with these modifications". all "setters" really use this
// to create a new object while only changing some of the properties


function clone$1(inst, alts) {
  var current = {
    ts: inst.ts,
    zone: inst.zone,
    c: inst.c,
    o: inst.o,
    loc: inst.loc,
    invalid: inst.invalid
  };
  return new DateTime(Object.assign({}, current, alts, {
    old: current
  }));
} // find the right offset a given local time. The o input is our guess, which determines which
// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)


function fixOffset(localTS, o, tz) {
  // Our UTC time is just a guess because our offset is just a guess
  var utcGuess = localTS - o * 60 * 1000; // Test whether the zone matches the offset for this ts

  var o2 = tz.offset(utcGuess); // If so, offset didn't change and we're done

  if (o === o2) {
    return [utcGuess, o];
  } // If not, change the ts by the difference in the offset


  utcGuess -= (o2 - o) * 60 * 1000; // If that gives us the local time we want, we're done

  var o3 = tz.offset(utcGuess);

  if (o2 === o3) {
    return [utcGuess, o2];
  } // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time


  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];
} // convert an epoch timestamp into a calendar object with the given offset


function tsToObj(ts, offset) {
  ts += offset * 60 * 1000;
  var d = new Date(ts);
  return {
    year: d.getUTCFullYear(),
    month: d.getUTCMonth() + 1,
    day: d.getUTCDate(),
    hour: d.getUTCHours(),
    minute: d.getUTCMinutes(),
    second: d.getUTCSeconds(),
    millisecond: d.getUTCMilliseconds()
  };
} // convert a calendar object to a epoch timestamp


function objToTS(obj, offset, zone) {
  return fixOffset(objToLocalTS(obj), offset, zone);
} // create a new DT instance by adding a duration, adjusting for DSTs


function adjustTime(inst, dur) {
  var oPre = inst.o,
      year = inst.c.year + Math.trunc(dur.years),
      month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,
      c = Object.assign({}, inst.c, {
    year: year,
    month: month,
    day: Math.min(inst.c.day, daysInMonth(year, month)) + Math.trunc(dur.days) + Math.trunc(dur.weeks) * 7
  }),
      millisToAdd = Duration.fromObject({
    years: dur.years - Math.trunc(dur.years),
    quarters: dur.quarters - Math.trunc(dur.quarters),
    months: dur.months - Math.trunc(dur.months),
    weeks: dur.weeks - Math.trunc(dur.weeks),
    days: dur.days - Math.trunc(dur.days),
    hours: dur.hours,
    minutes: dur.minutes,
    seconds: dur.seconds,
    milliseconds: dur.milliseconds
  }).as("milliseconds"),
      localTS = objToLocalTS(c);

  var _fixOffset = fixOffset(localTS, oPre, inst.zone),
      ts = _fixOffset[0],
      o = _fixOffset[1];

  if (millisToAdd !== 0) {
    ts += millisToAdd; // that could have changed the offset by going over a DST, but we want to keep the ts the same

    o = inst.zone.offset(ts);
  }

  return {
    ts: ts,
    o: o
  };
} // helper useful in turning the results of parsing into real dates
// by handling the zone options


function parseDataToDateTime(parsed, parsedZone, opts, format, text) {
  var setZone = opts.setZone,
      zone = opts.zone;

  if (parsed && Object.keys(parsed).length !== 0) {
    var interpretationZone = parsedZone || zone,
        inst = DateTime.fromObject(Object.assign(parsed, opts, {
      zone: interpretationZone,
      // setZone is a valid option in the calling methods, but not in fromObject
      setZone: undefined
    }));
    return setZone ? inst : inst.setZone(zone);
  } else {
    return DateTime.invalid(new Invalid("unparsable", "the input \"" + text + "\" can't be parsed as " + format));
  }
} // if you want to output a technical format (e.g. RFC 2822), this helper
// helps handle the details


function toTechFormat(dt, format, allowZ) {
  if (allowZ === void 0) {
    allowZ = true;
  }

  return dt.isValid ? Formatter.create(Locale.create("en-US"), {
    allowZ: allowZ,
    forceSimple: true
  }).formatDateTimeFromString(dt, format) : null;
} // technical time formats (e.g. the time part of ISO 8601), take some options
// and this commonizes their handling


function toTechTimeFormat(dt, _ref) {
  var _ref$suppressSeconds = _ref.suppressSeconds,
      suppressSeconds = _ref$suppressSeconds === void 0 ? false : _ref$suppressSeconds,
      _ref$suppressMillisec = _ref.suppressMilliseconds,
      suppressMilliseconds = _ref$suppressMillisec === void 0 ? false : _ref$suppressMillisec,
      includeOffset = _ref.includeOffset,
      _ref$includePrefix = _ref.includePrefix,
      includePrefix = _ref$includePrefix === void 0 ? false : _ref$includePrefix,
      _ref$includeZone = _ref.includeZone,
      includeZone = _ref$includeZone === void 0 ? false : _ref$includeZone,
      _ref$spaceZone = _ref.spaceZone,
      spaceZone = _ref$spaceZone === void 0 ? false : _ref$spaceZone,
      _ref$format = _ref.format,
      format = _ref$format === void 0 ? "extended" : _ref$format;
  var fmt = format === "basic" ? "HHmm" : "HH:mm";

  if (!suppressSeconds || dt.second !== 0 || dt.millisecond !== 0) {
    fmt += format === "basic" ? "ss" : ":ss";

    if (!suppressMilliseconds || dt.millisecond !== 0) {
      fmt += ".SSS";
    }
  }

  if ((includeZone || includeOffset) && spaceZone) {
    fmt += " ";
  }

  if (includeZone) {
    fmt += "z";
  } else if (includeOffset) {
    fmt += format === "basic" ? "ZZZ" : "ZZ";
  }

  var str = toTechFormat(dt, fmt);

  if (includePrefix) {
    str = "T" + str;
  }

  return str;
} // defaults for unspecified units in the supported calendars


var defaultUnitValues = {
  month: 1,
  day: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
},
    defaultWeekUnitValues = {
  weekNumber: 1,
  weekday: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
},
    defaultOrdinalUnitValues = {
  ordinal: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
}; // Units in the supported calendars, sorted by bigness

var orderedUnits$1 = ["year", "month", "day", "hour", "minute", "second", "millisecond"],
    orderedWeekUnits = ["weekYear", "weekNumber", "weekday", "hour", "minute", "second", "millisecond"],
    orderedOrdinalUnits = ["year", "ordinal", "hour", "minute", "second", "millisecond"]; // standardize case and plurality in units

function normalizeUnit(unit) {
  var normalized = {
    year: "year",
    years: "year",
    month: "month",
    months: "month",
    day: "day",
    days: "day",
    hour: "hour",
    hours: "hour",
    minute: "minute",
    minutes: "minute",
    quarter: "quarter",
    quarters: "quarter",
    second: "second",
    seconds: "second",
    millisecond: "millisecond",
    milliseconds: "millisecond",
    weekday: "weekday",
    weekdays: "weekday",
    weeknumber: "weekNumber",
    weeksnumber: "weekNumber",
    weeknumbers: "weekNumber",
    weekyear: "weekYear",
    weekyears: "weekYear",
    ordinal: "ordinal"
  }[unit.toLowerCase()];
  if (!normalized) throw new InvalidUnitError(unit);
  return normalized;
} // this is a dumbed down version of fromObject() that runs about 60% faster
// but doesn't do any validation, makes a bunch of assumptions about what units
// are present, and so on.


function quickDT(obj, zone) {
  // assume we have the higher-order units
  for (var _iterator = _createForOfIteratorHelperLoose(orderedUnits$1), _step; !(_step = _iterator()).done;) {
    var u = _step.value;

    if (isUndefined(obj[u])) {
      obj[u] = defaultUnitValues[u];
    }
  }

  var invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);

  if (invalid) {
    return DateTime.invalid(invalid);
  }

  var tsNow = Settings.now(),
      offsetProvis = zone.offset(tsNow),
      _objToTS = objToTS(obj, offsetProvis, zone),
      ts = _objToTS[0],
      o = _objToTS[1];

  return new DateTime({
    ts: ts,
    zone: zone,
    o: o
  });
}

function diffRelative(start, end, opts) {
  var round = isUndefined(opts.round) ? true : opts.round,
      format = function format(c, unit) {
    c = roundTo(c, round || opts.calendary ? 0 : 2, true);
    var formatter = end.loc.clone(opts).relFormatter(opts);
    return formatter.format(c, unit);
  },
      differ = function differ(unit) {
    if (opts.calendary) {
      if (!end.hasSame(start, unit)) {
        return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);
      } else return 0;
    } else {
      return end.diff(start, unit).get(unit);
    }
  };

  if (opts.unit) {
    return format(differ(opts.unit), opts.unit);
  }

  for (var _iterator2 = _createForOfIteratorHelperLoose(opts.units), _step2; !(_step2 = _iterator2()).done;) {
    var unit = _step2.value;
    var count = differ(unit);

    if (Math.abs(count) >= 1) {
      return format(count, unit);
    }
  }

  return format(0, opts.units[opts.units.length - 1]);
}
/**
 * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.
 *
 * A DateTime comprises of:
 * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.
 * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).
 * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.
 *
 * Here is a brief overview of the most commonly used functionality it provides:
 *
 * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link local}, {@link utc}, and (most flexibly) {@link fromObject}. To create one from a standard string format, use {@link fromISO}, {@link fromHTTP}, and {@link fromRFC2822}. To create one from a custom string format, use {@link fromFormat}. To create one from a native JS date, use {@link fromJSDate}.
 * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link toObject}), use the {@link year}, {@link month},
 * {@link day}, {@link hour}, {@link minute}, {@link second}, {@link millisecond} accessors.
 * * **Week calendar**: For ISO week calendar attributes, see the {@link weekYear}, {@link weekNumber}, and {@link weekday} accessors.
 * * **Configuration** See the {@link locale} and {@link numberingSystem} accessors.
 * * **Transformation**: To transform the DateTime into other DateTimes, use {@link set}, {@link reconfigure}, {@link setZone}, {@link setLocale}, {@link plus}, {@link minus}, {@link endOf}, {@link startOf}, {@link toUTC}, and {@link toLocal}.
 * * **Output**: To convert the DateTime to other representations, use the {@link toRelative}, {@link toRelativeCalendar}, {@link toJSON}, {@link toISO}, {@link toHTTP}, {@link toObject}, {@link toRFC2822}, {@link toString}, {@link toLocaleString}, {@link toFormat}, {@link toMillis} and {@link toJSDate}.
 *
 * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.
 */


var DateTime = /*#__PURE__*/function () {
  /**
   * @access private
   */
  function DateTime(config) {
    var zone = config.zone || Settings.defaultZone;
    var invalid = config.invalid || (Number.isNaN(config.ts) ? new Invalid("invalid input") : null) || (!zone.isValid ? unsupportedZone(zone) : null);
    /**
     * @access private
     */

    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;
    var c = null,
        o = null;

    if (!invalid) {
      var unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);

      if (unchanged) {
        var _ref2 = [config.old.c, config.old.o];
        c = _ref2[0];
        o = _ref2[1];
      } else {
        var ot = zone.offset(this.ts);
        c = tsToObj(this.ts, ot);
        invalid = Number.isNaN(c.year) ? new Invalid("invalid input") : null;
        c = invalid ? null : c;
        o = invalid ? null : ot;
      }
    }
    /**
     * @access private
     */


    this._zone = zone;
    /**
     * @access private
     */

    this.loc = config.loc || Locale.create();
    /**
     * @access private
     */

    this.invalid = invalid;
    /**
     * @access private
     */

    this.weekData = null;
    /**
     * @access private
     */

    this.c = c;
    /**
     * @access private
     */

    this.o = o;
    /**
     * @access private
     */

    this.isLuxonDateTime = true;
  } // CONSTRUCT

  /**
   * Create a DateTime for the current instant, in the system's time zone.
   *
   * Use Settings to override these default values if needed.
   * @example DateTime.now().toISO() //~> now in the ISO format
   * @return {DateTime}
   */


  DateTime.now = function now() {
    return new DateTime({});
  }
  /**
   * Create a local DateTime
   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month, 1-indexed
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @example DateTime.local()                            //~> now
   * @example DateTime.local(2017)                        //~> 2017-01-01T00:00:00
   * @example DateTime.local(2017, 3)                     //~> 2017-03-01T00:00:00
   * @example DateTime.local(2017, 3, 12)                 //~> 2017-03-12T00:00:00
   * @example DateTime.local(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00
   * @example DateTime.local(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00
   * @example DateTime.local(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10
   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765
   * @return {DateTime}
   */
  ;

  DateTime.local = function local(year, month, day, hour, minute, second, millisecond) {
    if (isUndefined(year)) {
      return new DateTime({});
    } else {
      return quickDT({
        year: year,
        month: month,
        day: day,
        hour: hour,
        minute: minute,
        second: second,
        millisecond: millisecond
      }, Settings.defaultZone);
    }
  }
  /**
   * Create a DateTime in UTC
   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @example DateTime.utc()                            //~> now
   * @example DateTime.utc(2017)                        //~> 2017-01-01T00:00:00Z
   * @example DateTime.utc(2017, 3)                     //~> 2017-03-01T00:00:00Z
   * @example DateTime.utc(2017, 3, 12)                 //~> 2017-03-12T00:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765Z
   * @return {DateTime}
   */
  ;

  DateTime.utc = function utc(year, month, day, hour, minute, second, millisecond) {
    if (isUndefined(year)) {
      return new DateTime({
        ts: Settings.now(),
        zone: FixedOffsetZone.utcInstance
      });
    } else {
      return quickDT({
        year: year,
        month: month,
        day: day,
        hour: hour,
        minute: minute,
        second: second,
        millisecond: millisecond
      }, FixedOffsetZone.utcInstance);
    }
  }
  /**
   * Create a DateTime from a JavaScript Date object. Uses the default zone.
   * @param {Date} date - a JavaScript Date object
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @return {DateTime}
   */
  ;

  DateTime.fromJSDate = function fromJSDate(date, options) {
    if (options === void 0) {
      options = {};
    }

    var ts = isDate(date) ? date.valueOf() : NaN;

    if (Number.isNaN(ts)) {
      return DateTime.invalid("invalid input");
    }

    var zoneToUse = normalizeZone(options.zone, Settings.defaultZone);

    if (!zoneToUse.isValid) {
      return DateTime.invalid(unsupportedZone(zoneToUse));
    }

    return new DateTime({
      ts: ts,
      zone: zoneToUse,
      loc: Locale.fromObject(options)
    });
  }
  /**
   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} milliseconds - a number of milliseconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromMillis = function fromMillis(milliseconds, options) {
    if (options === void 0) {
      options = {};
    }

    if (!isNumber(milliseconds)) {
      throw new InvalidArgumentError("fromMillis requires a numerical input, but received a " + typeof milliseconds + " with value " + milliseconds);
    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {
      // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start
      return DateTime.invalid("Timestamp out of range");
    } else {
      return new DateTime({
        ts: milliseconds,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  /**
   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} seconds - a number of seconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromSeconds = function fromSeconds(seconds, options) {
    if (options === void 0) {
      options = {};
    }

    if (!isNumber(seconds)) {
      throw new InvalidArgumentError("fromSeconds requires a numerical input");
    } else {
      return new DateTime({
        ts: seconds * 1000,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  /**
   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.year - a year, such as 1987
   * @param {number} obj.month - a month, 1-12
   * @param {number} obj.day - a day of the month, 1-31, depending on the month
   * @param {number} obj.ordinal - day of the year, 1-365 or 366
   * @param {number} obj.weekYear - an ISO week year
   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year
   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday
   * @param {number} obj.hour - hour of the day, 0-23
   * @param {number} obj.minute - minute of the hour, 0-59
   * @param {number} obj.second - second of the minute, 0-59
   * @param {number} obj.millisecond - millisecond of the second, 0-999
   * @param {string|Zone} [obj.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()
   * @param {string} [obj.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} obj.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} obj.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'
   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'utc' }),
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'local' })
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'America/New_York' })
   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'
   * @return {DateTime}
   */
  ;

  DateTime.fromObject = function fromObject(obj) {
    var zoneToUse = normalizeZone(obj.zone, Settings.defaultZone);

    if (!zoneToUse.isValid) {
      return DateTime.invalid(unsupportedZone(zoneToUse));
    }

    var tsNow = Settings.now(),
        offsetProvis = zoneToUse.offset(tsNow),
        normalized = normalizeObject(obj, normalizeUnit, ["zone", "locale", "outputCalendar", "numberingSystem"]),
        containsOrdinal = !isUndefined(normalized.ordinal),
        containsGregorYear = !isUndefined(normalized.year),
        containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),
        containsGregor = containsGregorYear || containsGregorMD,
        definiteWeekDef = normalized.weekYear || normalized.weekNumber,
        loc = Locale.fromObject(obj); // cases:
    // just a weekday -> this week's instance of that weekday, no worries
    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error
    // (gregorian month or day) + ordinal -> error
    // otherwise just use weeks or ordinals or gregorian, depending on what's specified

    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
    }

    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }

    var useWeekData = definiteWeekDef || normalized.weekday && !containsGregor; // configure ourselves to deal with gregorian dates or week stuff

    var units,
        defaultValues,
        objNow = tsToObj(tsNow, offsetProvis);

    if (useWeekData) {
      units = orderedWeekUnits;
      defaultValues = defaultWeekUnitValues;
      objNow = gregorianToWeek(objNow);
    } else if (containsOrdinal) {
      units = orderedOrdinalUnits;
      defaultValues = defaultOrdinalUnitValues;
      objNow = gregorianToOrdinal(objNow);
    } else {
      units = orderedUnits$1;
      defaultValues = defaultUnitValues;
    } // set default values for missing stuff


    var foundFirst = false;

    for (var _iterator3 = _createForOfIteratorHelperLoose(units), _step3; !(_step3 = _iterator3()).done;) {
      var u = _step3.value;
      var v = normalized[u];

      if (!isUndefined(v)) {
        foundFirst = true;
      } else if (foundFirst) {
        normalized[u] = defaultValues[u];
      } else {
        normalized[u] = objNow[u];
      }
    } // make sure the values we have are in range


    var higherOrderInvalid = useWeekData ? hasInvalidWeekData(normalized) : containsOrdinal ? hasInvalidOrdinalData(normalized) : hasInvalidGregorianData(normalized),
        invalid = higherOrderInvalid || hasInvalidTimeData(normalized);

    if (invalid) {
      return DateTime.invalid(invalid);
    } // compute the actual time


    var gregorian = useWeekData ? weekToGregorian(normalized) : containsOrdinal ? ordinalToGregorian(normalized) : normalized,
        _objToTS2 = objToTS(gregorian, offsetProvis, zoneToUse),
        tsFinal = _objToTS2[0],
        offsetFinal = _objToTS2[1],
        inst = new DateTime({
      ts: tsFinal,
      zone: zoneToUse,
      o: offsetFinal,
      loc: loc
    }); // gregorian data + weekday serves only to validate


    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {
      return DateTime.invalid("mismatched weekday", "you can't specify both a weekday of " + normalized.weekday + " and a date of " + inst.toISO());
    }

    return inst;
  }
  /**
   * Create a DateTime from an ISO 8601 string
   * @param {string} text - the ISO string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromISO('2016-05-25T09:08:34.123')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})
   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})
   * @example DateTime.fromISO('2016-W05-4')
   * @return {DateTime}
   */
  ;

  DateTime.fromISO = function fromISO(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseISODate = parseISODate(text),
        vals = _parseISODate[0],
        parsedZone = _parseISODate[1];

    return parseDataToDateTime(vals, parsedZone, opts, "ISO 8601", text);
  }
  /**
   * Create a DateTime from an RFC 2822 string
   * @param {string} text - the RFC 2822 string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')
   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')
   * @return {DateTime}
   */
  ;

  DateTime.fromRFC2822 = function fromRFC2822(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseRFC2822Date = parseRFC2822Date(text),
        vals = _parseRFC2822Date[0],
        parsedZone = _parseRFC2822Date[1];

    return parseDataToDateTime(vals, parsedZone, opts, "RFC 2822", text);
  }
  /**
   * Create a DateTime from an HTTP header date
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @param {string} text - the HTTP header date
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')
   * @return {DateTime}
   */
  ;

  DateTime.fromHTTP = function fromHTTP(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseHTTPDate = parseHTTPDate(text),
        vals = _parseHTTPDate[0],
        parsedZone = _parseHTTPDate[1];

    return parseDataToDateTime(vals, parsedZone, opts, "HTTP", opts);
  }
  /**
   * Create a DateTime from an input string and format string.
   * Defaults to en-US if no locale has been specified, regardless of the system's locale.
   * @see https://moment.github.io/luxon/docs/manual/parsing.html#table-of-tokens
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromFormat = function fromFormat(text, fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (isUndefined(text) || isUndefined(fmt)) {
      throw new InvalidArgumentError("fromFormat requires an input string and a format");
    }

    var _opts = opts,
        _opts$locale = _opts.locale,
        locale = _opts$locale === void 0 ? null : _opts$locale,
        _opts$numberingSystem = _opts.numberingSystem,
        numberingSystem = _opts$numberingSystem === void 0 ? null : _opts$numberingSystem,
        localeToUse = Locale.fromOpts({
      locale: locale,
      numberingSystem: numberingSystem,
      defaultToEN: true
    }),
        _parseFromTokens = parseFromTokens(localeToUse, text, fmt),
        vals = _parseFromTokens[0],
        parsedZone = _parseFromTokens[1],
        invalid = _parseFromTokens[2];

    if (invalid) {
      return DateTime.invalid(invalid);
    } else {
      return parseDataToDateTime(vals, parsedZone, opts, "format " + fmt, text);
    }
  }
  /**
   * @deprecated use fromFormat instead
   */
  ;

  DateTime.fromString = function fromString(text, fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return DateTime.fromFormat(text, fmt, opts);
  }
  /**
   * Create a DateTime from a SQL date, time, or datetime
   * Defaults to en-US if no locale has been specified, regardless of the system's locale
   * @param {string} text - the string to parse
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @example DateTime.fromSQL('2017-05-15')
   * @example DateTime.fromSQL('2017-05-15 09:12:34')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })
   * @example DateTime.fromSQL('09:12:34.342')
   * @return {DateTime}
   */
  ;

  DateTime.fromSQL = function fromSQL(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseSQL = parseSQL(text),
        vals = _parseSQL[0],
        parsedZone = _parseSQL[1];

    return parseDataToDateTime(vals, parsedZone, opts, "SQL", text);
  }
  /**
   * Create an invalid DateTime.
   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {DateTime}
   */
  ;

  DateTime.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidDateTimeError(invalid);
    } else {
      return new DateTime({
        invalid: invalid
      });
    }
  }
  /**
   * Check if an object is a DateTime. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  DateTime.isDateTime = function isDateTime(o) {
    return o && o.isLuxonDateTime || false;
  } // INFO

  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7
   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4
   * @return {number}
   */
  ;

  var _proto = DateTime.prototype;

  _proto.get = function get(unit) {
    return this[unit];
  }
  /**
   * Returns whether the DateTime is valid. Invalid DateTimes occur when:
   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30
   * * The DateTime was created by an operation on another invalid date
   * @type {boolean}
   */
  ;

  /**
   * Returns the resolved Intl options for this DateTime.
   * This is useful in understanding the behavior of formatting methods
   * @param {Object} opts - the same options as toLocaleString
   * @return {Object}
   */
  _proto.resolvedLocaleOpts = function resolvedLocaleOpts(opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _Formatter$create$res = Formatter.create(this.loc.clone(opts), opts).resolvedOptions(this),
        locale = _Formatter$create$res.locale,
        numberingSystem = _Formatter$create$res.numberingSystem,
        calendar = _Formatter$create$res.calendar;

    return {
      locale: locale,
      numberingSystem: numberingSystem,
      outputCalendar: calendar
    };
  } // TRANSFORM

  /**
   * "Set" the DateTime's zone to UTC. Returns a newly-constructed DateTime.
   *
   * Equivalent to {@link setZone}('utc')
   * @param {number} [offset=0] - optionally, an offset from UTC in minutes
   * @param {Object} [opts={}] - options to pass to `setZone()`
   * @return {DateTime}
   */
  ;

  _proto.toUTC = function toUTC(offset, opts) {
    if (offset === void 0) {
      offset = 0;
    }

    if (opts === void 0) {
      opts = {};
    }

    return this.setZone(FixedOffsetZone.instance(offset), opts);
  }
  /**
   * "Set" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.
   *
   * Equivalent to `setZone('local')`
   * @return {DateTime}
   */
  ;

  _proto.toLocal = function toLocal() {
    return this.setZone(Settings.defaultZone);
  }
  /**
   * "Set" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.
   *
   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link plus}. You may wish to use {@link toLocal} and {@link toUTC} which provide simple convenience wrappers for commonly used zones.
   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link Zone} class.
   * @param {Object} opts - options
   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.
   * @return {DateTime}
   */
  ;

  _proto.setZone = function setZone(zone, _temp) {
    var _ref3 = _temp === void 0 ? {} : _temp,
        _ref3$keepLocalTime = _ref3.keepLocalTime,
        keepLocalTime = _ref3$keepLocalTime === void 0 ? false : _ref3$keepLocalTime,
        _ref3$keepCalendarTim = _ref3.keepCalendarTime,
        keepCalendarTime = _ref3$keepCalendarTim === void 0 ? false : _ref3$keepCalendarTim;

    zone = normalizeZone(zone, Settings.defaultZone);

    if (zone.equals(this.zone)) {
      return this;
    } else if (!zone.isValid) {
      return DateTime.invalid(unsupportedZone(zone));
    } else {
      var newTS = this.ts;

      if (keepLocalTime || keepCalendarTime) {
        var offsetGuess = zone.offset(this.ts);
        var asObj = this.toObject();

        var _objToTS3 = objToTS(asObj, offsetGuess, zone);

        newTS = _objToTS3[0];
      }

      return clone$1(this, {
        ts: newTS,
        zone: zone
      });
    }
  }
  /**
   * "Set" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.
   * @param {Object} properties - the properties to set
   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })
   * @return {DateTime}
   */
  ;

  _proto.reconfigure = function reconfigure(_temp2) {
    var _ref4 = _temp2 === void 0 ? {} : _temp2,
        locale = _ref4.locale,
        numberingSystem = _ref4.numberingSystem,
        outputCalendar = _ref4.outputCalendar;

    var loc = this.loc.clone({
      locale: locale,
      numberingSystem: numberingSystem,
      outputCalendar: outputCalendar
    });
    return clone$1(this, {
      loc: loc
    });
  }
  /**
   * "Set" the locale. Returns a newly-constructed DateTime.
   * Just a convenient alias for reconfigure({ locale })
   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')
   * @return {DateTime}
   */
  ;

  _proto.setLocale = function setLocale(locale) {
    return this.reconfigure({
      locale: locale
    });
  }
  /**
   * "Set" the values of specified units. Returns a newly-constructed DateTime.
   * You can only set units with this method; for "setting" metadata, see {@link reconfigure} and {@link setZone}.
   * @param {Object} values - a mapping of units to numbers
   * @example dt.set({ year: 2017 })
   * @example dt.set({ hour: 8, minute: 30 })
   * @example dt.set({ weekday: 5 })
   * @example dt.set({ year: 2005, ordinal: 234 })
   * @return {DateTime}
   */
  ;

  _proto.set = function set(values) {
    if (!this.isValid) return this;
    var normalized = normalizeObject(values, normalizeUnit, []),
        settingWeekStuff = !isUndefined(normalized.weekYear) || !isUndefined(normalized.weekNumber) || !isUndefined(normalized.weekday);
    var mixed;

    if (settingWeekStuff) {
      mixed = weekToGregorian(Object.assign(gregorianToWeek(this.c), normalized));
    } else if (!isUndefined(normalized.ordinal)) {
      mixed = ordinalToGregorian(Object.assign(gregorianToOrdinal(this.c), normalized));
    } else {
      mixed = Object.assign(this.toObject(), normalized); // if we didn't set the day but we ended up on an overflow date,
      // use the last day of the right month

      if (isUndefined(normalized.day)) {
        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);
      }
    }

    var _objToTS4 = objToTS(mixed, this.o, this.zone),
        ts = _objToTS4[0],
        o = _objToTS4[1];

    return clone$1(this, {
      ts: ts,
      o: o
    });
  }
  /**
   * Add a period of time to this DateTime and return the resulting DateTime
   *
   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @example DateTime.now().plus(123) //~> in 123 milliseconds
   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes
   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow
   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday
   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min
   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min
   * @return {DateTime}
   */
  ;

  _proto.plus = function plus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration);
    return clone$1(this, adjustTime(this, dur));
  }
  /**
   * Subtract a period of time to this DateTime and return the resulting DateTime
   * See {@link plus}
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   @return {DateTime}
  */
  ;

  _proto.minus = function minus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration).negate();
    return clone$1(this, adjustTime(this, dur));
  }
  /**
   * "Set" this DateTime to the beginning of a unit of time.
   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'
   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'
   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'
   * @return {DateTime}
   */
  ;

  _proto.startOf = function startOf(unit) {
    if (!this.isValid) return this;
    var o = {},
        normalizedUnit = Duration.normalizeUnit(unit);

    switch (normalizedUnit) {
      case "years":
        o.month = 1;
      // falls through

      case "quarters":
      case "months":
        o.day = 1;
      // falls through

      case "weeks":
      case "days":
        o.hour = 0;
      // falls through

      case "hours":
        o.minute = 0;
      // falls through

      case "minutes":
        o.second = 0;
      // falls through

      case "seconds":
        o.millisecond = 0;
        break;
      // no default, invalid units throw in normalizeUnit()
    }

    if (normalizedUnit === "weeks") {
      o.weekday = 1;
    }

    if (normalizedUnit === "quarters") {
      var q = Math.ceil(this.month / 3);
      o.month = (q - 1) * 3 + 1;
    }

    return this.set(o);
  }
  /**
   * "Set" this DateTime to the end (meaning the last millisecond) of a unit of time
   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'
   * @return {DateTime}
   */
  ;

  _proto.endOf = function endOf(unit) {
    var _this$plus;

    return this.isValid ? this.plus((_this$plus = {}, _this$plus[unit] = 1, _this$plus)).startOf(unit).minus(1) : this;
  } // OUTPUT

  /**
   * Returns a string representation of this DateTime formatted according to the specified format string.
   * **You may not want this.** See {@link toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens).
   * Defaults to en-US if no locale has been specified, regardless of the system's locale.
   * @see https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens
   * @param {string} fmt - the format string
   * @param {Object} opts - opts to override the configuration options
   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'
   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'
   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: "fr" }) //=> '2017 avr. 22'
   * @example DateTime.now().toFormat("HH 'hours and' mm 'minutes'") //=> '20 hours and 55 minutes'
   * @return {string}
   */
  ;

  _proto.toFormat = function toFormat(fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return this.isValid ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt) : INVALID$2;
  }
  /**
   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.
   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation
   * of the DateTime in the assigned locale.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param opts {Object} - Intl.DateTimeFormat constructor options and configuration options
   * @example DateTime.now().toLocaleString(); //=> 4/20/2017
   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'
   * @example DateTime.now().toLocaleString({ locale: 'en-gb' }); //=> '20/04/2017'
   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'
   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'
   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'
   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'
   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'
   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hour12: false }); //=> '11:32'
   * @return {string}
   */
  ;

  _proto.toLocaleString = function toLocaleString(opts) {
    if (opts === void 0) {
      opts = DATE_SHORT;
    }

    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTime(this) : INVALID$2;
  }
  /**
   * Returns an array of format "parts", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts
   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.
   * @example DateTime.now().toLocaleParts(); //=> [
   *                                   //=>   { type: 'day', value: '25' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'month', value: '05' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'year', value: '1982' }
   *                                   //=> ]
   */
  ;

  _proto.toLocaleParts = function toLocaleParts(opts) {
    if (opts === void 0) {
      opts = {};
    }

    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this) : [];
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1982, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'
   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'
   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'
   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'
   * @return {string}
   */
  ;

  _proto.toISO = function toISO(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) {
      return null;
    }

    return this.toISODate(opts) + "T" + this.toISOTime(opts);
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's date component
   * @param {Object} opts - options
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'
   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'
   * @return {string}
   */
  ;

  _proto.toISODate = function toISODate(_temp3) {
    var _ref5 = _temp3 === void 0 ? {} : _temp3,
        _ref5$format = _ref5.format,
        format = _ref5$format === void 0 ? "extended" : _ref5$format;

    var fmt = format === "basic" ? "yyyyMMdd" : "yyyy-MM-dd";

    if (this.year > 9999) {
      fmt = "+" + fmt;
    }

    return toTechFormat(this, fmt);
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's week date
   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'
   * @return {string}
   */
  ;

  _proto.toISOWeekDate = function toISOWeekDate() {
    return toTechFormat(this, "kkkk-'W'WW-c");
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's time component
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(_temp4) {
    var _ref6 = _temp4 === void 0 ? {} : _temp4,
        _ref6$suppressMillise = _ref6.suppressMilliseconds,
        suppressMilliseconds = _ref6$suppressMillise === void 0 ? false : _ref6$suppressMillise,
        _ref6$suppressSeconds = _ref6.suppressSeconds,
        suppressSeconds = _ref6$suppressSeconds === void 0 ? false : _ref6$suppressSeconds,
        _ref6$includeOffset = _ref6.includeOffset,
        includeOffset = _ref6$includeOffset === void 0 ? true : _ref6$includeOffset,
        _ref6$includePrefix = _ref6.includePrefix,
        includePrefix = _ref6$includePrefix === void 0 ? false : _ref6$includePrefix,
        _ref6$format = _ref6.format,
        format = _ref6$format === void 0 ? "extended" : _ref6$format;

    return toTechTimeFormat(this, {
      suppressSeconds: suppressSeconds,
      suppressMilliseconds: suppressMilliseconds,
      includeOffset: includeOffset,
      includePrefix: includePrefix,
      format: format
    });
  }
  /**
   * Returns an RFC 2822-compatible string representation of this DateTime, always in UTC
   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'
   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'
   * @return {string}
   */
  ;

  _proto.toRFC2822 = function toRFC2822() {
    return toTechFormat(this, "EEE, dd LLL yyyy HH:mm:ss ZZZ", false);
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in HTTP headers.
   * Specifically, the string conforms to RFC 1123.
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'
   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'
   * @return {string}
   */
  ;

  _proto.toHTTP = function toHTTP() {
    return toTechFormat(this.toUTC(), "EEE, dd LLL yyyy HH:mm:ss 'GMT'");
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Date
   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'
   * @return {string}
   */
  ;

  _proto.toSQLDate = function toSQLDate() {
    return toTechFormat(this, "yyyy-MM-dd");
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Time
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @example DateTime.utc().toSQL() //=> '05:15:16.345'
   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'
   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'
   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'
   * @return {string}
   */
  ;

  _proto.toSQLTime = function toSQLTime(_temp5) {
    var _ref7 = _temp5 === void 0 ? {} : _temp5,
        _ref7$includeOffset = _ref7.includeOffset,
        includeOffset = _ref7$includeOffset === void 0 ? true : _ref7$includeOffset,
        _ref7$includeZone = _ref7.includeZone,
        includeZone = _ref7$includeZone === void 0 ? false : _ref7$includeZone;

    return toTechTimeFormat(this, {
      includeOffset: includeOffset,
      includeZone: includeZone,
      spaceZone: true
    });
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'
   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'
   * @return {string}
   */
  ;

  _proto.toSQL = function toSQL(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) {
      return null;
    }

    return this.toSQLDate() + " " + this.toSQLTime(opts);
  }
  /**
   * Returns a string representation of this DateTime appropriate for debugging
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    return this.isValid ? this.toISO() : INVALID$2;
  }
  /**
   * Returns the epoch milliseconds of this DateTime. Alias of {@link toMillis}
   * @return {number}
   */
  ;

  _proto.valueOf = function valueOf() {
    return this.toMillis();
  }
  /**
   * Returns the epoch milliseconds of this DateTime.
   * @return {number}
   */
  ;

  _proto.toMillis = function toMillis() {
    return this.isValid ? this.ts : NaN;
  }
  /**
   * Returns the epoch seconds of this DateTime.
   * @return {number}
   */
  ;

  _proto.toSeconds = function toSeconds() {
    return this.isValid ? this.ts / 1000 : NaN;
  }
  /**
   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.
   * @return {string}
   */
  ;

  _proto.toJSON = function toJSON() {
    return this.toISO();
  }
  /**
   * Returns a BSON serializable equivalent to this DateTime.
   * @return {Date}
   */
  ;

  _proto.toBSON = function toBSON() {
    return this.toJSDate();
  }
  /**
   * Returns a JavaScript object with this DateTime's year, month, day, and so on.
   * @param opts - options for generating the object
   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }
   * @return {Object}
   */
  ;

  _proto.toObject = function toObject(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return {};
    var base = Object.assign({}, this.c);

    if (opts.includeConfig) {
      base.outputCalendar = this.outputCalendar;
      base.numberingSystem = this.loc.numberingSystem;
      base.locale = this.loc.locale;
    }

    return base;
  }
  /**
   * Returns a JavaScript Date equivalent to this DateTime.
   * @return {Date}
   */
  ;

  _proto.toJSDate = function toJSDate() {
    return new Date(this.isValid ? this.ts : NaN);
  } // COMPARE

  /**
   * Return the difference between two DateTimes as a Duration.
   * @param {DateTime} otherDateTime - the DateTime to compare this one to
   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example
   * var i1 = DateTime.fromISO('1982-05-25T09:45'),
   *     i2 = DateTime.fromISO('1983-10-14T10:30');
   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }
   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }
   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }
   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }
   * @return {Duration}
   */
  ;

  _proto.diff = function diff(otherDateTime, unit, opts) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid || !otherDateTime.isValid) {
      return Duration.invalid(this.invalid || otherDateTime.invalid, "created by diffing an invalid DateTime");
    }

    var durOpts = Object.assign({
      locale: this.locale,
      numberingSystem: this.numberingSystem
    }, opts);

    var units = maybeArray(unit).map(Duration.normalizeUnit),
        otherIsLater = otherDateTime.valueOf() > this.valueOf(),
        earlier = otherIsLater ? this : otherDateTime,
        later = otherIsLater ? otherDateTime : this,
        diffed = _diff(earlier, later, units, durOpts);

    return otherIsLater ? diffed.negate() : diffed;
  }
  /**
   * Return the difference between this DateTime and right now.
   * See {@link diff}
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  ;

  _proto.diffNow = function diffNow(unit, opts) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (opts === void 0) {
      opts = {};
    }

    return this.diff(DateTime.now(), unit, opts);
  }
  /**
   * Return an Interval spanning between this DateTime and another DateTime
   * @param {DateTime} otherDateTime - the other end point of the Interval
   * @return {Interval}
   */
  ;

  _proto.until = function until(otherDateTime) {
    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;
  }
  /**
   * Return whether this DateTime is in the same unit of time as another DateTime.
   * Higher-order units must also be identical for this function to return `true`.
   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link setZone} to convert one of the dates if needed.
   * @param {DateTime} otherDateTime - the other DateTime
   * @param {string} unit - the unit of time to check sameness on
   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day
   * @return {boolean}
   */
  ;

  _proto.hasSame = function hasSame(otherDateTime, unit) {
    if (!this.isValid) return false;
    var inputMs = otherDateTime.valueOf();
    var otherZoneDateTime = this.setZone(otherDateTime.zone, {
      keepLocalTime: true
    });
    return otherZoneDateTime.startOf(unit) <= inputMs && inputMs <= otherZoneDateTime.endOf(unit);
  }
  /**
   * Equality check
   * Two DateTimes are equal iff they represent the same millisecond, have the same zone and location, and are both valid.
   * To compare just the millisecond values, use `+dt1 === +dt2`.
   * @param {DateTime} other - the other DateTime
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(other) {
    return this.isValid && other.isValid && this.valueOf() === other.valueOf() && this.zone.equals(other.zone) && this.loc.equals(other.loc);
  }
  /**
   * Returns a string representation of a this time relative to now, such as "in two days". Can only internationalize if your
   * platform supports Intl.RelativeTimeFormat. Rounds down by default.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} [options.style="long"] - the style of units, must be "long", "short", or "narrow"
   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of "years", "quarters", "months", "weeks", "days", "hours", "minutes", or "seconds"
   * @param {boolean} [options.round=true] - whether to round the numbers in the output.
   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> "in 1 day"
   * @example DateTime.now().setLocale("es").toRelative({ days: 1 }) //=> "dentro de 1 día"
   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: "fr" }) //=> "dans 23 heures"
   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> "2 days ago"
   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: "hours" }) //=> "48 hours ago"
   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> "1.5 days ago"
   */
  ;

  _proto.toRelative = function toRelative(options) {
    if (options === void 0) {
      options = {};
    }

    if (!this.isValid) return null;
    var base = options.base || DateTime.fromObject({
      zone: this.zone
    }),
        padding = options.padding ? this < base ? -options.padding : options.padding : 0;
    return diffRelative(base, this.plus(padding), Object.assign(options, {
      numeric: "always",
      units: ["years", "months", "days", "hours", "minutes", "seconds"]
    }));
  }
  /**
   * Returns a string representation of this date relative to today, such as "yesterday" or "next month".
   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of "years", "quarters", "months", "weeks", or "days"
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> "tomorrow"
   * @example DateTime.now().setLocale("es").plus({ days: 1 }).toRelative() //=> ""mañana"
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: "fr" }) //=> "demain"
   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> "2 days ago"
   */
  ;

  _proto.toRelativeCalendar = function toRelativeCalendar(options) {
    if (options === void 0) {
      options = {};
    }

    if (!this.isValid) return null;
    return diffRelative(options.base || DateTime.fromObject({
      zone: this.zone
    }), this, Object.assign(options, {
      numeric: "auto",
      units: ["years", "months", "days"],
      calendary: true
    }));
  }
  /**
   * Return the min of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum
   * @return {DateTime} the min DateTime, or undefined if called with no argument
   */
  ;

  DateTime.min = function min() {
    for (var _len = arguments.length, dateTimes = new Array(_len), _key = 0; _key < _len; _key++) {
      dateTimes[_key] = arguments[_key];
    }

    if (!dateTimes.every(DateTime.isDateTime)) {
      throw new InvalidArgumentError("min requires all arguments be DateTimes");
    }

    return bestBy(dateTimes, function (i) {
      return i.valueOf();
    }, Math.min);
  }
  /**
   * Return the max of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum
   * @return {DateTime} the max DateTime, or undefined if called with no argument
   */
  ;

  DateTime.max = function max() {
    for (var _len2 = arguments.length, dateTimes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      dateTimes[_key2] = arguments[_key2];
    }

    if (!dateTimes.every(DateTime.isDateTime)) {
      throw new InvalidArgumentError("max requires all arguments be DateTimes");
    }

    return bestBy(dateTimes, function (i) {
      return i.valueOf();
    }, Math.max);
  } // MISC

  /**
   * Explain how a string would be parsed by fromFormat()
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see description)
   * @param {Object} options - options taken by fromFormat()
   * @return {Object}
   */
  ;

  DateTime.fromFormatExplain = function fromFormatExplain(text, fmt, options) {
    if (options === void 0) {
      options = {};
    }

    var _options = options,
        _options$locale = _options.locale,
        locale = _options$locale === void 0 ? null : _options$locale,
        _options$numberingSys = _options.numberingSystem,
        numberingSystem = _options$numberingSys === void 0 ? null : _options$numberingSys,
        localeToUse = Locale.fromOpts({
      locale: locale,
      numberingSystem: numberingSystem,
      defaultToEN: true
    });
    return explainFromTokens(localeToUse, text, fmt);
  }
  /**
   * @deprecated use fromFormatExplain instead
   */
  ;

  DateTime.fromStringExplain = function fromStringExplain(text, fmt, options) {
    if (options === void 0) {
      options = {};
    }

    return DateTime.fromFormatExplain(text, fmt, options);
  } // FORMAT PRESETS

  /**
   * {@link toLocaleString} format like 10/14/1983
   * @type {Object}
   */
  ;

  _createClass(DateTime, [{
    key: "isValid",
    get: function get() {
      return this.invalid === null;
    }
    /**
     * Returns an error code if this DateTime is invalid, or null if the DateTime is valid
     * @type {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
    /**
     * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "locale",
    get: function get() {
      return this.isValid ? this.loc.locale : null;
    }
    /**
     * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "numberingSystem",
    get: function get() {
      return this.isValid ? this.loc.numberingSystem : null;
    }
    /**
     * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "outputCalendar",
    get: function get() {
      return this.isValid ? this.loc.outputCalendar : null;
    }
    /**
     * Get the time zone associated with this DateTime.
     * @type {Zone}
     */

  }, {
    key: "zone",
    get: function get() {
      return this._zone;
    }
    /**
     * Get the name of the time zone.
     * @type {string}
     */

  }, {
    key: "zoneName",
    get: function get() {
      return this.isValid ? this.zone.name : null;
    }
    /**
     * Get the year
     * @example DateTime.local(2017, 5, 25).year //=> 2017
     * @type {number}
     */

  }, {
    key: "year",
    get: function get() {
      return this.isValid ? this.c.year : NaN;
    }
    /**
     * Get the quarter
     * @example DateTime.local(2017, 5, 25).quarter //=> 2
     * @type {number}
     */

  }, {
    key: "quarter",
    get: function get() {
      return this.isValid ? Math.ceil(this.c.month / 3) : NaN;
    }
    /**
     * Get the month (1-12).
     * @example DateTime.local(2017, 5, 25).month //=> 5
     * @type {number}
     */

  }, {
    key: "month",
    get: function get() {
      return this.isValid ? this.c.month : NaN;
    }
    /**
     * Get the day of the month (1-30ish).
     * @example DateTime.local(2017, 5, 25).day //=> 25
     * @type {number}
     */

  }, {
    key: "day",
    get: function get() {
      return this.isValid ? this.c.day : NaN;
    }
    /**
     * Get the hour of the day (0-23).
     * @example DateTime.local(2017, 5, 25, 9).hour //=> 9
     * @type {number}
     */

  }, {
    key: "hour",
    get: function get() {
      return this.isValid ? this.c.hour : NaN;
    }
    /**
     * Get the minute of the hour (0-59).
     * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30
     * @type {number}
     */

  }, {
    key: "minute",
    get: function get() {
      return this.isValid ? this.c.minute : NaN;
    }
    /**
     * Get the second of the minute (0-59).
     * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52
     * @type {number}
     */

  }, {
    key: "second",
    get: function get() {
      return this.isValid ? this.c.second : NaN;
    }
    /**
     * Get the millisecond of the second (0-999).
     * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654
     * @type {number}
     */

  }, {
    key: "millisecond",
    get: function get() {
      return this.isValid ? this.c.millisecond : NaN;
    }
    /**
     * Get the week year
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2014, 11, 31).weekYear //=> 2015
     * @type {number}
     */

  }, {
    key: "weekYear",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;
    }
    /**
     * Get the week number of the week year (1-52ish).
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2017, 5, 25).weekNumber //=> 21
     * @type {number}
     */

  }, {
    key: "weekNumber",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;
    }
    /**
     * Get the day of the week.
     * 1 is Monday and 7 is Sunday
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2014, 11, 31).weekday //=> 4
     * @type {number}
     */

  }, {
    key: "weekday",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;
    }
    /**
     * Get the ordinal (meaning the day of the year)
     * @example DateTime.local(2017, 5, 25).ordinal //=> 145
     * @type {number|DateTime}
     */

  }, {
    key: "ordinal",
    get: function get() {
      return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;
    }
    /**
     * Get the human readable short month name, such as 'Oct'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).monthShort //=> Oct
     * @type {string}
     */

  }, {
    key: "monthShort",
    get: function get() {
      return this.isValid ? Info.months("short", {
        locale: this.locale
      })[this.month - 1] : null;
    }
    /**
     * Get the human readable long month name, such as 'October'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).monthLong //=> October
     * @type {string}
     */

  }, {
    key: "monthLong",
    get: function get() {
      return this.isValid ? Info.months("long", {
        locale: this.locale
      })[this.month - 1] : null;
    }
    /**
     * Get the human readable short weekday, such as 'Mon'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon
     * @type {string}
     */

  }, {
    key: "weekdayShort",
    get: function get() {
      return this.isValid ? Info.weekdays("short", {
        locale: this.locale
      })[this.weekday - 1] : null;
    }
    /**
     * Get the human readable long weekday, such as 'Monday'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday
     * @type {string}
     */

  }, {
    key: "weekdayLong",
    get: function get() {
      return this.isValid ? Info.weekdays("long", {
        locale: this.locale
      })[this.weekday - 1] : null;
    }
    /**
     * Get the UTC offset of this DateTime in minutes
     * @example DateTime.now().offset //=> -240
     * @example DateTime.utc().offset //=> 0
     * @type {number}
     */

  }, {
    key: "offset",
    get: function get() {
      return this.isValid ? +this.o : NaN;
    }
    /**
     * Get the short human name for the zone's current offset, for example "EST" or "EDT".
     * Defaults to the system's locale if no locale has been specified
     * @type {string}
     */

  }, {
    key: "offsetNameShort",
    get: function get() {
      if (this.isValid) {
        return this.zone.offsetName(this.ts, {
          format: "short",
          locale: this.locale
        });
      } else {
        return null;
      }
    }
    /**
     * Get the long human name for the zone's current offset, for example "Eastern Standard Time" or "Eastern Daylight Time".
     * Defaults to the system's locale if no locale has been specified
     * @type {string}
     */

  }, {
    key: "offsetNameLong",
    get: function get() {
      if (this.isValid) {
        return this.zone.offsetName(this.ts, {
          format: "long",
          locale: this.locale
        });
      } else {
        return null;
      }
    }
    /**
     * Get whether this zone's offset ever changes, as in a DST.
     * @type {boolean}
     */

  }, {
    key: "isOffsetFixed",
    get: function get() {
      return this.isValid ? this.zone.universal : null;
    }
    /**
     * Get whether the DateTime is in a DST.
     * @type {boolean}
     */

  }, {
    key: "isInDST",
    get: function get() {
      if (this.isOffsetFixed) {
        return false;
      } else {
        return this.offset > this.set({
          month: 1
        }).offset || this.offset > this.set({
          month: 5
        }).offset;
      }
    }
    /**
     * Returns true if this DateTime is in a leap year, false otherwise
     * @example DateTime.local(2016).isInLeapYear //=> true
     * @example DateTime.local(2013).isInLeapYear //=> false
     * @type {boolean}
     */

  }, {
    key: "isInLeapYear",
    get: function get() {
      return isLeapYear(this.year);
    }
    /**
     * Returns the number of days in this DateTime's month
     * @example DateTime.local(2016, 2).daysInMonth //=> 29
     * @example DateTime.local(2016, 3).daysInMonth //=> 31
     * @type {number}
     */

  }, {
    key: "daysInMonth",
    get: function get() {
      return daysInMonth(this.year, this.month);
    }
    /**
     * Returns the number of days in this DateTime's year
     * @example DateTime.local(2016).daysInYear //=> 366
     * @example DateTime.local(2013).daysInYear //=> 365
     * @type {number}
     */

  }, {
    key: "daysInYear",
    get: function get() {
      return this.isValid ? daysInYear(this.year) : NaN;
    }
    /**
     * Returns the number of weeks in this DateTime's year
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2004).weeksInWeekYear //=> 53
     * @example DateTime.local(2013).weeksInWeekYear //=> 52
     * @type {number}
     */

  }, {
    key: "weeksInWeekYear",
    get: function get() {
      return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;
    }
  }], [{
    key: "DATE_SHORT",
    get: function get() {
      return DATE_SHORT;
    }
    /**
     * {@link toLocaleString} format like 'Oct 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_MED",
    get: function get() {
      return DATE_MED;
    }
    /**
     * {@link toLocaleString} format like 'Fri, Oct 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_MED_WITH_WEEKDAY",
    get: function get() {
      return DATE_MED_WITH_WEEKDAY;
    }
    /**
     * {@link toLocaleString} format like 'October 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_FULL",
    get: function get() {
      return DATE_FULL;
    }
    /**
     * {@link toLocaleString} format like 'Tuesday, October 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_HUGE",
    get: function get() {
      return DATE_HUGE;
    }
    /**
     * {@link toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_SIMPLE",
    get: function get() {
      return TIME_SIMPLE;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_SECONDS",
    get: function get() {
      return TIME_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_SHORT_OFFSET",
    get: function get() {
      return TIME_WITH_SHORT_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_LONG_OFFSET",
    get: function get() {
      return TIME_WITH_LONG_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '09:30', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_SIMPLE",
    get: function get() {
      return TIME_24_SIMPLE;
    }
    /**
     * {@link toLocaleString} format like '09:30:23', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_SECONDS",
    get: function get() {
      return TIME_24_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 EDT', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_SHORT_OFFSET",
    get: function get() {
      return TIME_24_WITH_SHORT_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_LONG_OFFSET",
    get: function get() {
      return TIME_24_WITH_LONG_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_SHORT",
    get: function get() {
      return DATETIME_SHORT;
    }
    /**
     * {@link toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_SHORT_WITH_SECONDS",
    get: function get() {
      return DATETIME_SHORT_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED",
    get: function get() {
      return DATETIME_MED;
    }
    /**
     * {@link toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED_WITH_SECONDS",
    get: function get() {
      return DATETIME_MED_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED_WITH_WEEKDAY",
    get: function get() {
      return DATETIME_MED_WITH_WEEKDAY;
    }
    /**
     * {@link toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_FULL",
    get: function get() {
      return DATETIME_FULL;
    }
    /**
     * {@link toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_FULL_WITH_SECONDS",
    get: function get() {
      return DATETIME_FULL_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_HUGE",
    get: function get() {
      return DATETIME_HUGE;
    }
    /**
     * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_HUGE_WITH_SECONDS",
    get: function get() {
      return DATETIME_HUGE_WITH_SECONDS;
    }
  }]);

  return DateTime;
}();
function friendlyDateTime(dateTimeish) {
  if (DateTime.isDateTime(dateTimeish)) {
    return dateTimeish;
  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {
    return DateTime.fromJSDate(dateTimeish);
  } else if (dateTimeish && typeof dateTimeish === "object") {
    return DateTime.fromObject(dateTimeish);
  } else {
    throw new InvalidArgumentError("Unknown datetime argument: " + dateTimeish + ", of type " + typeof dateTimeish);
  }
}

var VERSION = "1.26.0";

exports.DateTime = DateTime;
exports.Duration = Duration;
exports.FixedOffsetZone = FixedOffsetZone;
exports.IANAZone = IANAZone;
exports.Info = Info;
exports.Interval = Interval;
exports.InvalidZone = InvalidZone;
exports.LocalZone = LocalZone;
exports.Settings = Settings;
exports.VERSION = VERSION;
exports.Zone = Zone;
//# sourceMappingURL=luxon.js.map


/***/ }),

/***/ "13d5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $reduce = __webpack_require__("d58f").left;
var arrayMethodIsStrict = __webpack_require__("a640");
var CHROME_VERSION = __webpack_require__("2d00");
var IS_NODE = __webpack_require__("605d");

var STRICT_METHOD = arrayMethodIsStrict('reduce');
// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;

// `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce
$({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "14c3":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");
var regexpExec = __webpack_require__("9263");

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }

  if (classof(R) !== 'RegExp') {
    throw TypeError('RegExp#exec called on incompatible receiver');
  }

  return regexpExec.call(R, S);
};



/***/ }),

/***/ "159b":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var forEach = __webpack_require__("17c2");
var createNonEnumerableProperty = __webpack_require__("9112");

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
}


/***/ }),

/***/ "17c2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $forEach = __webpack_require__("b727").forEach;
var arrayMethodIsStrict = __webpack_require__("a640");

var STRICT_METHOD = arrayMethodIsStrict('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;


/***/ }),

/***/ "19aa":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),

/***/ "1be4":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "1c0b":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "1c7e":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "1cdc":
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__("342f");

module.exports = /(?:iphone|ipod|ipad).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "1d2b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "1d80":
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "1dde":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "1fb5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "2236":
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__("5a43");

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}

module.exports = _arrayWithoutHoles;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "2266":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var bind = __webpack_require__("0366");
var getIteratorMethod = __webpack_require__("35a1");
var iteratorClose = __webpack_require__("2a62");

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && result instanceof Result) return result;
      } return new Result(false);
    }
    iterator = iterFn.call(iterable);
  }

  next = iterator.next;
  while (!(step = next.call(iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator);
      throw error;
    }
    if (typeof result == 'object' && result && result instanceof Result) return result;
  } return new Result(false);
};


/***/ }),

/***/ "23cb":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "23e7":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var setGlobal = __webpack_require__("ce4e");
var copyConstructorProperties = __webpack_require__("e893");
var isForced = __webpack_require__("94ca");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "241c":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "2444":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__("c532");
var normalizeHeaderName = __webpack_require__("c8af");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__("b50d");
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__("b50d");
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "2532":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var notARegExp = __webpack_require__("5a34");
var requireObjectCoercible = __webpack_require__("1d80");
var correctIsRegExpLogic = __webpack_require__("ab13");

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~String(requireObjectCoercible(this))
      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "2626":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__("d066");
var definePropertyModule = __webpack_require__("9bf2");
var wellKnownSymbol = __webpack_require__("b622");
var DESCRIPTORS = __webpack_require__("83ab");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "278c":
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__("c135");

var iterableToArrayLimit = __webpack_require__("9b42");

var unsupportedIterableToArray = __webpack_require__("6613");

var nonIterableRest = __webpack_require__("c240");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "29d8":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "2a62":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");

module.exports = function (iterator) {
  var returnMethod = iterator['return'];
  if (returnMethod !== undefined) {
    return anObject(returnMethod.call(iterator)).value;
  }
};


/***/ }),

/***/ "2cf4":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var fails = __webpack_require__("d039");
var bind = __webpack_require__("0366");
var html = __webpack_require__("1be4");
var createElement = __webpack_require__("cc12");
var IS_IOS = __webpack_require__("1cdc");
var IS_NODE = __webpack_require__("605d");

var location = global.location;
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function (id) {
  // eslint-disable-next-line no-prototype-builtins -- safe
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(id + '', location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func -- spec requirement
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    typeof postMessage == 'function' &&
    !global.importScripts &&
    location && location.protocol !== 'file:' &&
    !fails(post)
  ) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "2d00":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var userAgent = __webpack_require__("342f");

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),

/***/ "2d78":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', { value: true });

/**
 * Finite State Machine generation utilities
 */

/**
 * Define a basic state machine state. j is the list of character transitions,
 * jr is the list of regex-match transitions, jd is the default state to
 * transition to t is the accepting token type, if any. If this is the terminal
 * state, then it does not emit a token.
 * @param {string|class} token to emit
 */
function State(token) {
  this.j = {}; // IMPLEMENTATION 1
  // this.j = []; // IMPLEMENTATION 2

  this.jr = [];
  this.jd = null;
  this.t = token;
}
/**
 * Take the transition from this state to the next one on the given input.
 * If this state does not exist deterministically, will create it.
 *
 * @param {string} input character or token to transition on
 * @param {string|class} [token] token or multi-token to emit when reaching
 * this state
 */

State.prototype = {
  /**
   * @param {State} state
   */
  accepts: function accepts() {
    return !!this.t;
  },

  /**
   * Short for "take transition", this is a method for building/working with
   * state machines.
   *
   * If a state already exists for the given input, returns it.
   *
   * If a token is specified, that state will emit that token when reached by
   * the linkify engine.
   *
   * If no state exists, it will be initialized with some default transitions
   * that resemble existing default transitions.
   *
   * If a state is given for the second argument, that state will be
   * transitioned to on the given input regardless of what that input
   * previously did.
   *
   * @param {string} input character or token to transition on
   * @param {Token|State} tokenOrState transition to a matching state
   * @returns State taken after the given input
   */
  tt: function tt(input, tokenOrState) {
    if (tokenOrState && tokenOrState.j) {
      // State, default a basic transition
      this.j[input] = tokenOrState;
      return tokenOrState;
    } // See if there's a direct state transition (not regex or default)


    var token = tokenOrState;
    var nextState = this.j[input];

    if (nextState) {
      if (token) {
        nextState.t = token;
      } // overrwites previous token


      return nextState;
    } // Create a new state for this input


    nextState = makeState(); // Take the transition using the usual default mechanisms

    var templateState = takeT(this, input);

    if (templateState) {
      // Some default state transition, make a prime state based on this one
      Object.assign(nextState.j, templateState.j);
      nextState.jr.append(templateState.jr);
      nextState.jr = templateState.jd;
      nextState.t = token || templateState.t;
    } else {
      nextState.t = token;
    }

    this.j[input] = nextState;
    return nextState;
  }
};
/**
 * Utility function to create state without using new keyword (reduced file size
 * when minified)
 */

var makeState = function makeState() {
  return new State();
};
/**
 * Similar to previous except it is an accepting state that emits a token
 * @param {Token} token
 */

var makeAcceptingState = function makeAcceptingState(token) {
  return new State(token);
};
/**
 * Create a transition from startState to nextState via the given character
 * @param {State} startState transition from thie starting state
 * @param {Token} input via this input character or other concrete token type
 * @param {State} nextState to this next state
 */

var makeT = function makeT(startState, input, nextState) {
  // IMPLEMENTATION 1: Add to object (fast)
  if (!startState.j[input]) {
    startState.j[input] = nextState;
  } // IMPLEMENTATION 2: Add to array (slower)
  // startState.j.push([input, nextState]);

};
/**
 *
 * @param {State} startState stransition from this starting state
 * @param {RegExp} regex Regular expression to match on input
 * @param {State} nextState transition to this next state if there's are regex match
 */

var makeRegexT = function makeRegexT(startState, regex, nextState) {
  startState.jr.push([regex, nextState]);
};
/**
 * Follow the transition from the given character to the next state
 * @param {State} state
 * @param {Token} input character or other concrete token type to transition
 * @returns {?State} the next state, if any
 */

var takeT = function takeT(state, input) {
  // IMPLEMENTATION 1: Object key lookup (faster)
  var nextState = state.j[input];

  if (nextState) {
    return nextState;
  } // IMPLEMENTATION 2: List lookup (slower)
  // Loop through all the state transitions and see if there's a match
  // for (let i = 0; i < state.j.length; i++) {
  //	const val = state.j[i][0];
  //	const nextState = state.j[i][1];
  // 	if (input === val) { return nextState; }
  // }


  for (var i = 0; i < state.jr.length; i++) {
    var regex = state.jr[i][0];
    var _nextState = state.jr[i][1];

    if (regex.test(input)) {
      return _nextState;
    }
  } // Nowhere left to jump! Return default, if any


  return state.jd;
};
/**
 * Similar to makeT, but takes a list of characters that all transition to the
 * same nextState startState
 * @param {State} startState
 * @param {Array} chars
 * @param {State} nextState
 */

var makeMultiT = function makeMultiT(startState, chars, nextState) {
  for (var i = 0; i < chars.length; i++) {
    makeT(startState, chars[i], nextState);
  }
};
/**
 * Set up a list of multiple transitions at once. transitions is a list of
 * tuples, where the first element is the transitions character and the second
 * is the state to transition to
 * @param {State} startState
 * @param {Array} transitions
 */

var makeBatchT = function makeBatchT(startState, transitions) {
  for (var i = 0; i < transitions.length; i++) {
    var input = transitions[i][0];
    var nextState = transitions[i][1];
    makeT(startState, input, nextState);
  }
};
/**
 * For state machines that transition on characters only; given a non-empty
 * target string, generates states (if required) for each consecutive substring
 * of characters starting from the beginning of the string. The final state will
 * have a special value, as specified in options. All other "in between"
 * substrings will have a default end state.
 *
 * This turns the state machine into a Trie-like data structure (rather than a
 * intelligently-designed DFA).
 * @param {State} state
 * @param {string} str
 * @param {Token} endStateFactory
 * @param {Token} defaultStateFactory
 */

var makeChainT = function makeChainT(state, str, endState, defaultStateFactory) {
  var i = 0,
      len = str.length,
      nextState; // Find the next state without a jump to the next character

  while (i < len && (nextState = state.j[str[i]])) {
    state = nextState;
    i++;
  }

  if (i >= len) {
    return [];
  } // no new tokens were added


  while (i < len - 1) {
    nextState = defaultStateFactory();
    makeT(state, str[i], nextState);
    state = nextState;
    i++;
  }

  makeT(state, str[len - 1], endState);
};

/******************************************************************************
	Text Tokens
	Tokens composed of strings
******************************************************************************/
// A valid web domain token
var DOMAIN = 'DOMAIN';
var LOCALHOST = 'LOCALHOST'; // special case of domain
// Valid top-level domain (see tlds.js)

var TLD = 'TLD'; // Various punctionation

var AT = 'AT'; // '@'

var COLON = 'COLON'; // ':'

var DOT = 'DOT'; // '.'
// A character class that can surround the URL, but which the URL cannot begin
// or end with. Does not include certain English punctuation like parentheses.

var PUNCTUATION = 'PUNCTUATION'; // New line (unix style)

var NL = 'NL'; // '\n'
// Any sequence of digies 0-9

var NUM = 'NUM'; // Various symbols

var PLUS = 'PLUS'; // '+'

var POUND = 'POUND'; // '#'

var QUERY = 'QUERY'; // '?'

var SLASH = 'SLASH'; // '/'

var UNDERSCORE = 'UNDERSCORE'; // '_'
// A web URL protocol. Supported types include
// - `http:`
// - `https:`
// - `ftp:`
// - `ftps:`

var PROTOCOL = 'PROTOCOL'; // Start of the email URI protocol

var MAILTO = 'MAILTO'; // 'mailto:'
// Any number of consecutive whitespace characters that are not newline

var WS = 'WS'; // Opening/closing bracket classes

var OPENBRACE = 'OPENBRACE'; // '{'

var OPENBRACKET = 'OPENBRACKET'; // '['

var OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // '<'

var OPENPAREN = 'OPENPAREN'; // '('

var CLOSEBRACE = 'CLOSEBRACE'; // '}'

var CLOSEBRACKET = 'CLOSEBRACKET'; // ']'

var CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // '>'

var CLOSEPAREN = 'CLOSEPAREN'; // ')'

var AMPERSAND = 'AMPERSAND'; // '&'
// Default token - anything that is not one of the above

var SYM = 'SYM';

var text = /*#__PURE__*/Object.freeze({
	__proto__: null,
	DOMAIN: DOMAIN,
	LOCALHOST: LOCALHOST,
	TLD: TLD,
	AT: AT,
	COLON: COLON,
	DOT: DOT,
	PUNCTUATION: PUNCTUATION,
	NL: NL,
	NUM: NUM,
	PLUS: PLUS,
	POUND: POUND,
	QUERY: QUERY,
	SLASH: SLASH,
	UNDERSCORE: UNDERSCORE,
	PROTOCOL: PROTOCOL,
	MAILTO: MAILTO,
	WS: WS,
	OPENBRACE: OPENBRACE,
	OPENBRACKET: OPENBRACKET,
	OPENANGLEBRACKET: OPENANGLEBRACKET,
	OPENPAREN: OPENPAREN,
	CLOSEBRACE: CLOSEBRACE,
	CLOSEBRACKET: CLOSEBRACKET,
	CLOSEANGLEBRACKET: CLOSEANGLEBRACKET,
	CLOSEPAREN: CLOSEPAREN,
	AMPERSAND: AMPERSAND,
	SYM: SYM
});

// NOTE: punycode versions of IDNs are not included here because these will not
// be as commonly used without the http prefix anyway and linkify will already
// force-encode those.
// To be updated with the values in this list
// http://data.iana.org/TLD/tlds-alpha-by-domain.txt
// Version 2021022800, Last Updated Sun Feb 28 07:07:01 2021 UTC
var tlds = 'aaa \
aarp \
abarth \
abb \
abbott \
abbvie \
abc \
able \
abogado \
abudhabi \
ac \
academy \
accenture \
accountant \
accountants \
aco \
actor \
ad \
adac \
ads \
adult \
ae \
aeg \
aero \
aetna \
af \
afamilycompany \
afl \
africa \
ag \
agakhan \
agency \
ai \
aig \
airbus \
airforce \
airtel \
akdn \
al \
alfaromeo \
alibaba \
alipay \
allfinanz \
allstate \
ally \
alsace \
alstom \
am \
amazon \
americanexpress \
americanfamily \
amex \
amfam \
amica \
amsterdam \
analytics \
android \
anquan \
anz \
ao \
aol \
apartments \
app \
apple \
aq \
aquarelle \
ar \
arab \
aramco \
archi \
army \
arpa \
art \
arte \
as \
asda \
asia \
associates \
at \
athleta \
attorney \
au \
auction \
audi \
audible \
audio \
auspost \
author \
auto \
autos \
avianca \
aw \
aws \
ax \
axa \
az \
azure \
ba \
baby \
baidu \
banamex \
bananarepublic \
band \
bank \
bar \
barcelona \
barclaycard \
barclays \
barefoot \
bargains \
baseball \
basketball \
bauhaus \
bayern \
bb \
bbc \
bbt \
bbva \
bcg \
bcn \
bd \
be \
beats \
beauty \
beer \
bentley \
berlin \
best \
bestbuy \
bet \
bf \
bg \
bh \
bharti \
bi \
bible \
bid \
bike \
bing \
bingo \
bio \
biz \
bj \
black \
blackfriday \
blockbuster \
blog \
bloomberg \
blue \
bm \
bms \
bmw \
bn \
bnpparibas \
bo \
boats \
boehringer \
bofa \
bom \
bond \
boo \
book \
booking \
bosch \
bostik \
boston \
bot \
boutique \
box \
br \
bradesco \
bridgestone \
broadway \
broker \
brother \
brussels \
bs \
bt \
budapest \
bugatti \
build \
builders \
business \
buy \
buzz \
bv \
bw \
by \
bz \
bzh \
ca \
cab \
cafe \
cal \
call \
calvinklein \
cam \
camera \
camp \
cancerresearch \
canon \
capetown \
capital \
capitalone \
car \
caravan \
cards \
care \
career \
careers \
cars \
casa \
case \
cash \
casino \
cat \
catering \
catholic \
cba \
cbn \
cbre \
cbs \
cc \
cd \
center \
ceo \
cern \
cf \
cfa \
cfd \
cg \
ch \
chanel \
channel \
charity \
chase \
chat \
cheap \
chintai \
christmas \
chrome \
church \
ci \
cipriani \
circle \
cisco \
citadel \
citi \
citic \
city \
cityeats \
ck \
cl \
claims \
cleaning \
click \
clinic \
clinique \
clothing \
cloud \
club \
clubmed \
cm \
cn \
co \
coach \
codes \
coffee \
college \
cologne \
com \
comcast \
commbank \
community \
company \
compare \
computer \
comsec \
condos \
construction \
consulting \
contact \
contractors \
cooking \
cookingchannel \
cool \
coop \
corsica \
country \
coupon \
coupons \
courses \
cpa \
cr \
credit \
creditcard \
creditunion \
cricket \
crown \
crs \
cruise \
cruises \
csc \
cu \
cuisinella \
cv \
cw \
cx \
cy \
cymru \
cyou \
cz \
dabur \
dad \
dance \
data \
date \
dating \
datsun \
day \
dclk \
dds \
de \
deal \
dealer \
deals \
degree \
delivery \
dell \
deloitte \
delta \
democrat \
dental \
dentist \
desi \
design \
dev \
dhl \
diamonds \
diet \
digital \
direct \
directory \
discount \
discover \
dish \
diy \
dj \
dk \
dm \
dnp \
do \
docs \
doctor \
dog \
domains \
dot \
download \
drive \
dtv \
dubai \
duck \
dunlop \
dupont \
durban \
dvag \
dvr \
dz \
earth \
eat \
ec \
eco \
edeka \
edu \
education \
ee \
eg \
email \
emerck \
energy \
engineer \
engineering \
enterprises \
epson \
equipment \
er \
ericsson \
erni \
es \
esq \
estate \
et \
etisalat \
eu \
eurovision \
eus \
events \
exchange \
expert \
exposed \
express \
extraspace \
fage \
fail \
fairwinds \
faith \
family \
fan \
fans \
farm \
farmers \
fashion \
fast \
fedex \
feedback \
ferrari \
ferrero \
fi \
fiat \
fidelity \
fido \
film \
final \
finance \
financial \
fire \
firestone \
firmdale \
fish \
fishing \
fit \
fitness \
fj \
fk \
flickr \
flights \
flir \
florist \
flowers \
fly \
fm \
fo \
foo \
food \
foodnetwork \
football \
ford \
forex \
forsale \
forum \
foundation \
fox \
fr \
free \
fresenius \
frl \
frogans \
frontdoor \
frontier \
ftr \
fujitsu \
fujixerox \
fun \
fund \
furniture \
futbol \
fyi \
ga \
gal \
gallery \
gallo \
gallup \
game \
games \
gap \
garden \
gay \
gb \
gbiz \
gd \
gdn \
ge \
gea \
gent \
genting \
george \
gf \
gg \
ggee \
gh \
gi \
gift \
gifts \
gives \
giving \
gl \
glade \
glass \
gle \
global \
globo \
gm \
gmail \
gmbh \
gmo \
gmx \
gn \
godaddy \
gold \
goldpoint \
golf \
goo \
goodyear \
goog \
google \
gop \
got \
gov \
gp \
gq \
gr \
grainger \
graphics \
gratis \
green \
gripe \
grocery \
group \
gs \
gt \
gu \
guardian \
gucci \
guge \
guide \
guitars \
guru \
gw \
gy \
hair \
hamburg \
hangout \
haus \
hbo \
hdfc \
hdfcbank \
health \
healthcare \
help \
helsinki \
here \
hermes \
hgtv \
hiphop \
hisamitsu \
hitachi \
hiv \
hk \
hkt \
hm \
hn \
hockey \
holdings \
holiday \
homedepot \
homegoods \
homes \
homesense \
honda \
horse \
hospital \
host \
hosting \
hot \
hoteles \
hotels \
hotmail \
house \
how \
hr \
hsbc \
ht \
hu \
hughes \
hyatt \
hyundai \
ibm \
icbc \
ice \
icu \
id \
ie \
ieee \
ifm \
ikano \
il \
im \
imamat \
imdb \
immo \
immobilien \
in \
inc \
industries \
infiniti \
info \
ing \
ink \
institute \
insurance \
insure \
int \
international \
intuit \
investments \
io \
ipiranga \
iq \
ir \
irish \
is \
ismaili \
ist \
istanbul \
it \
itau \
itv \
iveco \
jaguar \
java \
jcb \
je \
jeep \
jetzt \
jewelry \
jio \
jll \
jm \
jmp \
jnj \
jo \
jobs \
joburg \
jot \
joy \
jp \
jpmorgan \
jprs \
juegos \
juniper \
kaufen \
kddi \
ke \
kerryhotels \
kerrylogistics \
kerryproperties \
kfh \
kg \
kh \
ki \
kia \
kim \
kinder \
kindle \
kitchen \
kiwi \
km \
kn \
koeln \
komatsu \
kosher \
kp \
kpmg \
kpn \
kr \
krd \
kred \
kuokgroup \
kw \
ky \
kyoto \
kz \
la \
lacaixa \
lamborghini \
lamer \
lancaster \
lancia \
land \
landrover \
lanxess \
lasalle \
lat \
latino \
latrobe \
law \
lawyer \
lb \
lc \
lds \
lease \
leclerc \
lefrak \
legal \
lego \
lexus \
lgbt \
li \
lidl \
life \
lifeinsurance \
lifestyle \
lighting \
like \
lilly \
limited \
limo \
lincoln \
linde \
link \
lipsy \
live \
living \
lixil \
lk \
llc \
llp \
loan \
loans \
locker \
locus \
loft \
lol \
london \
lotte \
lotto \
love \
lpl \
lplfinancial \
lr \
ls \
lt \
ltd \
ltda \
lu \
lundbeck \
luxe \
luxury \
lv \
ly \
ma \
macys \
madrid \
maif \
maison \
makeup \
man \
management \
mango \
map \
market \
marketing \
markets \
marriott \
marshalls \
maserati \
mattel \
mba \
mc \
mckinsey \
md \
me \
med \
media \
meet \
melbourne \
meme \
memorial \
men \
menu \
merckmsd \
mg \
mh \
miami \
microsoft \
mil \
mini \
mint \
mit \
mitsubishi \
mk \
ml \
mlb \
mls \
mm \
mma \
mn \
mo \
mobi \
mobile \
moda \
moe \
moi \
mom \
monash \
money \
monster \
mormon \
mortgage \
moscow \
moto \
motorcycles \
mov \
movie \
mp \
mq \
mr \
ms \
msd \
mt \
mtn \
mtr \
mu \
museum \
mutual \
mv \
mw \
mx \
my \
mz \
na \
nab \
nagoya \
name \
nationwide \
natura \
navy \
nba \
nc \
ne \
nec \
net \
netbank \
netflix \
network \
neustar \
new \
news \
next \
nextdirect \
nexus \
nf \
nfl \
ng \
ngo \
nhk \
ni \
nico \
nike \
nikon \
ninja \
nissan \
nissay \
nl \
no \
nokia \
northwesternmutual \
norton \
now \
nowruz \
nowtv \
np \
nr \
nra \
nrw \
ntt \
nu \
nyc \
nz \
obi \
observer \
off \
office \
okinawa \
olayan \
olayangroup \
oldnavy \
ollo \
om \
omega \
one \
ong \
onl \
online \
onyourside \
ooo \
open \
oracle \
orange \
org \
organic \
origins \
osaka \
otsuka \
ott \
ovh \
pa \
page \
panasonic \
paris \
pars \
partners \
parts \
party \
passagens \
pay \
pccw \
pe \
pet \
pf \
pfizer \
pg \
ph \
pharmacy \
phd \
philips \
phone \
photo \
photography \
photos \
physio \
pics \
pictet \
pictures \
pid \
pin \
ping \
pink \
pioneer \
pizza \
pk \
pl \
place \
play \
playstation \
plumbing \
plus \
pm \
pn \
pnc \
pohl \
poker \
politie \
porn \
post \
pr \
pramerica \
praxi \
press \
prime \
pro \
prod \
productions \
prof \
progressive \
promo \
properties \
property \
protection \
pru \
prudential \
ps \
pt \
pub \
pw \
pwc \
py \
qa \
qpon \
quebec \
quest \
qvc \
racing \
radio \
raid \
re \
read \
realestate \
realtor \
realty \
recipes \
red \
redstone \
redumbrella \
rehab \
reise \
reisen \
reit \
reliance \
ren \
rent \
rentals \
repair \
report \
republican \
rest \
restaurant \
review \
reviews \
rexroth \
rich \
richardli \
ricoh \
ril \
rio \
rip \
rmit \
ro \
rocher \
rocks \
rodeo \
rogers \
room \
rs \
rsvp \
ru \
rugby \
ruhr \
run \
rw \
rwe \
ryukyu \
sa \
saarland \
safe \
safety \
sakura \
sale \
salon \
samsclub \
samsung \
sandvik \
sandvikcoromant \
sanofi \
sap \
sarl \
sas \
save \
saxo \
sb \
sbi \
sbs \
sc \
sca \
scb \
schaeffler \
schmidt \
scholarships \
school \
schule \
schwarz \
science \
scjohnson \
scot \
sd \
se \
search \
seat \
secure \
security \
seek \
select \
sener \
services \
ses \
seven \
sew \
sex \
sexy \
sfr \
sg \
sh \
shangrila \
sharp \
shaw \
shell \
shia \
shiksha \
shoes \
shop \
shopping \
shouji \
show \
showtime \
si \
silk \
sina \
singles \
site \
sj \
sk \
ski \
skin \
sky \
skype \
sl \
sling \
sm \
smart \
smile \
sn \
sncf \
so \
soccer \
social \
softbank \
software \
sohu \
solar \
solutions \
song \
sony \
soy \
spa \
space \
sport \
spot \
spreadbetting \
sr \
srl \
ss \
st \
stada \
staples \
star \
statebank \
statefarm \
stc \
stcgroup \
stockholm \
storage \
store \
stream \
studio \
study \
style \
su \
sucks \
supplies \
supply \
support \
surf \
surgery \
suzuki \
sv \
swatch \
swiftcover \
swiss \
sx \
sy \
sydney \
systems \
sz \
tab \
taipei \
talk \
taobao \
target \
tatamotors \
tatar \
tattoo \
tax \
taxi \
tc \
tci \
td \
tdk \
team \
tech \
technology \
tel \
temasek \
tennis \
teva \
tf \
tg \
th \
thd \
theater \
theatre \
tiaa \
tickets \
tienda \
tiffany \
tips \
tires \
tirol \
tj \
tjmaxx \
tjx \
tk \
tkmaxx \
tl \
tm \
tmall \
tn \
to \
today \
tokyo \
tools \
top \
toray \
toshiba \
total \
tours \
town \
toyota \
toys \
tr \
trade \
trading \
training \
travel \
travelchannel \
travelers \
travelersinsurance \
trust \
trv \
tt \
tube \
tui \
tunes \
tushu \
tv \
tvs \
tw \
tz \
ua \
ubank \
ubs \
ug \
uk \
unicom \
university \
uno \
uol \
ups \
us \
uy \
uz \
va \
vacations \
vana \
vanguard \
vc \
ve \
vegas \
ventures \
verisign \
versicherung \
vet \
vg \
vi \
viajes \
video \
vig \
viking \
villas \
vin \
vip \
virgin \
visa \
vision \
viva \
vivo \
vlaanderen \
vn \
vodka \
volkswagen \
volvo \
vote \
voting \
voto \
voyage \
vu \
vuelos \
wales \
walmart \
walter \
wang \
wanggou \
watch \
watches \
weather \
weatherchannel \
webcam \
weber \
website \
wed \
wedding \
weibo \
weir \
wf \
whoswho \
wien \
wiki \
williamhill \
win \
windows \
wine \
winners \
wme \
wolterskluwer \
woodside \
work \
works \
world \
wow \
ws \
wtc \
wtf \
xbox \
xerox \
xfinity \
xihuan \
xin \
xxx \
xyz \
yachts \
yahoo \
yamaxun \
yandex \
ye \
yodobashi \
yoga \
yokohama \
you \
youtube \
yt \
yun \
za \
zappos \
zara \
zero \
zip \
zm \
zone \
zuerich \
zw \
vermögensberater-ctb \
vermögensberatung-pwb \
ελ \
ευ \
бг \
бел \
дети \
ею \
католик \
ком \
қаз \
мкд \
мон \
москва \
онлайн \
орг \
рус \
рф \
сайт \
срб \
укр \
გე \
հայ \
ישראל \
קום \
ابوظبي \
اتصالات \
ارامكو \
الاردن \
البحرين \
الجزائر \
السعودية \
العليان \
المغرب \
امارات \
ایران \
بارت \
بازار \
بھارت \
بيتك \
پاکستان \
ڀارت \
تونس \
سودان \
سورية \
شبكة \
عراق \
عرب \
عمان \
فلسطين \
قطر \
كاثوليك \
كوم \
مصر \
مليسيا \
موريتانيا \
موقع \
همراه \
कॉम \
नेट \
भारत \
भारतम् \
भारोत \
संगठन \
বাংলা \
ভারত \
ভাৰত \
ਭਾਰਤ \
ભારત \
ଭାରତ \
இந்தியா \
இலங்கை \
சிங்கப்பூர் \
భారత్ \
ಭಾರತ \
ഭാരതം \
ලංකා \
คอม \
ไทย \
ລາວ \
닷넷 \
닷컴 \
삼성 \
한국 \
アマゾン \
グーグル \
クラウド \
コム \
ストア \
セール \
ファッション \
ポイント \
みんな \
世界 \
中信 \
中国 \
中國 \
中文网 \
亚马逊 \
企业 \
佛山 \
信息 \
健康 \
八卦 \
公司 \
公益 \
台湾 \
台灣 \
商城 \
商店 \
商标 \
嘉里 \
嘉里大酒店 \
在线 \
大众汽车 \
大拿 \
天主教 \
娱乐 \
家電 \
广东 \
微博 \
慈善 \
我爱你 \
手机 \
招聘 \
政务 \
政府 \
新加坡 \
新闻 \
时尚 \
書籍 \
机构 \
淡马锡 \
游戏 \
澳門 \
点看 \
移动 \
组织机构 \
网址 \
网店 \
网站 \
网络 \
联通 \
诺基亚 \
谷歌 \
购物 \
通販 \
集团 \
電訊盈科 \
飞利浦 \
食品 \
餐厅 \
香格里拉 \
香港'.split(' ');

/**
	The scanner provides an interface that takes a string of text as input, and
	outputs an array of tokens instances that can be used for easy URL parsing.

	@module linkify
	@submodule scanner
	@main scanner
*/

var LETTER = /(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD1E\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDEC0-\uDEEB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/; // Any Unicode character with letter data type

var EMOJI = /(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])/; // Any Unicode emoji character

var DIGIT = /\d/;
var SPACE = /\s/;
/**
 * Initialize the scanner character-based state machine for the given start state
 * @return {State} scanner starting state
 */

function init$2() {
  var customProtocols = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  // Frequently used states
  var S_START = makeState();
  var S_NUM = makeAcceptingState(NUM);
  var S_DOMAIN = makeAcceptingState(DOMAIN);
  var S_DOMAIN_HYPHEN = makeState(); // domain followed by 1 or more hyphen characters

  var S_WS = makeAcceptingState(WS);
  var DOMAIN_REGEX_TRANSITIONS = [[DIGIT, S_DOMAIN], [LETTER, S_DOMAIN], [EMOJI, S_DOMAIN]]; // Create a state which emits a domain token

  var makeDomainState = function makeDomainState() {
    var state = makeAcceptingState(DOMAIN);
    state.j = {
      '-': S_DOMAIN_HYPHEN
    };
    state.jr = [].concat(DOMAIN_REGEX_TRANSITIONS);
    return state;
  }; // Create a state which does not emit a domain state but the usual alphanumeric
  // transitions are domains


  var makeNearDomainState = function makeNearDomainState(token) {
    var state = makeDomainState();
    state.t = token;
    return state;
  }; // States for special URL symbols that accept immediately after start


  makeBatchT(S_START, [['@', makeAcceptingState(AT)], ['.', makeAcceptingState(DOT)], ['+', makeAcceptingState(PLUS)], ['#', makeAcceptingState(POUND)], ['?', makeAcceptingState(QUERY)], ['/', makeAcceptingState(SLASH)], ['_', makeAcceptingState(UNDERSCORE)], [':', makeAcceptingState(COLON)], ['{', makeAcceptingState(OPENBRACE)], ['[', makeAcceptingState(OPENBRACKET)], ['<', makeAcceptingState(OPENANGLEBRACKET)], ['(', makeAcceptingState(OPENPAREN)], ['}', makeAcceptingState(CLOSEBRACE)], [']', makeAcceptingState(CLOSEBRACKET)], ['>', makeAcceptingState(CLOSEANGLEBRACKET)], [')', makeAcceptingState(CLOSEPAREN)], ['&', makeAcceptingState(AMPERSAND)]]);
  makeMultiT(S_START, [',', ';', '!', '"', '\''], makeAcceptingState(PUNCTUATION)); // Whitespace jumps
  // Tokens of only non-newline whitespace are arbitrarily long

  makeT(S_START, '\n', makeAcceptingState(NL));
  makeRegexT(S_START, SPACE, S_WS); // If any whitespace except newline, more whitespace!

  makeT(S_WS, '\n', makeState()); // non-accepting state

  makeRegexT(S_WS, SPACE, S_WS); // Generates states for top-level domains
  // Note that this is most accurate when tlds are in alphabetical order

  for (var i = 0; i < tlds.length; i++) {
    makeChainT(S_START, tlds[i], makeNearDomainState(TLD), makeDomainState);
  } // Collect the states generated by different protocls


  var S_PROTOCOL_FILE = makeDomainState();
  var S_PROTOCOL_FTP = makeDomainState();
  var S_PROTOCOL_HTTP = makeDomainState();
  var S_MAILTO = makeDomainState();
  makeChainT(S_START, 'file', S_PROTOCOL_FILE, makeDomainState);
  makeChainT(S_START, 'ftp', S_PROTOCOL_FTP, makeDomainState);
  makeChainT(S_START, 'http', S_PROTOCOL_HTTP, makeDomainState);
  makeChainT(S_START, 'mailto', S_MAILTO, makeDomainState); // Protocol states

  var S_PROTOCOL_SECURE = makeDomainState();
  var S_FULL_PROTOCOL = makeAcceptingState(PROTOCOL); // Full protocol ends with COLON

  var S_FULL_MAILTO = makeAcceptingState(MAILTO); // Mailto ends with COLON
  // Secure protocols (end with 's')

  makeT(S_PROTOCOL_FTP, 's', S_PROTOCOL_SECURE);
  makeT(S_PROTOCOL_FTP, ':', S_FULL_PROTOCOL);
  makeT(S_PROTOCOL_HTTP, 's', S_PROTOCOL_SECURE);
  makeT(S_PROTOCOL_HTTP, ':', S_FULL_PROTOCOL); // Become protocol tokens after a COLON

  makeT(S_PROTOCOL_FILE, ':', S_FULL_PROTOCOL);
  makeT(S_PROTOCOL_SECURE, ':', S_FULL_PROTOCOL);
  makeT(S_MAILTO, ':', S_FULL_MAILTO); // Register custom protocols

  var S_CUSTOM_PROTOCOL = makeDomainState();

  for (var _i = 0; _i < customProtocols.length; _i++) {
    makeChainT(S_START, customProtocols[_i], S_CUSTOM_PROTOCOL, makeDomainState);
  }

  makeT(S_CUSTOM_PROTOCOL, ':', S_FULL_PROTOCOL); // Localhost

  makeChainT(S_START, 'localhost', makeNearDomainState(LOCALHOST), makeDomainState); // Everything else
  // DOMAINs make more DOMAINs
  // Number and character transitions

  makeRegexT(S_START, DIGIT, S_NUM);
  makeRegexT(S_START, LETTER, S_DOMAIN);
  makeRegexT(S_START, EMOJI, S_DOMAIN);
  makeRegexT(S_NUM, DIGIT, S_NUM);
  makeRegexT(S_NUM, LETTER, S_DOMAIN); // number becomes DOMAIN

  makeRegexT(S_NUM, EMOJI, S_DOMAIN); // number becomes DOMAIN

  makeT(S_NUM, '-', S_DOMAIN_HYPHEN); // Default domain transitions

  makeT(S_DOMAIN, '-', S_DOMAIN_HYPHEN);
  makeT(S_DOMAIN_HYPHEN, '-', S_DOMAIN_HYPHEN);
  makeRegexT(S_DOMAIN, DIGIT, S_DOMAIN);
  makeRegexT(S_DOMAIN, LETTER, S_DOMAIN);
  makeRegexT(S_DOMAIN, EMOJI, S_DOMAIN);
  makeRegexT(S_DOMAIN_HYPHEN, DIGIT, S_DOMAIN);
  makeRegexT(S_DOMAIN_HYPHEN, LETTER, S_DOMAIN);
  makeRegexT(S_DOMAIN_HYPHEN, EMOJI, S_DOMAIN); // Set default transition for start state (some symbol)

  S_START.jd = makeAcceptingState(SYM);
  return S_START;
}
/**
	Given a string, returns an array of TOKEN instances representing the
	composition of that string.

	@method run
	@param {State} start scanner starting state
	@param {string} str input string to scan
	@return {Array<{t: string, v: string, s: number, l: number}>} list of tokens, each with a type and value
*/

function run$1(start, str) {
  // State machine is not case sensitive, so input is tokenized in lowercased
  // form (still returns the regular case though) Uses selective `toLowerCase`
  // is used because lowercasing the entire string causes the length and
  // character position to vary in some non-English strings with V8-based
  // runtimes.
  var iterable = Array.from(str.replace(/[A-Z]/g, function (c) {
    return c.toLowerCase();
  }));
  var charCount = iterable.length; // <= len if there are emojis, etc

  var tokens = []; // return value
  // cursor through the string itself, accounting for characters that have
  // width with length 2 such as emojis

  var cursor = 0; // Cursor through the array-representation of the string

  var charCursor = 0; // Tokenize the string

  while (charCursor < charCount) {
    var state = start;
    var nextState = null;
    var tokenLength = 0;
    var latestAccepting = null;
    var sinceAccepts = -1;
    var charsSinceAccepts = -1;

    while (charCursor < charCount && (nextState = takeT(state, iterable[charCursor]))) {
      state = nextState; // Keep track of the latest accepting state

      if (state.accepts()) {
        sinceAccepts = 0;
        charsSinceAccepts = 0;
        latestAccepting = state;
      } else if (sinceAccepts >= 0) {
        sinceAccepts += iterable[charCursor].length;
        charsSinceAccepts++;
      }

      tokenLength += iterable[charCursor].length;
      cursor += iterable[charCursor].length;
      charCursor++;
    }

    if (sinceAccepts < 0) {
      continue;
    } // Should never happen
    // Roll back to the latest accepting state


    cursor -= sinceAccepts;
    charCursor -= charsSinceAccepts;
    tokenLength -= sinceAccepts; // No more jumps, just make a new token from the last accepting one
    // TODO: If possible, don't output v, instead output range where values ocur

    tokens.push({
      t: latestAccepting.t,
      // token type/name
      v: str.substr(cursor - tokenLength, tokenLength),
      // string value
      s: cursor - tokenLength,
      // start index
      e: cursor // end index (excluding)

    });
  }

  return tokens;
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

var defaults = {
  defaultProtocol: 'http',
  events: null,
  format: noop,
  formatHref: noop,
  nl2br: false,
  tagName: 'a',
  target: null,
  rel: null,
  validate: true,
  truncate: 0,
  className: null,
  attributes: null,
  ignoreTags: []
};
function Options(opts) {
  opts = opts || {};
  this.defaultProtocol = 'defaultProtocol' in opts ? opts.defaultProtocol : defaults.defaultProtocol;
  this.events = 'events' in opts ? opts.events : defaults.events;
  this.format = 'format' in opts ? opts.format : defaults.format;
  this.formatHref = 'formatHref' in opts ? opts.formatHref : defaults.formatHref;
  this.nl2br = 'nl2br' in opts ? opts.nl2br : defaults.nl2br;
  this.tagName = 'tagName' in opts ? opts.tagName : defaults.tagName;
  this.target = 'target' in opts ? opts.target : defaults.target;
  this.rel = 'rel' in opts ? opts.rel : defaults.rel;
  this.validate = 'validate' in opts ? opts.validate : defaults.validate;
  this.truncate = 'truncate' in opts ? opts.truncate : defaults.truncate;
  this.className = 'className' in opts ? opts.className : defaults.className;
  this.attributes = opts.attributes || defaults.attributes;
  this.ignoreTags = []; // Make all tags names upper case

  var ignoredTags = 'ignoreTags' in opts ? opts.ignoreTags : defaults.ignoreTags;

  for (var i = 0; i < ignoredTags.length; i++) {
    this.ignoreTags.push(ignoredTags[i].toUpperCase());
  }
}
Options.prototype = {
  /**
   * Given the token, return all options for how it should be displayed
   */
  resolve: function resolve(token) {
    var href = token.toHref(this.defaultProtocol);
    return {
      formatted: this.get('format', token.toString(), token),
      formattedHref: this.get('formatHref', href, token),
      tagName: this.get('tagName', href, token),
      className: this.get('className', href, token),
      target: this.get('target', href, token),
      rel: this.get('rel', href, token),
      events: this.getObject('events', href, token),
      attributes: this.getObject('attributes', href, token),
      truncate: this.get('truncate', href, token)
    };
  },

  /**
   * Returns true or false based on whether a token should be displayed as a
   * link based on the user options. By default,
   */
  check: function check(token) {
    return this.get('validate', token.toString(), token);
  },
  // Private methods

  /**
   * Resolve an option's value based on the value of the option and the given
   * params.
   * @param {string} key Name of option to use
   * @param operator will be passed to the target option if it's method
   * @param {MultiToken} token The token from linkify.tokenize
   */
  get: function get(key, operator, token) {
    var option = this[key];

    if (!option) {
      return option;
    }

    var optionValue;

    switch (_typeof(option)) {
      case 'function':
        return option(operator, token.t);

      case 'object':
        optionValue = token.t in option ? option[token.t] : defaults[key];
        return typeof optionValue === 'function' ? optionValue(operator, token.t) : optionValue;
    }

    return option;
  },
  getObject: function getObject(key, operator, token) {
    var option = this[key];
    return typeof option === 'function' ? option(operator, token.t) : option;
  }
};

function noop(val) {
  return val;
}

var options = /*#__PURE__*/Object.freeze({
	__proto__: null,
	defaults: defaults,
	Options: Options
});

/******************************************************************************
	Multi-Tokens
	Tokens composed of arrays of TextTokens
******************************************************************************/

function inherits(parent, child) {
  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var extended = Object.create(parent.prototype);

  for (var p in props) {
    extended[p] = props[p];
  }

  extended.constructor = child;
  child.prototype = extended;
  return child;
}
/**
	Abstract class used for manufacturing tokens of text tokens. That is rather
	than the value for a token being a small string of text, it's value an array
	of text tokens.

	Used for grouping together URLs, emails, hashtags, and other potential
	creations.

	@class MultiToken
	@param {string} type
	@param {string} value
	@param {Array<{t: string, v: string, s: number, e: number}>} tokens
	@abstract
*/


function MultiToken(type, value, tokens) {
  this.t = type;
  this.v = value;
  this.tk = tokens;
  this.isLink = false;
}
MultiToken.prototype = {
  /**
  	String representing the type for this token
  	@property t
  	@default 'token'
  */
  t: 'token',

  /**
  	Is this multitoken a link?
  	@property isLink
  	@default false
  */
  isLink: false,

  /**
  	Return the string this token represents.
  	@method toString
  	@return {string}
  */
  toString: function toString() {
    return this.v;
  },

  /**
  	What should the value for this token be in the `href` HTML attribute?
  	Returns the `.toString` value by default.
  		@method toHref
  	@return {string}
  */
  toHref: function toHref() {
    return this.toString();
  },

  /**
   * The start index of this token in the original input string
   * @returns {number}
   */
  startIndex: function startIndex() {
    return this.tk[0].s;
  },

  /**
   * The end index of this token in the original input string (up to this
   * index but not including it)
   * @returns {number}
   */
  endIndex: function endIndex() {
    return this.tk[this.tk.length - 1].e;
  },

  /**
  	Returns a hash of relevant values for this token, which includes keys
  	* type - Kind of token ('url', 'email', etc.)
  	* value - Original text
  	* href - The value that should be added to the anchor tag's href
  		attribute
  		@method toObject
  	@param {string} [protocol] `'http'` by default
  	@return {{type: string, value: string, href: string}}
  */
  toObject: function toObject() {
    var protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults.defaultProtocol;
    return {
      type: this.t,
      value: this.v,
      isLink: this.isLink,
      href: this.toHref(protocol),
      start: this.startIndex(),
      end: this.endIndex()
    };
  }
}; // Base token
/**
 * Create a new token that can be emitted by the parser state machine
 * @param {string} type readable type of the token
 * @param {object} props properties to assign or override, including isLink = true or false
 * @returns {(value: string, tokens: {t: string, v: string, s: number, e: number}) => MultiToken} new token class
 */

function createTokenClass(type, props) {
  function Token(value, tokens) {
    this.t = type;
    this.v = value;
    this.tk = tokens;
  }

  inherits(MultiToken, Token, props);
  return Token;
}
/**
	Represents an arbitrarily mailto email address with the prefix included
	@class MailtoEmail
	@extends MultiToken
*/

var MailtoEmail = createTokenClass('email', {
  isLink: true
});
/**
	Represents a list of tokens making up a valid email address
	@class Email
	@extends MultiToken
*/

var Email = createTokenClass('email', {
  isLink: true,
  toHref: function toHref() {
    return 'mailto:' + this.toString();
  }
});
/**
	Represents some plain text
	@class Text
	@extends MultiToken
*/

var Text = createTokenClass('text');
/**
	Multi-linebreak token - represents a line break
	@class Nl
	@extends MultiToken
*/

var Nl = createTokenClass('nl');
/**
	Represents a list of text tokens making up a valid URL
	@class Url
	@extends MultiToken
*/

var Url = createTokenClass('url', {
  isLink: true,

  /**
  	Lowercases relevant parts of the domain and adds the protocol if
  	required. Note that this will not escape unsafe HTML characters in the
  	URL.
  		@method href
  	@param {string} protocol
  	@return {string}
  */
  toHref: function toHref() {
    var protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults.defaultProtocol;
    var tokens = this.tk;
    var hasProtocol = false;
    var hasSlashSlash = false;
    var result = [];
    var i = 0; // Make the first part of the domain lowercase
    // Lowercase protocol

    while (tokens[i].t === PROTOCOL) {
      hasProtocol = true;
      result.push(tokens[i].v);
      i++;
    } // Skip slash-slash


    while (tokens[i].t === SLASH) {
      hasSlashSlash = true;
      result.push(tokens[i].v);
      i++;
    } // Continue pushing characters


    for (; i < tokens.length; i++) {
      result.push(tokens[i].v);
    }

    result = result.join('');

    if (!(hasProtocol || hasSlashSlash)) {
      result = "".concat(protocol, "://").concat(result);
    }

    return result;
  },
  hasProtocol: function hasProtocol() {
    return this.tk[0].t === PROTOCOL;
  }
});

var multi = /*#__PURE__*/Object.freeze({
	__proto__: null,
	MultiToken: MultiToken,
	Base: MultiToken,
	createTokenClass: createTokenClass,
	MailtoEmail: MailtoEmail,
	Email: Email,
	Text: Text,
	Nl: Nl,
	Url: Url
});

/**
	Not exactly parser, more like the second-stage scanner (although we can
	theoretically hotswap the code here with a real parser in the future... but
	for a little URL-finding utility abstract syntax trees may be a little
	overkill).

	URL format: http://en.wikipedia.org/wiki/URI_scheme
	Email format: http://en.wikipedia.org/wiki/Email_address (links to RFC in
	reference)

	@module linkify
	@submodule parser
	@main run
*/
/**
 * Generate the parser multi token-based state machine
 * @returns {State} the starting state
 */

function init$1() {
  // The universal starting state.
  var S_START = makeState(); // Intermediate states for URLs. Note that domains that begin with a protocol
  // are treated slighly differently from those that don't.

  var S_PROTOCOL = makeState(); // e.g., 'http:'

  var S_MAILTO = makeState(); // 'mailto:'

  var S_PROTOCOL_SLASH = makeState(); // e.g., 'http:/''

  var S_PROTOCOL_SLASH_SLASH = makeState(); // e.g.,'http://'

  var S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)

  var S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT

  var S_TLD = makeAcceptingState(Url); // (A) Simplest possible URL with no query string

  var S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)

  var S_TLD_PORT = makeAcceptingState(Url); // TLD followed by a port number

  var S_URL = makeAcceptingState(Url); // Long URL with optional port and maybe query string

  var S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)

  var S_URL_OPENBRACE = makeState(); // URL followed by {

  var S_URL_OPENBRACKET = makeState(); // URL followed by [

  var S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <

  var S_URL_OPENPAREN = makeState(); // URL followed by (

  var S_URL_OPENBRACE_Q = makeAcceptingState(Url); // URL followed by { and some symbols that the URL can end it

  var S_URL_OPENBRACKET_Q = makeAcceptingState(Url); // URL followed by [ and some symbols that the URL can end it

  var S_URL_OPENANGLEBRACKET_Q = makeAcceptingState(Url); // URL followed by < and some symbols that the URL can end it

  var S_URL_OPENPAREN_Q = makeAcceptingState(Url); // URL followed by ( and some symbols that the URL can end it

  var S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it

  var S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it

  var S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it

  var S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it

  var S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)

  var S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT

  var S_EMAIL = makeAcceptingState(Email); // (C) Possible email address (could have more tlds)

  var S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)

  var S_EMAIL_PORT = makeAcceptingState(Email); // (C) Email address with a port

  var S_MAILTO_EMAIL = makeAcceptingState(MailtoEmail); // Email that begins with the mailto prefix (D)

  var S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars

  var S_LOCALPART = makeState(); // Local part of the email address

  var S_LOCALPART_AT = makeState(); // Local part of the email address plus @

  var S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)

  var S_NL = makeAcceptingState(Nl); // single new line
  // Make path from start to protocol (with '//')

  makeT(S_START, NL, S_NL);
  makeT(S_START, PROTOCOL, S_PROTOCOL);
  makeT(S_START, MAILTO, S_MAILTO);
  makeT(S_PROTOCOL, SLASH, S_PROTOCOL_SLASH);
  makeT(S_PROTOCOL_SLASH, SLASH, S_PROTOCOL_SLASH_SLASH); // The very first potential domain name

  makeT(S_START, TLD, S_DOMAIN);
  makeT(S_START, DOMAIN, S_DOMAIN);
  makeT(S_START, LOCALHOST, S_TLD);
  makeT(S_START, NUM, S_DOMAIN); // Force URL for protocol followed by anything sane

  makeT(S_PROTOCOL_SLASH_SLASH, TLD, S_URL);
  makeT(S_PROTOCOL_SLASH_SLASH, DOMAIN, S_URL);
  makeT(S_PROTOCOL_SLASH_SLASH, NUM, S_URL);
  makeT(S_PROTOCOL_SLASH_SLASH, LOCALHOST, S_URL); // Account for dots and hyphens
  // hyphens are usually parts of domain names

  makeT(S_DOMAIN, DOT, S_DOMAIN_DOT);
  makeT(S_EMAIL_DOMAIN, DOT, S_EMAIL_DOMAIN_DOT); // Hyphen can jump back to a domain name
  // After the first domain and a dot, we can find either a URL or another domain

  makeT(S_DOMAIN_DOT, TLD, S_TLD);
  makeT(S_DOMAIN_DOT, DOMAIN, S_DOMAIN);
  makeT(S_DOMAIN_DOT, NUM, S_DOMAIN);
  makeT(S_DOMAIN_DOT, LOCALHOST, S_DOMAIN);
  makeT(S_EMAIL_DOMAIN_DOT, TLD, S_EMAIL);
  makeT(S_EMAIL_DOMAIN_DOT, DOMAIN, S_EMAIL_DOMAIN);
  makeT(S_EMAIL_DOMAIN_DOT, NUM, S_EMAIL_DOMAIN);
  makeT(S_EMAIL_DOMAIN_DOT, LOCALHOST, S_EMAIL_DOMAIN); // S_TLD accepts! But the URL could be longer, try to find a match greedily
  // The `run` function should be able to "rollback" to the accepting state

  makeT(S_TLD, DOT, S_DOMAIN_DOT);
  makeT(S_EMAIL, DOT, S_EMAIL_DOMAIN_DOT); // Become real URLs after `SLASH` or `COLON NUM SLASH`
  // Here PSS and non-PSS converge

  makeT(S_TLD, COLON, S_TLD_COLON);
  makeT(S_TLD, SLASH, S_URL);
  makeT(S_TLD_COLON, NUM, S_TLD_PORT);
  makeT(S_TLD_PORT, SLASH, S_URL);
  makeT(S_EMAIL, COLON, S_EMAIL_COLON);
  makeT(S_EMAIL_COLON, NUM, S_EMAIL_PORT); // Types of characters the URL can definitely end in

  var qsAccepting = [DOMAIN, AT, LOCALHOST, NUM, PLUS, POUND, PROTOCOL, SLASH, TLD, UNDERSCORE, SYM, AMPERSAND]; // Types of tokens that can follow a URL and be part of the query string
  // but cannot be the very last characters
  // Characters that cannot appear in the URL at all should be excluded

  var qsNonAccepting = [COLON, DOT, QUERY, PUNCTUATION, CLOSEBRACE, CLOSEBRACKET, CLOSEANGLEBRACKET, CLOSEPAREN, OPENBRACE, OPENBRACKET, OPENANGLEBRACKET, OPENPAREN]; // These states are responsible primarily for determining whether or not to
  // include the final round bracket.
  // URL, followed by an opening bracket

  makeT(S_URL, OPENBRACE, S_URL_OPENBRACE);
  makeT(S_URL, OPENBRACKET, S_URL_OPENBRACKET);
  makeT(S_URL, OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET);
  makeT(S_URL, OPENPAREN, S_URL_OPENPAREN); // URL with extra symbols at the end, followed by an opening bracket

  makeT(S_URL_NON_ACCEPTING, OPENBRACE, S_URL_OPENBRACE);
  makeT(S_URL_NON_ACCEPTING, OPENBRACKET, S_URL_OPENBRACKET);
  makeT(S_URL_NON_ACCEPTING, OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET);
  makeT(S_URL_NON_ACCEPTING, OPENPAREN, S_URL_OPENPAREN); // Closing bracket component. This character WILL be included in the URL

  makeT(S_URL_OPENBRACE, CLOSEBRACE, S_URL);
  makeT(S_URL_OPENBRACKET, CLOSEBRACKET, S_URL);
  makeT(S_URL_OPENANGLEBRACKET, CLOSEANGLEBRACKET, S_URL);
  makeT(S_URL_OPENPAREN, CLOSEPAREN, S_URL);
  makeT(S_URL_OPENBRACE_Q, CLOSEBRACE, S_URL);
  makeT(S_URL_OPENBRACKET_Q, CLOSEBRACKET, S_URL);
  makeT(S_URL_OPENANGLEBRACKET_Q, CLOSEANGLEBRACKET, S_URL);
  makeT(S_URL_OPENPAREN_Q, CLOSEPAREN, S_URL);
  makeT(S_URL_OPENBRACE_SYMS, CLOSEBRACE, S_URL);
  makeT(S_URL_OPENBRACKET_SYMS, CLOSEBRACKET, S_URL);
  makeT(S_URL_OPENANGLEBRACKET_SYMS, CLOSEANGLEBRACKET, S_URL);
  makeT(S_URL_OPENPAREN_SYMS, CLOSEPAREN, S_URL); // URL that beings with an opening bracket, followed by a symbols.
  // Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only
  // has a single opening bracket for some reason).

  makeMultiT(S_URL_OPENBRACE, qsAccepting, S_URL_OPENBRACE_Q);
  makeMultiT(S_URL_OPENBRACKET, qsAccepting, S_URL_OPENBRACKET_Q);
  makeMultiT(S_URL_OPENANGLEBRACKET, qsAccepting, S_URL_OPENANGLEBRACKET_Q);
  makeMultiT(S_URL_OPENPAREN, qsAccepting, S_URL_OPENPAREN_Q);
  makeMultiT(S_URL_OPENBRACE, qsNonAccepting, S_URL_OPENBRACE_SYMS);
  makeMultiT(S_URL_OPENBRACKET, qsNonAccepting, S_URL_OPENBRACKET_SYMS);
  makeMultiT(S_URL_OPENANGLEBRACKET, qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);
  makeMultiT(S_URL_OPENPAREN, qsNonAccepting, S_URL_OPENPAREN_SYMS); // URL that begins with an opening bracket, followed by some symbols

  makeMultiT(S_URL_OPENBRACE_Q, qsAccepting, S_URL_OPENBRACE_Q);
  makeMultiT(S_URL_OPENBRACKET_Q, qsAccepting, S_URL_OPENBRACKET_Q);
  makeMultiT(S_URL_OPENANGLEBRACKET_Q, qsAccepting, S_URL_OPENANGLEBRACKET_Q);
  makeMultiT(S_URL_OPENPAREN_Q, qsAccepting, S_URL_OPENPAREN_Q);
  makeMultiT(S_URL_OPENBRACE_Q, qsNonAccepting, S_URL_OPENBRACE_Q);
  makeMultiT(S_URL_OPENBRACKET_Q, qsNonAccepting, S_URL_OPENBRACKET_Q);
  makeMultiT(S_URL_OPENANGLEBRACKET_Q, qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);
  makeMultiT(S_URL_OPENPAREN_Q, qsNonAccepting, S_URL_OPENPAREN_Q);
  makeMultiT(S_URL_OPENBRACE_SYMS, qsAccepting, S_URL_OPENBRACE_Q);
  makeMultiT(S_URL_OPENBRACKET_SYMS, qsAccepting, S_URL_OPENBRACKET_Q);
  makeMultiT(S_URL_OPENANGLEBRACKET_SYMS, qsAccepting, S_URL_OPENANGLEBRACKET_Q);
  makeMultiT(S_URL_OPENPAREN_SYMS, qsAccepting, S_URL_OPENPAREN_Q);
  makeMultiT(S_URL_OPENBRACE_SYMS, qsNonAccepting, S_URL_OPENBRACE_SYMS);
  makeMultiT(S_URL_OPENBRACKET_SYMS, qsNonAccepting, S_URL_OPENBRACKET_SYMS);
  makeMultiT(S_URL_OPENANGLEBRACKET_SYMS, qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);
  makeMultiT(S_URL_OPENPAREN_SYMS, qsNonAccepting, S_URL_OPENPAREN_SYMS); // Account for the query string

  makeMultiT(S_URL, qsAccepting, S_URL);
  makeMultiT(S_URL_NON_ACCEPTING, qsAccepting, S_URL);
  makeMultiT(S_URL, qsNonAccepting, S_URL_NON_ACCEPTING);
  makeMultiT(S_URL_NON_ACCEPTING, qsNonAccepting, S_URL_NON_ACCEPTING); // Email address-specific state definitions
  // Note: We are not allowing '/' in email addresses since this would interfere
  // with real URLs
  // For addresses with the mailto prefix
  // 'mailto:' followed by anything sane is a valid email

  makeT(S_MAILTO, TLD, S_MAILTO_EMAIL);
  makeT(S_MAILTO, DOMAIN, S_MAILTO_EMAIL);
  makeT(S_MAILTO, NUM, S_MAILTO_EMAIL);
  makeT(S_MAILTO, LOCALHOST, S_MAILTO_EMAIL); // Greedily get more potential valid email values

  makeMultiT(S_MAILTO_EMAIL, qsAccepting, S_MAILTO_EMAIL);
  makeMultiT(S_MAILTO_EMAIL, qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);
  makeMultiT(S_MAILTO_EMAIL_NON_ACCEPTING, qsAccepting, S_MAILTO_EMAIL);
  makeMultiT(S_MAILTO_EMAIL_NON_ACCEPTING, qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING); // For addresses without the mailto prefix
  // Tokens allowed in the localpart of the email

  var localpartAccepting = [DOMAIN, NUM, PLUS, POUND, QUERY, UNDERSCORE, SYM, AMPERSAND, TLD]; // Some of the tokens in `localpartAccepting` are already accounted for here and
  // will not be overwritten (don't worry)

  makeMultiT(S_DOMAIN, localpartAccepting, S_LOCALPART);
  makeT(S_DOMAIN, AT, S_LOCALPART_AT);
  makeMultiT(S_TLD, localpartAccepting, S_LOCALPART);
  makeT(S_TLD, AT, S_LOCALPART_AT);
  makeMultiT(S_DOMAIN_DOT, localpartAccepting, S_LOCALPART); // Now in localpart of address
  // TODO: IP addresses and what if the email starts with numbers?

  makeMultiT(S_LOCALPART, localpartAccepting, S_LOCALPART);
  makeT(S_LOCALPART, AT, S_LOCALPART_AT); // close to an email address now

  makeT(S_LOCALPART, DOT, S_LOCALPART_DOT);
  makeMultiT(S_LOCALPART_DOT, localpartAccepting, S_LOCALPART);
  makeT(S_LOCALPART_AT, TLD, S_EMAIL_DOMAIN);
  makeT(S_LOCALPART_AT, DOMAIN, S_EMAIL_DOMAIN);
  makeT(S_LOCALPART_AT, NUM, S_EMAIL_DOMAIN);
  makeT(S_LOCALPART_AT, LOCALHOST, S_EMAIL); // States following `@` defined above

  return S_START;
}
/**
 * Run the parser state machine on a list of scanned string-based tokens to
 * create a list of multi tokens, each of which represents a URL, email address,
 * plain text, etc.
 *
 * @param {State} start parser start state
 * @param {string} input the original input used to generate the given tokens
 * @param {Array<{t: string, v: string, s: number, e: number}>} tokens list of scanned tokens
 * @returns {Array<MultiToken>}
 */

function run(start, input, tokens) {
  var len = tokens.length;
  var cursor = 0;
  var multis = [];
  var textTokens = [];

  while (cursor < len) {
    var state = start;
    var secondState = null;
    var nextState = null;
    var multiLength = 0;
    var latestAccepting = null;
    var sinceAccepts = -1;

    while (cursor < len && !(secondState = takeT(state, tokens[cursor].t))) {
      // Starting tokens with nowhere to jump to.
      // Consider these to be just plain text
      textTokens.push(tokens[cursor++]);
    }

    while (cursor < len && (nextState = secondState || takeT(state, tokens[cursor].t))) {
      // Get the next state
      secondState = null;
      state = nextState; // Keep track of the latest accepting state

      if (state.accepts()) {
        sinceAccepts = 0;
        latestAccepting = state;
      } else if (sinceAccepts >= 0) {
        sinceAccepts++;
      }

      cursor++;
      multiLength++;
    }

    if (sinceAccepts < 0) {
      // No accepting state was found, part of a regular text token
      // Add all the tokens we looked at to the text tokens array
      for (var i = cursor - multiLength; i < cursor; i++) {
        textTokens.push(tokens[i]);
      }
    } else {
      // Accepting state!
      // First close off the textTokens (if available)
      if (textTokens.length > 0) {
        multis.push(parserCreateMultiToken(Text, input, textTokens));
        textTokens = [];
      } // Roll back to the latest accepting state


      cursor -= sinceAccepts;
      multiLength -= sinceAccepts; // Create a new multitoken

      var Multi = latestAccepting.t;
      var subtokens = tokens.slice(cursor - multiLength, cursor);
      multis.push(parserCreateMultiToken(Multi, input, subtokens));
    }
  } // Finally close off the textTokens (if available)


  if (textTokens.length > 0) {
    multis.push(parserCreateMultiToken(Text, input, textTokens));
  }

  return multis;
}
/**
 * Utility function for instantiating a new multitoken with all the relevant
 * fields during parsing.
 * @param {Class<MultiToken>} Multi class to instantiate
 * @param {string} input original input string
 * @param {Array<{t: string, v: string, s: number, e: number}>} tokens consecutive tokens scanned from input string
 * @returns {MultiToken}
 */

function parserCreateMultiToken(Multi, input, tokens) {
  var startIdx = tokens[0].s;
  var endIdx = tokens[tokens.length - 1].e;
  var value = input.substr(startIdx, endIdx - startIdx);
  return new Multi(value, tokens);
}

var warn = typeof console !== 'undefined' && console && console.warn || function () {}; // Side-effect initialization state


var INIT = {
  scanner: null,
  parser: null,
  pluginQueue: [],
  customProtocols: [],
  initialized: false
};
/**
 * De-register all plugins and reset the internal state-machine. Used for
 * testing; not required in practice.
 * @private
 */

function reset() {
  INIT.scanner = null;
  INIT.parser = null;
  INIT.pluginQueue = [];
  INIT.customProtocols = [];
  INIT.initialized = false;
}
/**
 * Register a linkify extension plugin
 * @param {string} name of plugin to register
 * @param {Function} plugin function that accepts mutable linkify state
 */

function registerPlugin(name, plugin) {
  for (var i = 0; i < INIT.pluginQueue.length; i++) {
    if (name === INIT.pluginQueue[i][0]) {
      warn("linkifyjs: plugin \"".concat(name, "\" already registered - will be overwritten"));
      INIT.pluginQueue[i] = [name, plugin];
      return;
    }
  }

  INIT.pluginQueue.push([name, plugin]);

  if (INIT.initialized) {
    warn("linkifyjs: already initialized - will not register plugin \"".concat(name, "\" until you manually call linkify.init(). To avoid this warning, please register all plugins before invoking linkify the first time."));
  }
}
/**
 * Detect URLs with the following additional protocol. Anything following
 * "protocol:" will be considered a link.
 * @param {string} protocol
 */

function registerCustomProtocol(protocol) {
  if (INIT.initialized) {
    warn("linkifyjs: already initialized - will not register custom protocol \"".concat(protocol, "\" until you manually call linkify.init(). To avoid this warning, please register all custom protocols before invoking linkify the first time."));
  }

  if (!/^[a-z]+$/.test(protocol)) {
    throw Error('linkifyjs - protocols containing characters other than a - z are not supported');
  }

  INIT.customProtocols.push(protocol);
}
/**
 * Initialize the linkify state machine. Called automatically the first time
 * linkify is called on a string, but may be called manually as well.
 */

function init() {
  // Initialize state machines
  INIT.scanner = {
    start: init$2(INIT.customProtocols),
    tokens: text
  };
  INIT.parser = {
    start: init$1(),
    tokens: multi
  };
  var utils = {
    createTokenClass: createTokenClass
  }; // Initialize plugins

  for (var i = 0; i < INIT.pluginQueue.length; i++) {
    INIT.pluginQueue[i][1]({
      scanner: INIT.scanner,
      parser: INIT.parser,
      utils: utils
    });
  }

  INIT.initialized = true;
}
/**
	Converts a string into tokens that represent linkable and non-linkable bits
	@param {string} str
	@return {Array<MultiToken>} tokens
*/

function tokenize(str) {
  if (!INIT.initialized) {
    init();
  }

  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));
}
/**
	Returns a list of linkable items in the given string.
	@param {string} str string to find links in
	@param {string} type (optional) only find links of a specific type, e.g.,
	'url' or 'email'
*/

function find(str) {
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var tokens = tokenize(str);
  var filtered = [];

  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (token.isLink && (!type || token.t === type)) {
      filtered.push(token.toObject());
    }
  }

  return filtered;
}
/**
 * Is the given string valid linkable text of some sort. Note that this does not
 * trim the text for you.
 *
 * Optionally pass in a second `type` param, which is the type of link to test
 * for.
 *
 * For example,
 *
 *     linkify.test(str, 'email');
 *
 * Returns `true` if str is a valid email.
 * @param {string} str string to test for links
 * @param {string} [type] optional specific link type to look for
 * @returns boolean true/false
 */

function test(str) {
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var tokens = tokenize(str);
  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);
}

exports.find = find;
exports.init = init;
exports.options = options;
exports.registerCustomProtocol = registerCustomProtocol;
exports.registerPlugin = registerPlugin;
exports.reset = reset;
exports.test = test;
exports.tokenize = tokenize;


/***/ }),

/***/ "2d83":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__("387f");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ "2e67":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "30b5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "342f":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "35a1":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("f5df");
var Iterators = __webpack_require__("3f8c");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "36c4":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer, process) {/* unused harmony export Allow */
/* unused harmony export AllowAll */
/* unused harmony export AnyResource */
/* unused harmony export AnyRole */
/* unused harmony export BuiltinPermissions */
/* unused harmony export BuiltinRoles */
/* unused harmony export Channel */
/* unused harmony export ChannelState */
/* unused harmony export CheckSignature */
/* unused harmony export ClientState */
/* unused harmony export Deny */
/* unused harmony export DenyAll */
/* unused harmony export DevToken */
/* unused harmony export EVENT_MAP */
/* unused harmony export JWTServerToken */
/* unused harmony export JWTUserToken */
/* unused harmony export MaxPriority */
/* unused harmony export MinPriority */
/* unused harmony export Permission */
/* unused harmony export StableWSConnection */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StreamChat; });
/* unused harmony export TokenManager */
/* unused harmony export UserFromToken */
/* unused harmony export chatCodes */
/* unused harmony export decodeBase64 */
/* unused harmony export encodeBase64 */
/* unused harmony export isOwnUser */
/* unused harmony export isValidEventType */
/* unused harmony export logChatPromiseExecution */
/* harmony import */ var base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("1fb5");
/* harmony import */ var base64_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(base64_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("a559");
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("7037");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("4082");
/* harmony import */ var _babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("448a");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("a34a");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("c973");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("970b");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("5bc3");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("9523");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("bc3a");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var seamless_immutable__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("ff91");
/* harmony import */ var seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(seamless_immutable__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("278c");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var form_data__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("5a30");
/* harmony import */ var form_data__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(form_data__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var isomorphic_ws__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("3fe3");
/* harmony import */ var isomorphic_ws__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(isomorphic_ws__WEBPACK_IMPORTED_MODULE_14__);
















function isString(arrayOrString) {
  return typeof arrayOrString === 'string';
}

function isMapStringCallback(arrayOrString, callback) {
  return callback && isString(arrayOrString);
} // source - https://github.com/beatgammit/base64-js/blob/master/test/convert.js#L72


function map(arrayOrString, callback) {
  var res = [];

  if (isString(arrayOrString) && isMapStringCallback(arrayOrString, callback)) {
    for (var k = 0, len = arrayOrString.length; k < len; k++) {
      if (arrayOrString.charAt(k)) {
        var kValue = arrayOrString.charAt(k);
        var mappedValue = callback(kValue, k, arrayOrString);
        res[k] = mappedValue;
      }
    }
  } else if (!isString(arrayOrString) && !isMapStringCallback(arrayOrString, callback)) {
    for (var _k = 0, _len = arrayOrString.length; _k < _len; _k++) {
      if (_k in arrayOrString) {
        var _kValue = arrayOrString[_k];

        var _mappedValue = callback(_kValue, _k, arrayOrString);

        res[_k] = _mappedValue;
      }
    }
  }

  return res;
}

var encodeBase64 = function encodeBase64(data) {
  return Object(base64_js__WEBPACK_IMPORTED_MODULE_0__["fromByteArray"])(new Uint8Array(map(data, function (char) {
    return char.charCodeAt(0);
  })));
}; // base-64 decoder throws exception if encoded string is not padded by '=' to make string length
// in multiples of 4. So gonna use our own method for this purpose to keep backwards compatibility
// https://github.com/beatgammit/base64-js/blob/master/index.js#L26

var decodeBase64 = function decodeBase64(s) {
  var e = {},
      w = String.fromCharCode,
      L = s.length;
  var i,
      b = 0,
      c,
      x,
      l = 0,
      a,
      r = '';
  var A = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

  for (i = 0; i < 64; i++) {
    e[A.charAt(i)] = i;
  }

  for (x = 0; x < L; x++) {
    c = e[s.charAt(x)];
    b = (b << 6) + c;
    l += 6;

    while (l >= 8) {
      ((a = b >>> (l -= 8) & 0xff) || x < L - 2) && (r += w(a));
    }
  }

  return r;
};

var https = null;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * ChannelState - A container class for the channel state.
 */
var ChannelState = /*#__PURE__*/function () {
  /**
   * Flag which indicates if channel state contain latest/recent messages or no.
   * This flag should be managed by UI sdks using a setter - setIsUpToDate.
   * When false, any new message (received by websocket event - message.new) will not
   * be pushed on to message list.
   */
  function ChannelState(channel) {
    var _this = this,
        _channel$state;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_7___default()(this, ChannelState);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_channel", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "watcher_count", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "typing", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "read", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "messages", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "pinnedMessages", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "threads", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "mutedUsers", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "watchers", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "members", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "unreadCount", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "membership", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "last_message_at", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "isUpToDate", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "setIsUpToDate", function (isUpToDate) {
      _this.isUpToDate = isUpToDate;
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "removeMessageFromArray", function (msgArray, msg) {
      var result = msgArray.filter(function (message) {
        return !(!!message.id && !!msg.id && message.id === msg.id);
      });
      return {
        removed: result.length < msgArray.length,
        result: result
      };
    });

    this._channel = channel;
    this.watcher_count = 0;
    this.typing = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()({});
    this.read = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()({});
    this.messages = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()([]);
    this.pinnedMessages = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()([]);
    this.threads = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()({}); // a list of users to hide messages from

    this.mutedUsers = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()([]);
    this.watchers = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()({});
    this.members = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()({});
    this.membership = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()({});
    this.unreadCount = 0;
    /**
     * Flag which indicates if channel state contain latest/recent messages or no.
     * This flag should be managed by UI sdks using a setter - setIsUpToDate.
     * When false, any new message (received by websocket event - message.new) will not
     * be pushed on to message list.
     */

    this.isUpToDate = true;
    this.last_message_at = (channel === null || channel === void 0 ? void 0 : (_channel$state = channel.state) === null || _channel$state === void 0 ? void 0 : _channel$state.last_message_at) != null ? new Date(channel.state.last_message_at) : null;
  }
  /**
   * addMessageSorted - Add a message to the state
   *
   * @param {MessageResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>} newMessage A new message
   * @param {boolean} timestampChanged Whether updating a message with changed created_at value.
   *
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_8___default()(ChannelState, [{
    key: "addMessageSorted",
    value: function addMessageSorted(newMessage) {
      var timestampChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      return this.addMessagesSorted([newMessage], timestampChanged);
    }
    /**
     * messageToImmutable - Takes the message object. Parses the dates, sets __html
     * and sets the status to received if missing. Returns an immutable message object
     *
     * @param {MessageResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>} message an Immutable message object
     *
     */

  }, {
    key: "messageToImmutable",
    value: function messageToImmutable(message) {
      return seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()(_objectSpread(_objectSpread({}, message), {}, {
        __html: message.html,
        // parse the date..
        pinned_at: message.pinned_at ? new Date(message.pinned_at) : null,
        created_at: message.created_at ? new Date(message.created_at) : new Date(),
        updated_at: message.updated_at ? new Date(message.updated_at) : new Date(),
        status: message.status || 'received'
      }));
    }
    /**
     * addMessagesSorted - Add the list of messages to state and resorts the messages
     *
     * @param {Array<MessageResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} newMessages A list of messages
     * @param {boolean} timestampChanged Whether updating messages with changed created_at value.
     * @param {boolean} initializing Whether channel is being initialized.
     *
     */

  }, {
    key: "addMessagesSorted",
    value: function addMessagesSorted(newMessages) {
      var timestampChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var initializing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      for (var i = 0; i < newMessages.length; i += 1) {
        var message = this.messageToImmutable(newMessages[i]);

        if (initializing && message.id && this.threads[message.id]) {
          // If we are initializing the state of channel (e.g., in case of connection recovery),
          // then in that case we remove thread related to this message from threads object.
          // This way we can ensure that we don't have any stale data in thread object
          // and consumer can refetch the replies.
          this.threads = this.threads.without(message.id);
        }

        if (!this.last_message_at) {
          this.last_message_at = new Date(message.created_at.getTime());
        }

        if (message.created_at.getTime() > this.last_message_at.getTime()) {
          this.last_message_at = new Date(message.created_at.getTime());
        } // update or append the messages...


        var parentID = message.parent_id; // add to the main message list

        if (!parentID || message.show_in_channel) {
          this.messages = this._addToMessageList(this.messages, message, timestampChanged);
        } // add to the thread if applicable..


        if (parentID) {
          var thread = this.threads[parentID] || seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()([]);

          var threadMessages = this._addToMessageList(thread, message, timestampChanged);

          this.threads = this.threads.set(parentID, threadMessages);
        }
      }
    }
    /**
     * addPinnedMessages - adds messages in pinnedMessages property
     *
     * @param {Array<MessageResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} pinnedMessages A list of pinned messages
     *
     */

  }, {
    key: "addPinnedMessages",
    value: function addPinnedMessages(pinnedMessages) {
      for (var i = 0; i < pinnedMessages.length; i += 1) {
        this.addPinnedMessage(pinnedMessages[i]);
      }
    }
    /**
     * addPinnedMessage - adds message in pinnedMessages
     *
     * @param {MessageResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>} pinnedMessage message to update
     *
     */

  }, {
    key: "addPinnedMessage",
    value: function addPinnedMessage(pinnedMessage) {
      this.pinnedMessages = this._addToMessageList(this.pinnedMessages, this.messageToImmutable(pinnedMessage), false, 'pinned_at');
    }
    /**
     * removePinnedMessage - removes pinned message from pinnedMessages
     *
     * @param {MessageResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>} message message to remove
     *
     */

  }, {
    key: "removePinnedMessage",
    value: function removePinnedMessage(message) {
      var _this$removeMessageFr = this.removeMessageFromArray(this.pinnedMessages, message),
          result = _this$removeMessageFr.result;

      this.pinnedMessages = result;
    }
  }, {
    key: "addReaction",
    value: function addReaction(reaction, message, enforce_unique) {
      var messages = this.messages;
      if (!message) return;
      var parent_id = message.parent_id,
          show_in_channel = message.show_in_channel;

      if (parent_id && this.threads[parent_id]) {
        var thread = this.threads[parent_id];

        for (var i = 0; i < thread.length; i++) {
          var msg = thread[i];

          var messageWithReaction = this._addReactionToMessage(msg, reaction, enforce_unique);

          if (!messageWithReaction) {
            continue;
          } // @ts-expect-error - ImmutableArray.set exists in the documentation but not in the DefinitelyTyped types


          this.threads = this.threads.set(parent_id, thread.set(i, messageWithReaction));
          break;
        }
      }

      if (!show_in_channel && !parent_id || show_in_channel) {
        for (var _i = 0; _i < messages.length; _i++) {
          var _msg = messages[_i];

          var _messageWithReaction = this._addReactionToMessage(_msg, reaction, enforce_unique);

          if (!_messageWithReaction) {
            continue;
          } // @ts-expect-error - ImmutableArray.set exists in the documentation but not in the DefinitelyTyped types


          this.messages = messages.set(_i, _messageWithReaction);
          break;
        }
      }
    }
  }, {
    key: "_addReactionToMessage",
    value: function _addReactionToMessage(message, reaction, enforce_unique) {
      var _reaction$user;

      var idMatch = !!message.id && message.id === reaction.message_id;

      if (!idMatch) {
        return false;
      }

      var newMessage = this._removeReactionFromMessage(message, reaction, enforce_unique);

      if (this._channel.getClient().userID === ((_reaction$user = reaction.user) === null || _reaction$user === void 0 ? void 0 : _reaction$user.id)) {
        newMessage = newMessage.update('own_reactions', function (old) {
          return old.concat([reaction]);
        });
      }

      newMessage = newMessage.update('latest_reactions', function (old) {
        return old.concat([reaction]);
      });
      newMessage = newMessage.updateIn(['reaction_counts', reaction.type], function (old) {
        return old ? old + 1 : 1;
      });
      return newMessage;
    }
  }, {
    key: "_removeReactionFromMessage",
    value: function _removeReactionFromMessage(message, reaction, enforce_unique) {
      var filterReaction = function filterReaction(old) {
        return old.filter(function (item) {
          var _item$user, _reaction$user2, _item$user2, _reaction$user3;

          return enforce_unique ? ((_item$user = item.user) === null || _item$user === void 0 ? void 0 : _item$user.id) !== ((_reaction$user2 = reaction.user) === null || _reaction$user2 === void 0 ? void 0 : _reaction$user2.id) : item.type !== reaction.type || ((_item$user2 = item.user) === null || _item$user2 === void 0 ? void 0 : _item$user2.id) !== ((_reaction$user3 = reaction.user) === null || _reaction$user3 === void 0 ? void 0 : _reaction$user3.id);
        });
      };

      var newMessage = message.update('own_reactions', filterReaction);
      newMessage = newMessage.update('latest_reactions', filterReaction);

      if (enforce_unique) {
        var _message$own_reaction;

        var oldReaction = (_message$own_reaction = message.own_reactions) === null || _message$own_reaction === void 0 ? void 0 : _message$own_reaction.find(function (_ref) {
          var type = _ref.type;
          return type === reaction.type;
        });

        if (oldReaction) {
          newMessage = newMessage.updateIn(['reaction_counts', oldReaction.type], function (old) {
            return old ? old - 1 : 0;
          });
        }
      }

      return newMessage;
    }
  }, {
    key: "removeReaction",
    value: function removeReaction(reaction, message) {
      var messages = this.messages;
      if (!message) return;
      var parent_id = message.parent_id,
          show_in_channel = message.show_in_channel;

      if (parent_id && this.threads[parent_id]) {
        var thread = this.threads[parent_id];

        for (var i = 0; i < thread.length; i++) {
          var msg = thread[i];
          var idMatch = !!msg.id && msg.id === reaction.message_id;

          if (!idMatch) {
            continue;
          }

          var messageWithReaction = this._removeReactionFromMessage(msg, reaction);

          messageWithReaction = messageWithReaction.updateIn(['reaction_counts', reaction.type], function (old) {
            return old ? old - 1 : 0;
          }); // @ts-expect-error - ImmutableArray.set exists in the documentation but not in the DefinitelyTyped types

          this.threads = this.threads.set(parent_id, thread.set(i, messageWithReaction));
          break;
        }
      }

      if (!show_in_channel && !parent_id || show_in_channel) {
        for (var _i2 = 0; _i2 < messages.length; _i2++) {
          var _msg2 = messages[_i2];

          var _idMatch = !!_msg2.id && _msg2.id === reaction.message_id;

          if (!_idMatch) {
            continue;
          }

          var _messageWithReaction2 = this._removeReactionFromMessage(_msg2, reaction);

          _messageWithReaction2 = _messageWithReaction2.updateIn(['reaction_counts', reaction.type], function (old) {
            return old ? old - 1 : 0;
          }); // @ts-expect-error - ImmutableArray.set exists in the documentation but not in the DefinitelyTyped types

          this.messages = messages.set(_i2, _messageWithReaction2);
          break;
        }
      }
    }
    /**
     * Setter for isUpToDate.
     *
     * @param isUpToDate  Flag which indicates if channel state contain latest/recent messages or no.
     *                    This flag should be managed by UI sdks using a setter - setIsUpToDate.
     *                    When false, any new message (received by websocket event - message.new) will not
     *                    be pushed on to message list.
     */

  }, {
    key: "_addToMessageList",

    /**
     * _addToMessageList - Adds a message to a list of messages, tries to update first, appends if message isn't found
     *
     * @param {Immutable.ImmutableArray<ReturnType<ChannelState<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType>['messageToImmutable']>>} messages A list of messages
     * @param message
     * @param {boolean} timestampChanged Whether updating a message with changed created_at value.
     * @param {string} sortBy field name to use to sort the messages by
     */
    value: function _addToMessageList(messages, message) {
      var timestampChanged = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var sortBy = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'created_at';
      var messageArr = messages; // if created_at has changed, message should be filtered and re-inserted in correct order
      // slow op but usually this only happens for a message inserted to state before actual response with correct timestamp

      if (timestampChanged) {
        messageArr = messageArr.filter(function (msg) {
          return !(msg.id && message.id === msg.id);
        });
      } // for empty list just concat and return


      if (messageArr.length === 0) return messageArr.concat(message);
      var messageTime = message[sortBy].getTime(); // if message is newer than last item in the list concat and return

      if (messageArr[messageArr.length - 1][sortBy].getTime() < messageTime) return messageArr.concat(message); // find the closest index to push the new message

      var left = 0;
      var middle = 0;
      var right = messageArr.length - 1;

      while (left <= right) {
        middle = Math.floor((right + left) / 2);
        if (messageArr[middle][sortBy].getTime() <= messageTime) left = middle + 1;else right = middle - 1;
      } // message already exists and not filtered due to timestampChanged, update and return


      if (!timestampChanged && message.id) {
        if (messageArr[left] && message.id === messageArr[left].id) // @ts-expect-error - ImmutableArray.set exists in the documentation but not in the DefinitelyTyped types
          return messageArr.set(left, message);
        if (messageArr[left - 1] && message.id === messageArr[left - 1].id) // @ts-expect-error - ImmutableArray.set exists in the documentation but not in the DefinitelyTyped types
          return messageArr.set(left - 1, message);
      }

      var mutable = messageArr.asMutable();
      mutable.splice(left, 0, message);
      return seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()(mutable);
    }
    /**
     * removeMessage - Description
     *
     * @param {{ id: string; parent_id?: string }} messageToRemove Object of the message to remove. Needs to have at id specified.
     *
     * @return {boolean} Returns if the message was removed
     */

  }, {
    key: "removeMessage",
    value: function removeMessage(messageToRemove) {
      var isRemoved = false;

      if (messageToRemove.parent_id && this.threads[messageToRemove.parent_id]) {
        var _this$removeMessageFr2 = this.removeMessageFromArray(this.threads[messageToRemove.parent_id], messageToRemove),
            removed = _this$removeMessageFr2.removed,
            threadMessages = _this$removeMessageFr2.result; // @ts-expect-error - ImmutableArray.set exists in the documentation but not in the DefinitelyTyped types


        this.threads = this.threads[messageToRemove.parent_id].set(messageToRemove.parent_id, threadMessages);
        isRemoved = removed;
      } else {
        var _this$removeMessageFr3 = this.removeMessageFromArray(this.messages, messageToRemove),
            _removed = _this$removeMessageFr3.removed,
            messages = _this$removeMessageFr3.result;

        this.messages = messages;
        isRemoved = _removed;
      }

      return isRemoved;
    }
  }, {
    key: "filterErrorMessages",

    /**
     * filterErrorMessages - Removes error messages from the channel state.
     *
     */
    value: function filterErrorMessages() {
      var filteredMessages = this.messages.filter(function (message) {
        return message.type !== 'error';
      });
      this.messages = filteredMessages;
    }
    /**
     * clean - Remove stale data such as users that stayed in typing state for more than 5 seconds
     */

  }, {
    key: "clean",
    value: function clean() {
      var now = new Date(); // prevent old users from showing up as typing

      for (var _i3 = 0, _Object$entries = Object.entries(this.typing); _i3 < _Object$entries.length; _i3++) {
        var _Object$entries$_i = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_12___default()(_Object$entries[_i3], 2),
            userID = _Object$entries$_i[0],
            lastEvent = _Object$entries$_i[1];

        var since = typeof lastEvent.received_at === 'string' && now.getTime() - new Date(lastEvent.received_at).getTime();

        if (since > 7000) {
          this.typing = this.typing.without(userID);

          this._channel.getClient().dispatchEvent({
            type: 'typing.stop',
            user: {
              id: userID
            },
            cid: this._channel.cid
          });
        }
      }
    }
  }, {
    key: "clearMessages",
    value: function clearMessages() {
      this.messages = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()([]);
    }
  }]);

  return ChannelState;
}();

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var EVENT_MAP = {
  'channel.created': true,
  'channel.deleted': true,
  'channel.hidden': true,
  'channel.muted': true,
  'channel.truncated': true,
  'channel.unmuted': true,
  'channel.updated': true,
  'channel.visible': true,
  'health.check': true,
  'member.added': true,
  'member.removed': true,
  'member.updated': true,
  'message.deleted': true,
  'message.new': true,
  'message.read': true,
  'message.updated': true,
  'notification.added_to_channel': true,
  'notification.channel_deleted': true,
  'notification.channel_mutes_updated': true,
  'notification.channel_truncated': true,
  'notification.invite_accepted': true,
  'notification.invite_rejected': true,
  'notification.invited': true,
  'notification.mark_read': true,
  'notification.message_new': true,
  'notification.mutes_updated': true,
  'notification.removed_from_channel': true,
  'reaction.deleted': true,
  'reaction.new': true,
  'reaction.updated': true,
  'typing.start': true,
  'typing.stop': true,
  'user.banned': true,
  'user.deleted': true,
  'user.presence.changed': true,
  'user.unbanned': true,
  'user.updated': true,
  'user.watching.start': true,
  'user.watching.stop': true,
  // local events
  'connection.changed': true,
  'connection.recovered': true
};

var IS_VALID_EVENT_MAP_TYPE = _objectSpread$1(_objectSpread$1({}, EVENT_MAP), {}, {
  all: true
});

var isValidEventType = function isValidEventType(eventType) {
  return IS_VALID_EVENT_MAP_TYPE[eventType] || false;
};

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * logChatPromiseExecution - utility function for logging the execution of a promise..
 *  use this when you want to run the promise and handle errors by logging a warning
 *
 * @param {Promise<T>} promise The promise you want to run and log
 * @param {string} name    A descriptive name of what the promise does for log output
 *
 */
function logChatPromiseExecution(promise, name) {
  promise.then().catch(function (error) {
    console.warn("failed to do ".concat(name, ", ran into error: "), error);
  });
}
var sleep = function sleep(m) {
  return new Promise(function (r) {
    return setTimeout(r, m);
  });
};
function isFunction(value) {
  return value && (Object.prototype.toString.call(value) === '[object Function]' || 'function' === typeof value || value instanceof Function);
}
var chatCodes = {
  TOKEN_EXPIRED: 40,
  WS_CLOSED_SUCCESS: 1000
};

function isReadableStream(obj) {
  return obj !== null && _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2___default()(obj) === 'object' && (obj.readable || typeof obj._read === 'function');
}

function isBuffer(obj) {
  return obj != null && obj.constructor != null && // @ts-expect-error
  typeof obj.constructor.isBuffer === 'function' && // @ts-expect-error
  obj.constructor.isBuffer(obj);
}

function isFileWebAPI(uri) {
  return typeof window !== 'undefined' && 'File' in window && uri instanceof File;
}

function isOwnUser(user) {
  return (user === null || user === void 0 ? void 0 : user.total_unread_count) !== undefined;
}
function addFileToFormData(uri, name, contentType) {
  var data = new form_data__WEBPACK_IMPORTED_MODULE_13___default.a();

  if (isReadableStream(uri) || isBuffer(uri) || isFileWebAPI(uri)) {
    if (name) data.append('file', uri, name);else data.append('file', uri);
  } else {
    data.append('file', {
      uri: uri,
      name: name || uri.split('/').reverse()[0],
      contentType: contentType || undefined,
      type: contentType || undefined
    });
  }

  return data;
}
function normalizeQuerySort(sort) {
  var sortFields = [];
  var sortArr = Array.isArray(sort) ? sort : [sort];

  var _iterator = _createForOfIteratorHelper(sortArr),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var item = _step.value;
      var entries = Object.entries(item);

      if (entries.length > 1) {
        console.warn("client._buildSort() - multiple fields in a single sort object detected. Object's field order is not guaranteed");
      }

      for (var _i = 0, _entries = entries; _i < _entries.length; _i++) {
        var _entries$_i = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_12___default()(_entries[_i], 2),
            field = _entries$_i[0],
            direction = _entries$_i[1];

        sortFields.push({
          field: field,
          direction: direction
        });
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return sortFields;
}
/** adopted from https://github.com/ai/nanoid/blob/master/non-secure/index.js */

var alphabet = 'ModuleSymbhasOwnPr0123456789ABCDEFGHNRVfgctiUvzKqYTJkLxpZXIjQW';
function randomId() {
  var id = '';

  for (var i = 0; i < 21; i++) {
    id += alphabet[Math.random() * 64 | 0];
  }

  return id;
}

function _createForOfIteratorHelper$1(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }

function _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$2(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Channel - The Channel class manages it's own state.
 */
var Channel = /*#__PURE__*/function () {
  /**
   * constructor - Create a channel
   *
   * @param {StreamChat<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType>} client the chat client
   * @param {string} type  the type of channel
   * @param {string} [id]  the id of the chat
   * @param {ChannelData<ChannelType>} data any additional custom params
   *
   * @return {Channel<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType>} Returns a new uninitialized channel
   */
  function Channel(client, type, id, data) {
    var _this = this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_7___default()(this, Channel);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_client", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "type", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "id", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "data", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_data", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "cid", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "listeners", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "state", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "initialized", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "lastKeyStroke", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "lastTypingEvent", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "isTyping", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "disconnected", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "create", /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee() {
      var options;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              options = {
                watch: false,
                state: false,
                presence: false
              };
              _context.next = 3;
              return _this.query(options);

            case 3:
              return _context.abrupt("return", _context.sent);

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_callChannelListeners", function (event) {
      var channel = _this; // gather and call the listeners

      var listeners = [];

      if (channel.listeners.all) {
        listeners.push.apply(listeners, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_4___default()(channel.listeners.all));
      }

      if (channel.listeners[event.type]) {
        listeners.push.apply(listeners, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_4___default()(channel.listeners[event.type]));
      } // call the event and send it to the listeners


      for (var _i = 0, _listeners = listeners; _i < _listeners.length; _i++) {
        var listener = _listeners[_i];

        if (typeof listener !== 'string') {
          listener(event);
        }
      }
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_channelURL", function () {
      if (!_this.id) {
        throw new Error('channel id is not defined');
      }

      return "".concat(_this.getClient().baseURL, "/channels/").concat(_this.type, "/").concat(_this.id);
    });

    var validTypeRe = /^[\w_-]+$/;
    var validIDRe = /^[\w!_-]+$/;

    if (!validTypeRe.test(type)) {
      throw new Error("Invalid chat type ".concat(type, ", letters, numbers and \"_-\" are allowed"));
    }

    if (typeof id === 'string' && !validIDRe.test(id)) {
      throw new Error("Invalid chat id ".concat(id, ", letters, numbers and \"!-_\" are allowed"));
    }

    this._client = client;
    this.type = type;
    this.id = id; // used by the frontend, gets updated:

    this.data = data; // this._data is used for the requests...

    this._data = _objectSpread$2({}, data);
    this.cid = "".concat(type, ":").concat(id);
    this.listeners = {}; // perhaps the state variable should be private

    this.state = new ChannelState(this);
    this.initialized = false;
    this.lastTypingEvent = null;
    this.isTyping = false;
    this.disconnected = false;
  }
  /**
   * getClient - Get the chat client for this channel. If client.disconnect() was called, this function will error
   *
   * @return {StreamChat<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType>}
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_8___default()(Channel, [{
    key: "getClient",
    value: function getClient() {
      if (this.disconnected === true) {
        throw Error("You can't use a channel after client.disconnect() was called");
      }

      return this._client;
    }
    /**
     * getConfig - Get the configs for this channel type
     *
     * @return {Record<string, unknown>}
     */

  }, {
    key: "getConfig",
    value: function getConfig() {
      var client = this.getClient();
      return client.configs[this.type];
    }
    /**
     * sendMessage - Send a message to this channel
     *
     * @param {Message<AttachmentType, MessageType, UserType>} message The Message object
     *
     * @return {Promise<SendMessageAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The Server Response
     */

  }, {
    key: "sendMessage",
    value: function () {
      var _sendMessage = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee2(message) {
        var sendMessageResponse;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.getClient().post(this._channelURL() + '/message', {
                  message: message
                });

              case 2:
                sendMessageResponse = _context2.sent;
                // Reset unreadCount to 0.
                this.state.unreadCount = 0;
                return _context2.abrupt("return", sendMessageResponse);

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function sendMessage(_x) {
        return _sendMessage.apply(this, arguments);
      }

      return sendMessage;
    }()
  }, {
    key: "sendFile",
    value: function sendFile(uri, name, contentType, user) {
      return this.getClient().sendFile("".concat(this._channelURL(), "/file"), uri, name, contentType, user);
    }
  }, {
    key: "sendImage",
    value: function sendImage(uri, name, contentType, user) {
      return this.getClient().sendFile("".concat(this._channelURL(), "/image"), uri, name, contentType, user);
    }
  }, {
    key: "deleteFile",
    value: function deleteFile(url) {
      return this.getClient().delete("".concat(this._channelURL(), "/file"), {
        url: url
      });
    }
  }, {
    key: "deleteImage",
    value: function deleteImage(url) {
      return this.getClient().delete("".concat(this._channelURL(), "/image"), {
        url: url
      });
    }
    /**
     * sendEvent - Send an event on this channel
     *
     * @param {Event<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType>} event for example {type: 'message.read'}
     *
     * @return {Promise<EventAPIResponse<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType>>} The Server Response
     */

  }, {
    key: "sendEvent",
    value: function () {
      var _sendEvent = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee3(event) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this._checkInitialized();

                _context3.next = 3;
                return this.getClient().post(this._channelURL() + '/event', {
                  event: event
                });

              case 3:
                return _context3.abrupt("return", _context3.sent);

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function sendEvent(_x2) {
        return _sendEvent.apply(this, arguments);
      }

      return sendEvent;
    }()
    /**
     * search - Query messages
     *
     * @param {MessageFilters<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType> | string}  query search query or object MongoDB style filters
     * @param {{client_id?: string; connection_id?: string; limit?: number; offset?: number; query?: string; message_filter_conditions?: MessageFilters<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>}} options Option object, {user_id: 'tommaso'}
     *
     * @return {Promise<SearchAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} search messages response
     */

  }, {
    key: "search",
    value: function () {
      var _search = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee4(query) {
        var options,
            payload,
            _args4 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};
                // Return a list of channels
                payload = _objectSpread$2({
                  filter_conditions: {
                    cid: this.cid
                  }
                }, options);

                if (!(typeof query === 'string')) {
                  _context4.next = 6;
                  break;
                }

                payload.query = query;
                _context4.next = 11;
                break;

              case 6:
                if (!(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2___default()(query) === 'object')) {
                  _context4.next = 10;
                  break;
                }

                payload.message_filter_conditions = query;
                _context4.next = 11;
                break;

              case 10:
                throw Error("Invalid type ".concat(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2___default()(query), " for query parameter"));

              case 11:
                _context4.next = 13;
                return this.getClient().wsPromise;

              case 13:
                _context4.next = 15;
                return this.getClient().get(this.getClient().baseURL + '/search', {
                  payload: payload
                });

              case 15:
                return _context4.abrupt("return", _context4.sent);

              case 16:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function search(_x3) {
        return _search.apply(this, arguments);
      }

      return search;
    }()
    /**
     * queryMembers - Query Members
     *
     * @param {UserFilters<UserType>}  filterConditions object MongoDB style filters
     * @param {UserSort<UserType>} [sort] Sort options, for instance [{created_at: -1}].
     * When using multiple fields, make sure you use array of objects to guarantee field order, for instance [{last_active: -1}, {created_at: 1}]
     * @param {{ limit?: number; offset?: number }} [options] Option object, {limit: 10, offset:10}
     *
     * @return {Promise<ChannelMemberAPIResponse<UserType>>} Query Members response
     */

  }, {
    key: "queryMembers",
    value: function () {
      var _queryMembers = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee5(filterConditions) {
        var _this$data;

        var sort,
            options,
            id,
            type,
            members,
            _args5 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                sort = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : [];
                options = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : {};
                type = this.type;

                if (this.id) {
                  id = this.id;
                } else if ((_this$data = this.data) !== null && _this$data !== void 0 && _this$data.members && Array.isArray(this.data.members)) {
                  members = this.data.members;
                } // Return a list of members


                _context5.next = 6;
                return this.getClient().get(this.getClient().baseURL + '/members', {
                  payload: _objectSpread$2({
                    type: type,
                    id: id,
                    members: members,
                    sort: normalizeQuerySort(sort),
                    filter_conditions: filterConditions
                  }, options)
                });

              case 6:
                return _context5.abrupt("return", _context5.sent);

              case 7:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function queryMembers(_x4) {
        return _queryMembers.apply(this, arguments);
      }

      return queryMembers;
    }()
    /**
     * sendReaction - Send a reaction about a message
     *
     * @param {string} messageID the message id
     * @param {Reaction<ReactionType, UserType>} reaction the reaction object for instance {type: 'love'}
     * @param {string} [user_id] the id of the user (used only for server side request) default null
     * @param {boolean} [enforce_unique] set true to overwrite existing reactions if any
     *
     * @return {Promise<ReactionAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The Server Response
     */

  }, {
    key: "sendReaction",
    value: function () {
      var _sendReaction = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee6(messageID, reaction, user_id, enforce_unique) {
        var body;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                if (messageID) {
                  _context6.next = 2;
                  break;
                }

                throw Error("Message id is missing");

              case 2:
                if (!(!reaction || Object.keys(reaction).length === 0)) {
                  _context6.next = 4;
                  break;
                }

                throw Error("Reaction object is missing");

              case 4:
                body = {
                  reaction: reaction,
                  enforce_unique: enforce_unique
                };

                if (user_id != null) {
                  body.reaction = _objectSpread$2(_objectSpread$2({}, reaction), {}, {
                    user: {
                      id: user_id
                    }
                  });
                }

                _context6.next = 8;
                return this.getClient().post(this.getClient().baseURL + "/messages/".concat(messageID, "/reaction"), body);

              case 8:
                return _context6.abrupt("return", _context6.sent);

              case 9:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function sendReaction(_x5, _x6, _x7, _x8) {
        return _sendReaction.apply(this, arguments);
      }

      return sendReaction;
    }()
    /**
     * deleteReaction - Delete a reaction by user and type
     *
     * @param {string} messageID the id of the message from which te remove the reaction
     * @param {string} reactionType the type of reaction that should be removed
     * @param {string} [user_id] the id of the user (used only for server side request) default null
     *
     * @return {Promise<ReactionAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The Server Response
     */

  }, {
    key: "deleteReaction",
    value: function deleteReaction(messageID, reactionType, user_id) {
      this._checkInitialized();

      if (!reactionType || !messageID) {
        throw Error('Deleting a reaction requires specifying both the message and reaction type');
      }

      var url = this.getClient().baseURL + "/messages/".concat(messageID, "/reaction/").concat(reactionType); //provided when server side request

      if (user_id) {
        return this.getClient().delete(url, {
          user_id: user_id
        });
      }

      return this.getClient().delete(url, {});
    }
    /**
     * update - Edit the channel's custom properties
     *
     * @param {ChannelData<ChannelType>} channelData The object to update the custom properties of this channel with
     * @param {Message<AttachmentType, MessageType, UserType>} [updateMessage] Optional message object for channel members notification
     * @return {Promise<UpdateChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "update",
    value: function () {
      var _update = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee7() {
        var channelData,
            updateMessage,
            reserved,
            data,
            _args7 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                channelData = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};
                updateMessage = _args7.length > 1 ? _args7[1] : undefined;
                // Strip out reserved names that will result in API errors.
                reserved = ['config', 'cid', 'created_by', 'id', 'member_count', 'type', 'created_at', 'updated_at', 'last_message_at'];
                reserved.forEach(function (key) {
                  delete channelData[key];
                });
                _context7.next = 6;
                return this.getClient().post(this._channelURL(), {
                  message: updateMessage,
                  data: channelData
                });

              case 6:
                data = _context7.sent;
                this.data = data.channel;
                return _context7.abrupt("return", data);

              case 9:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function update() {
        return _update.apply(this, arguments);
      }

      return update;
    }()
    /**
     * updatePartial - partial update channel properties
     *
     * @param {PartialUpdateChannel<ChannelType>} partial update request
     *
     * @return {Promise<PartialUpdateChannelAPIResponse<ChannelType,CommandType, UserType>>}
     */

  }, {
    key: "updatePartial",
    value: function () {
      var _updatePartial = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee8(update) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.getClient().patch(this._channelURL(), update);

              case 2:
                return _context8.abrupt("return", _context8.sent);

              case 3:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function updatePartial(_x9) {
        return _updatePartial.apply(this, arguments);
      }

      return updatePartial;
    }()
    /**
     * enableSlowMode - enable slow mode
     *
     * @param {number} coolDownInterval the cooldown interval in seconds
     * @return {Promise<UpdateChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "enableSlowMode",
    value: function () {
      var _enableSlowMode = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee9(coolDownInterval) {
        var data;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.getClient().post(this._channelURL(), {
                  cooldown: coolDownInterval
                });

              case 2:
                data = _context9.sent;
                this.data = data.channel;
                return _context9.abrupt("return", data);

              case 5:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function enableSlowMode(_x10) {
        return _enableSlowMode.apply(this, arguments);
      }

      return enableSlowMode;
    }()
    /**
     * disableSlowMode - disable slow mode
     *
     * @return {Promise<UpdateChannelAPIResponse<ChannelType, AttachmentType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "disableSlowMode",
    value: function () {
      var _disableSlowMode = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee10() {
        var data;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.getClient().post(this._channelURL(), {
                  cooldown: 0
                });

              case 2:
                data = _context10.sent;
                this.data = data.channel;
                return _context10.abrupt("return", data);

              case 5:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function disableSlowMode() {
        return _disableSlowMode.apply(this, arguments);
      }

      return disableSlowMode;
    }()
    /**
     * delete - Delete the channel. Messages are permanently removed.
     *
     * @return {Promise<DeleteChannelAPIResponse<ChannelType, CommandType, UserType>>} The server response
     */

  }, {
    key: "delete",
    value: function () {
      var _delete2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee11() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.getClient().delete(this._channelURL(), {});

              case 2:
                return _context11.abrupt("return", _context11.sent);

              case 3:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function _delete() {
        return _delete2.apply(this, arguments);
      }

      return _delete;
    }()
    /**
     * truncate - Removes all messages from the channel
     *
     * @return {Promise<TruncateChannelAPIResponse<ChannelType, CommandType, UserType>>} The server response
     */

  }, {
    key: "truncate",
    value: function () {
      var _truncate = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee12() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return this.getClient().post(this._channelURL() + '/truncate', {});

              case 2:
                return _context12.abrupt("return", _context12.sent);

              case 3:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function truncate() {
        return _truncate.apply(this, arguments);
      }

      return truncate;
    }()
    /**
     * acceptInvite - accept invitation to the channel
     *
     * @param {InviteOptions<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>} [options] The object to update the custom properties of this channel with
     *
     * @return {Promise<UpdateChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "acceptInvite",
    value: function () {
      var _acceptInvite = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee13() {
        var options,
            data,
            _args13 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                options = _args13.length > 0 && _args13[0] !== undefined ? _args13[0] : {};
                _context13.next = 3;
                return this.getClient().post(this._channelURL(), _objectSpread$2({
                  accept_invite: true
                }, options));

              case 3:
                data = _context13.sent;
                this.data = data.channel;
                return _context13.abrupt("return", data);

              case 6:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));

      function acceptInvite() {
        return _acceptInvite.apply(this, arguments);
      }

      return acceptInvite;
    }()
    /**
     * rejectInvite - reject invitation to the channel
     *
     * @param {InviteOptions<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>} [options] The object to update the custom properties of this channel with
     *
     * @return {Promise<UpdateChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "rejectInvite",
    value: function () {
      var _rejectInvite = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee14() {
        var options,
            data,
            _args14 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                options = _args14.length > 0 && _args14[0] !== undefined ? _args14[0] : {};
                _context14.next = 3;
                return this.getClient().post(this._channelURL(), _objectSpread$2({
                  reject_invite: true
                }, options));

              case 3:
                data = _context14.sent;
                this.data = data.channel;
                return _context14.abrupt("return", data);

              case 6:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function rejectInvite() {
        return _rejectInvite.apply(this, arguments);
      }

      return rejectInvite;
    }()
    /**
     * addMembers - add members to the channel
     *
     * @param {string[]} members An array of member identifiers
     * @param {Message<AttachmentType, MessageType, UserType>} [message] Optional message object for channel members notification
     * @return {Promise<UpdateChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "addMembers",
    value: function () {
      var _addMembers = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee15(members, message) {
        var data;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return this.getClient().post(this._channelURL(), {
                  add_members: members,
                  message: message
                });

              case 2:
                data = _context15.sent;
                this.data = data.channel;
                return _context15.abrupt("return", data);

              case 5:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));

      function addMembers(_x11, _x12) {
        return _addMembers.apply(this, arguments);
      }

      return addMembers;
    }()
    /**
     * addModerators - add moderators to the channel
     *
     * @param {string[]} members An array of member identifiers
     * @param {Message<AttachmentType, MessageType, UserType>} [message] Optional message object for channel members notification
     * @return {Promise<UpdateChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "addModerators",
    value: function () {
      var _addModerators = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee16(members, message) {
        var data;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return this.getClient().post(this._channelURL(), {
                  add_moderators: members,
                  message: message
                });

              case 2:
                data = _context16.sent;
                this.data = data.channel;
                return _context16.abrupt("return", data);

              case 5:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this);
      }));

      function addModerators(_x13, _x14) {
        return _addModerators.apply(this, arguments);
      }

      return addModerators;
    }()
    /**
     * inviteMembers - invite members to the channel
     *
     * @param {string[]} members An array of member identifiers
     * @param {Message<AttachmentType, MessageType, UserType>} [message] Optional message object for channel members notification
     * @return {Promise<UpdateChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "inviteMembers",
    value: function () {
      var _inviteMembers = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee17(members, message) {
        var data;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                _context17.next = 2;
                return this.getClient().post(this._channelURL(), {
                  invites: members,
                  message: message
                });

              case 2:
                data = _context17.sent;
                this.data = data.channel;
                return _context17.abrupt("return", data);

              case 5:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));

      function inviteMembers(_x15, _x16) {
        return _inviteMembers.apply(this, arguments);
      }

      return inviteMembers;
    }()
    /**
     * removeMembers - remove members from channel
     *
     * @param {string[]} members An array of member identifiers
     * @param {Message<AttachmentType, MessageType, UserType>} [message] Optional message object for channel members notification
     * @return {Promise<UpdateChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "removeMembers",
    value: function () {
      var _removeMembers = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee18(members, message) {
        var data;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                _context18.next = 2;
                return this.getClient().post(this._channelURL(), {
                  remove_members: members,
                  message: message
                });

              case 2:
                data = _context18.sent;
                this.data = data.channel;
                return _context18.abrupt("return", data);

              case 5:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this);
      }));

      function removeMembers(_x17, _x18) {
        return _removeMembers.apply(this, arguments);
      }

      return removeMembers;
    }()
    /**
     * demoteModerators - remove moderator role from channel members
     *
     * @param {string[]} members An array of member identifiers
     * @param {Message<AttachmentType, MessageType, UserType>} [message] Optional message object for channel members notification
     * @return {Promise<UpdateChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "demoteModerators",
    value: function () {
      var _demoteModerators = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee19(members, message) {
        var data;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return this.getClient().post(this._channelURL(), {
                  demote_moderators: members,
                  message: message
                });

              case 2:
                data = _context19.sent;
                this.data = data.channel;
                return _context19.abrupt("return", data);

              case 5:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));

      function demoteModerators(_x19, _x20) {
        return _demoteModerators.apply(this, arguments);
      }

      return demoteModerators;
    }()
    /**
     * mute - mutes the current channel
     * @param {{ user_id?: string, expiration?: string }} opts expiration in minutes or user_id
     * @return {Promise<MuteChannelAPIResponse<ChannelType, CommandType, UserType>>} The server response
     *
     * example with expiration:
     * await channel.mute({expiration: moment.duration(2, 'weeks')});
     *
     * example server side:
     * await channel.mute({user_id: userId});
     *
     */

  }, {
    key: "mute",
    value: function () {
      var _mute = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee20() {
        var opts,
            _args20 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                opts = _args20.length > 0 && _args20[0] !== undefined ? _args20[0] : {};
                _context20.next = 3;
                return this.getClient().post(this.getClient().baseURL + '/moderation/mute/channel', _objectSpread$2({
                  channel_cid: this.cid
                }, opts));

              case 3:
                return _context20.abrupt("return", _context20.sent);

              case 4:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20, this);
      }));

      function mute() {
        return _mute.apply(this, arguments);
      }

      return mute;
    }()
    /**
     * unmute - mutes the current channel
     * @param {{ user_id?: string}} opts user_id
     * @return {Promise<APIResponse>} The server response
     *
     * example server side:
     * await channel.unmute({user_id: userId});
     */

  }, {
    key: "unmute",
    value: function () {
      var _unmute = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee21() {
        var opts,
            _args21 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                opts = _args21.length > 0 && _args21[0] !== undefined ? _args21[0] : {};
                _context21.next = 3;
                return this.getClient().post(this.getClient().baseURL + '/moderation/unmute/channel', _objectSpread$2({
                  channel_cid: this.cid
                }, opts));

              case 3:
                return _context21.abrupt("return", _context21.sent);

              case 4:
              case "end":
                return _context21.stop();
            }
          }
        }, _callee21, this);
      }));

      function unmute() {
        return _unmute.apply(this, arguments);
      }

      return unmute;
    }()
    /**
     * muteStatus - returns the mute status for the current channel
     * @return {{ muted: boolean; createdAt?: string | null; expiresAt?: string | null }} { muted: true | false, createdAt: Date | null, expiresAt: Date | null}
     */

  }, {
    key: "muteStatus",
    value: function muteStatus() {
      this._checkInitialized();

      return this.getClient()._muteStatus(this.cid);
    }
  }, {
    key: "sendAction",
    value: function sendAction(messageID, formData) {
      this._checkInitialized();

      if (!messageID) {
        throw Error("Message id is missing");
      }

      return this.getClient().post(this.getClient().baseURL + "/messages/".concat(messageID, "/action"), {
        message_id: messageID,
        form_data: formData,
        id: this.id,
        type: this.type
      });
    }
    /**
     * keystroke - First of the typing.start and typing.stop events based on the users keystrokes.
     * Call this on every keystroke
     * @see {@link https://getstream.io/chat/docs/typing_indicators/?language=js|Docs}
     * @param {string} [parent_id] set this field to `message.id` to indicate that typing event is happening in a thread
     */

  }, {
    key: "keystroke",
    value: function () {
      var _keystroke = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee22(parent_id) {
        var _this$getConfig;

        var now, diff;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                if ((_this$getConfig = this.getConfig()) !== null && _this$getConfig !== void 0 && _this$getConfig.typing_events) {
                  _context22.next = 2;
                  break;
                }

                return _context22.abrupt("return");

              case 2:
                now = new Date();
                diff = this.lastTypingEvent && now.getTime() - this.lastTypingEvent.getTime();
                this.lastKeyStroke = now;
                this.isTyping = true; // send a typing.start every 2 seconds

                if (!(diff === null || diff > 2000)) {
                  _context22.next = 10;
                  break;
                }

                this.lastTypingEvent = new Date();
                _context22.next = 10;
                return this.sendEvent({
                  type: 'typing.start',
                  parent_id: parent_id
                });

              case 10:
              case "end":
                return _context22.stop();
            }
          }
        }, _callee22, this);
      }));

      function keystroke(_x21) {
        return _keystroke.apply(this, arguments);
      }

      return keystroke;
    }()
    /**
     * stopTyping - Sets last typing to null and sends the typing.stop event
     * @see {@link https://getstream.io/chat/docs/typing_indicators/?language=js|Docs}
     * @param {string} [parent_id] set this field to `message.id` to indicate that typing event is happening in a thread
     */

  }, {
    key: "stopTyping",
    value: function () {
      var _stopTyping = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee23(parent_id) {
        var _this$getConfig2;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee23$(_context23) {
          while (1) {
            switch (_context23.prev = _context23.next) {
              case 0:
                if ((_this$getConfig2 = this.getConfig()) !== null && _this$getConfig2 !== void 0 && _this$getConfig2.typing_events) {
                  _context23.next = 2;
                  break;
                }

                return _context23.abrupt("return");

              case 2:
                this.lastTypingEvent = null;
                this.isTyping = false;
                _context23.next = 6;
                return this.sendEvent({
                  type: 'typing.stop',
                  parent_id: parent_id
                });

              case 6:
              case "end":
                return _context23.stop();
            }
          }
        }, _callee23, this);
      }));

      function stopTyping(_x22) {
        return _stopTyping.apply(this, arguments);
      }

      return stopTyping;
    }()
    /**
     * lastMessage - return the last message, takes into account that last few messages might not be perfectly sorted
     *
     * @return {Immutable.Immutable<ReturnType<ChannelState<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType>['messageToImmutable']>> | undefined} Description
     */

  }, {
    key: "lastMessage",
    value: function lastMessage() {
      // get last 5 messages, sort, return the latest
      // get a slice of the last 5
      var min = this.state.messages.length - 5;

      if (min < 0) {
        min = 0;
      }

      var max = this.state.messages.length + 1;
      var messageSlice = this.state.messages.slice(min, max).asMutable(); // sort by pk desc

      messageSlice.sort(function (a, b) {
        return b.created_at.getTime() - a.created_at.getTime();
      });
      var lastMessage;

      if (messageSlice.length > 0) {
        lastMessage = messageSlice[0];
      }

      return lastMessage;
    }
    /**
     * markRead - Send the mark read event for this user, only works if the `read_events` setting is enabled
     *
     * @param {MarkReadOptions<UserType>} data
     * @return {Promise<EventAPIResponse<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType> | null>} Description
     */

  }, {
    key: "markRead",
    value: function () {
      var _markRead = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee24() {
        var _this$getConfig3;

        var data,
            _args24 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee24$(_context24) {
          while (1) {
            switch (_context24.prev = _context24.next) {
              case 0:
                data = _args24.length > 0 && _args24[0] !== undefined ? _args24[0] : {};

                this._checkInitialized();

                if ((_this$getConfig3 = this.getConfig()) !== null && _this$getConfig3 !== void 0 && _this$getConfig3.read_events) {
                  _context24.next = 4;
                  break;
                }

                return _context24.abrupt("return", Promise.resolve(null));

              case 4:
                _context24.next = 6;
                return this.getClient().post(this._channelURL() + '/read', _objectSpread$2({}, data));

              case 6:
                return _context24.abrupt("return", _context24.sent);

              case 7:
              case "end":
                return _context24.stop();
            }
          }
        }, _callee24, this);
      }));

      function markRead() {
        return _markRead.apply(this, arguments);
      }

      return markRead;
    }()
    /**
     * clean - Cleans the channel state and fires stop typing if needed
     */

  }, {
    key: "clean",
    value: function clean() {
      if (this.lastKeyStroke) {
        var now = new Date();
        var diff = now.getTime() - this.lastKeyStroke.getTime();

        if (diff > 1000 && this.isTyping) {
          logChatPromiseExecution(this.stopTyping(), 'stop typing event');
        }
      }

      this.state.clean();
    }
    /**
     * watch - Loads the initial channel state and watches for changes
     *
     * @param {ChannelQueryOptions<ChannelType, CommandType, UserType>} options additional options for the query endpoint
     *
     * @return {Promise<ChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The server response
     */

  }, {
    key: "watch",
    value: function () {
      var _watch = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee25(options) {
        var defaultOptions, combined, state;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee25$(_context25) {
          while (1) {
            switch (_context25.prev = _context25.next) {
              case 0:
                defaultOptions = {
                  state: true,
                  watch: true,
                  presence: false
                }; // Make sure we wait for the connect promise if there is a pending one

                _context25.next = 3;
                return this.getClient().wsPromise;

              case 3:
                if (!this.getClient()._hasConnectionID()) {
                  defaultOptions.watch = false;
                }

                combined = _objectSpread$2(_objectSpread$2({}, defaultOptions), options);
                _context25.next = 7;
                return this.query(combined);

              case 7:
                state = _context25.sent;
                this.initialized = true;
                this.data = state.channel;

                this._client.logger('info', "channel:watch() - started watching channel ".concat(this.cid), {
                  tags: ['channel'],
                  channel: this
                });

                return _context25.abrupt("return", state);

              case 12:
              case "end":
                return _context25.stop();
            }
          }
        }, _callee25, this);
      }));

      function watch(_x23) {
        return _watch.apply(this, arguments);
      }

      return watch;
    }()
    /**
     * stopWatching - Stops watching the channel
     *
     * @return {Promise<APIResponse>} The server response
     */

  }, {
    key: "stopWatching",
    value: function () {
      var _stopWatching = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee26() {
        var response;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee26$(_context26) {
          while (1) {
            switch (_context26.prev = _context26.next) {
              case 0:
                _context26.next = 2;
                return this.getClient().post(this._channelURL() + '/stop-watching', {});

              case 2:
                response = _context26.sent;

                this._client.logger('info', "channel:watch() - stopped watching channel ".concat(this.cid), {
                  tags: ['channel'],
                  channel: this
                });

                return _context26.abrupt("return", response);

              case 5:
              case "end":
                return _context26.stop();
            }
          }
        }, _callee26, this);
      }));

      function stopWatching() {
        return _stopWatching.apply(this, arguments);
      }

      return stopWatching;
    }()
    /**
     * getReplies - List the message replies for a parent message
     *
     * @param {string} parent_id The message parent id, ie the top of the thread
     * @param {PaginationOptions & { user?: UserResponse<UserType>; user_id?: string }} options Pagination params, ie {limit:10, id_lte: 10}
     *
     * @return {Promise<GetRepliesAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} A response with a list of messages
     */

  }, {
    key: "getReplies",
    value: function () {
      var _getReplies = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee27(parent_id, options) {
        var data;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee27$(_context27) {
          while (1) {
            switch (_context27.prev = _context27.next) {
              case 0:
                _context27.next = 2;
                return this.getClient().get(this.getClient().baseURL + "/messages/".concat(parent_id, "/replies"), _objectSpread$2({}, options));

              case 2:
                data = _context27.sent;

                // add any messages to our thread state
                if (data.messages) {
                  this.state.addMessagesSorted(data.messages);
                }

                return _context27.abrupt("return", data);

              case 5:
              case "end":
                return _context27.stop();
            }
          }
        }, _callee27, this);
      }));

      function getReplies(_x24, _x25) {
        return _getReplies.apply(this, arguments);
      }

      return getReplies;
    }()
    /**
     * getReactions - List the reactions, supports pagination
     *
     * @param {string} message_id The message id
     * @param {{ limit?: number; offset?: number }} options The pagination options
     *
     * @return {Promise<GetReactionsAPIResponse<ReactionType, UserType>>} Server response
     */

  }, {
    key: "getReactions",
    value: function getReactions(message_id, options) {
      return this.getClient().get(this.getClient().baseURL + "/messages/".concat(message_id, "/reactions"), _objectSpread$2({}, options));
    }
    /**
     * getMessagesById - Retrieves a list of messages by ID
     *
     * @param {string[]} messageIds The ids of the messages to retrieve from this channel
     *
     * @return {Promise<GetMultipleMessagesAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} Server response
     */

  }, {
    key: "getMessagesById",
    value: function getMessagesById(messageIds) {
      return this.getClient().get(this._channelURL() + '/messages', {
        ids: messageIds.join(',')
      });
    }
    /**
     * lastRead - returns the last time the user marked the channel as read if the user never marked the channel as read, this will return null
     * @return {Immutable.ImmutableDate | null | undefined}
     */

  }, {
    key: "lastRead",
    value: function lastRead() {
      this._checkInitialized();

      var _this$getClient = this.getClient(),
          userID = _this$getClient.userID;

      if (userID) {
        return this.state.read[userID] ? this.state.read[userID].last_read : null;
      }
    }
  }, {
    key: "_countMessageAsUnread",
    value: function _countMessageAsUnread(message) {
      var _message$user, _message$user2;

      if (message.shadowed) return false;
      if (message.silent) return false;
      if (((_message$user = message.user) === null || _message$user === void 0 ? void 0 : _message$user.id) === this.getClient().userID) return false;
      if ((_message$user2 = message.user) !== null && _message$user2 !== void 0 && _message$user2.id && this.getClient().userMuteStatus(message.user.id)) return false;
      return true;
    }
    /**
     * countUnread - Count of unread messages
     *
     * @param {Date | Immutable.ImmutableDate | null} [lastRead] lastRead the time that the user read a message, defaults to current user's read state
     *
     * @return {number} Unread count
     */

  }, {
    key: "countUnread",
    value: function countUnread(lastRead) {
      if (!lastRead) return this.state.unreadCount;
      var count = 0;

      for (var i = 0; i < this.state.messages.length; i += 1) {
        var message = this.state.messages[i];

        if (message.created_at > lastRead && this._countMessageAsUnread(message)) {
          count++;
        }
      }

      return count;
    }
    /**
     * countUnread - Count the number of unread messages mentioning the current user
     *
     * @return {number} Unread mentions count
     */

  }, {
    key: "countUnreadMentions",
    value: function countUnreadMentions() {
      var lastRead = this.lastRead();
      var userID = this.getClient().userID;
      var count = 0;

      for (var i = 0; i < this.state.messages.length; i += 1) {
        var _message$mentioned_us;

        var message = this.state.messages[i];

        if (this._countMessageAsUnread(message) && (!lastRead || message.created_at > lastRead) && (_message$mentioned_us = message.mentioned_users) !== null && _message$mentioned_us !== void 0 && _message$mentioned_us.find(function (u) {
          return u.id === userID;
        })) {
          count++;
        }
      }

      return count;
    }
    /**
     * create - Creates a new channel
     *
     * @return {Promise<ChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} The Server Response
     */

  }, {
    key: "query",

    /**
     * query - Query the API, get messages, members or other channel fields
     *
     * @param {ChannelQueryOptions<ChannelType, CommandType, UserType>} options The query options
     *
     * @return {Promise<ChannelAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} Returns a query response
     */
    value: function () {
      var _query = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee28(options) {
        var queryURL, state, _state$members$map, membersStr, tempChannelCid;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee28$(_context28) {
          while (1) {
            switch (_context28.prev = _context28.next) {
              case 0:
                _context28.next = 2;
                return this.getClient().wsPromise;

              case 2:
                queryURL = "".concat(this.getClient().baseURL, "/channels/").concat(this.type);

                if (this.id) {
                  queryURL += "/".concat(this.id);
                }

                _context28.next = 6;
                return this.getClient().post(queryURL + '/query', _objectSpread$2({
                  data: this._data,
                  state: true
                }, options));

              case 6:
                state = _context28.sent;

                // update the channel id if it was missing
                if (!this.id) {
                  this.id = state.channel.id;
                  this.cid = state.channel.cid; // set the channel as active...

                  membersStr = (_state$members$map = state.members.map(function (m) {
                    return m.user_id;
                  })) === null || _state$members$map === void 0 ? void 0 : _state$members$map.sort().join(',');
                  tempChannelCid = "".concat(this.type, ":!members-").concat(membersStr);

                  if (tempChannelCid in this.getClient().activeChannels) {
                    // This gets set in `client.channel()` function, when channel is created
                    // using members, not id.
                    delete this.getClient().activeChannels[tempChannelCid];
                  }

                  if (!(this.cid in this.getClient().activeChannels)) {
                    this.getClient().activeChannels[this.cid] = this;
                  }
                }

                this.getClient()._addChannelConfig(state); // add any messages to our channel state


                this._initializeState(state);

                return _context28.abrupt("return", state);

              case 11:
              case "end":
                return _context28.stop();
            }
          }
        }, _callee28, this);
      }));

      function query(_x26) {
        return _query.apply(this, arguments);
      }

      return query;
    }()
    /**
     * banUser - Bans a user from a channel
     *
     * @param {string} targetUserID
     * @param {BanUserOptions<UserType>} options
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "banUser",
    value: function () {
      var _banUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee29(targetUserID, options) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee29$(_context29) {
          while (1) {
            switch (_context29.prev = _context29.next) {
              case 0:
                this._checkInitialized();

                _context29.next = 3;
                return this.getClient().banUser(targetUserID, _objectSpread$2(_objectSpread$2({}, options), {}, {
                  type: this.type,
                  id: this.id
                }));

              case 3:
                return _context29.abrupt("return", _context29.sent);

              case 4:
              case "end":
                return _context29.stop();
            }
          }
        }, _callee29, this);
      }));

      function banUser(_x27, _x28) {
        return _banUser.apply(this, arguments);
      }

      return banUser;
    }()
    /**
     * hides the channel from queryChannels for the user until a message is added
     * If clearHistory is set to true - all messages will be removed for the user
     *
     * @param {string | null} userId
     * @param {boolean} clearHistory
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "hide",
    value: function () {
      var _hide = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee30() {
        var userId,
            clearHistory,
            _args30 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee30$(_context30) {
          while (1) {
            switch (_context30.prev = _context30.next) {
              case 0:
                userId = _args30.length > 0 && _args30[0] !== undefined ? _args30[0] : null;
                clearHistory = _args30.length > 1 && _args30[1] !== undefined ? _args30[1] : false;

                this._checkInitialized();

                _context30.next = 5;
                return this.getClient().post("".concat(this._channelURL(), "/hide"), {
                  user_id: userId,
                  clear_history: clearHistory
                });

              case 5:
                return _context30.abrupt("return", _context30.sent);

              case 6:
              case "end":
                return _context30.stop();
            }
          }
        }, _callee30, this);
      }));

      function hide() {
        return _hide.apply(this, arguments);
      }

      return hide;
    }()
    /**
     * removes the hidden status for a channel
     *
     * @param {string | null} userId
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "show",
    value: function () {
      var _show = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee31() {
        var userId,
            _args31 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee31$(_context31) {
          while (1) {
            switch (_context31.prev = _context31.next) {
              case 0:
                userId = _args31.length > 0 && _args31[0] !== undefined ? _args31[0] : null;

                this._checkInitialized();

                _context31.next = 4;
                return this.getClient().post("".concat(this._channelURL(), "/show"), {
                  user_id: userId
                });

              case 4:
                return _context31.abrupt("return", _context31.sent);

              case 5:
              case "end":
                return _context31.stop();
            }
          }
        }, _callee31, this);
      }));

      function show() {
        return _show.apply(this, arguments);
      }

      return show;
    }()
    /**
     * unbanUser - Removes the bans for a user on a channel
     *
     * @param {string} targetUserID
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "unbanUser",
    value: function () {
      var _unbanUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee32(targetUserID) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee32$(_context32) {
          while (1) {
            switch (_context32.prev = _context32.next) {
              case 0:
                this._checkInitialized();

                _context32.next = 3;
                return this.getClient().unbanUser(targetUserID, {
                  type: this.type,
                  id: this.id
                });

              case 3:
                return _context32.abrupt("return", _context32.sent);

              case 4:
              case "end":
                return _context32.stop();
            }
          }
        }, _callee32, this);
      }));

      function unbanUser(_x29) {
        return _unbanUser.apply(this, arguments);
      }

      return unbanUser;
    }()
    /**
     * shadowBan - Shadow bans a user from a channel
     *
     * @param {string} targetUserID
     * @param {BanUserOptions<UserType>} options
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "shadowBan",
    value: function () {
      var _shadowBan = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee33(targetUserID, options) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee33$(_context33) {
          while (1) {
            switch (_context33.prev = _context33.next) {
              case 0:
                this._checkInitialized();

                _context33.next = 3;
                return this.getClient().shadowBan(targetUserID, _objectSpread$2(_objectSpread$2({}, options), {}, {
                  type: this.type,
                  id: this.id
                }));

              case 3:
                return _context33.abrupt("return", _context33.sent);

              case 4:
              case "end":
                return _context33.stop();
            }
          }
        }, _callee33, this);
      }));

      function shadowBan(_x30, _x31) {
        return _shadowBan.apply(this, arguments);
      }

      return shadowBan;
    }()
    /**
     * removeShadowBan - Removes the shadow ban for a user on a channel
     *
     * @param {string} targetUserID
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "removeShadowBan",
    value: function () {
      var _removeShadowBan = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee34(targetUserID) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee34$(_context34) {
          while (1) {
            switch (_context34.prev = _context34.next) {
              case 0:
                this._checkInitialized();

                _context34.next = 3;
                return this.getClient().removeShadowBan(targetUserID, {
                  type: this.type,
                  id: this.id
                });

              case 3:
                return _context34.abrupt("return", _context34.sent);

              case 4:
              case "end":
                return _context34.stop();
            }
          }
        }, _callee34, this);
      }));

      function removeShadowBan(_x32) {
        return _removeShadowBan.apply(this, arguments);
      }

      return removeShadowBan;
    }()
    /**
     * on - Listen to events on this channel.
     *
     * channel.on('message.new', event => {console.log("my new message", event, channel.state.messages)})
     * or
     * channel.on(event => {console.log(event.type)})
     *
     * @param {EventHandler<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType> | EventTypes} callbackOrString  The event type to listen for (optional)
     * @param {EventHandler<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType>} [callbackOrNothing] The callback to call
     */

  }, {
    key: "on",
    value: function on(callbackOrString, callbackOrNothing) {
      var key = callbackOrNothing ? callbackOrString : 'all';
      var valid = isValidEventType(key);

      if (!valid) {
        throw Error("Invalid event type ".concat(key));
      }

      var callback = callbackOrNothing ? callbackOrNothing : callbackOrString;

      if (!(key in this.listeners)) {
        this.listeners[key] = [];
      }

      this._client.logger('info', "Attaching listener for ".concat(key, " event on channel ").concat(this.cid), {
        tags: ['event', 'channel'],
        channel: this
      });

      this.listeners[key].push(callback);
    }
    /**
     * off - Remove the event handler
     *
     */

  }, {
    key: "off",
    value: function off(callbackOrString, callbackOrNothing) {
      var key = callbackOrNothing ? callbackOrString : 'all';
      var valid = isValidEventType(key);

      if (!valid) {
        throw Error("Invalid event type ".concat(key));
      }

      var callback = callbackOrNothing ? callbackOrNothing : callbackOrString;

      if (!(key in this.listeners)) {
        this.listeners[key] = [];
      }

      this._client.logger('info', "Removing listener for ".concat(key, " event from channel ").concat(this.cid), {
        tags: ['event', 'channel'],
        channel: this
      });

      this.listeners[key] = this.listeners[key].filter(function (value) {
        return value !== callback;
      });
    } // eslint-disable-next-line sonarjs/cognitive-complexity

  }, {
    key: "_handleChannelEvent",
    value: function _handleChannelEvent(event) {
      var _event$user, _event$user2, _event$user3, _event$user5, _event$user6, _event$member, _event$user9;

      var channel = this;

      this._client.logger('info', "channel:_handleChannelEvent - Received event of type { ".concat(event.type, " } on ").concat(this.cid), {
        tags: ['event', 'channel'],
        channel: this
      });

      var s = channel.state;

      switch (event.type) {
        case 'typing.start':
          if ((_event$user = event.user) !== null && _event$user !== void 0 && _event$user.id) {
            s.typing = s.typing.set(event.user.id, seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()(event));
          }

          break;

        case 'typing.stop':
          if ((_event$user2 = event.user) !== null && _event$user2 !== void 0 && _event$user2.id) {
            s.typing = s.typing.without(event.user.id);
          }

          break;

        case 'message.read':
          if ((_event$user3 = event.user) !== null && _event$user3 !== void 0 && _event$user3.id) {
            var _event$user4, _this$getClient$user;

            s.read = s.read.set(event.user.id, seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()({
              user: _objectSpread$2({}, event.user),
              last_read: event.received_at
            }));

            if (((_event$user4 = event.user) === null || _event$user4 === void 0 ? void 0 : _event$user4.id) === ((_this$getClient$user = this.getClient().user) === null || _this$getClient$user === void 0 ? void 0 : _this$getClient$user.id)) {
              s.unreadCount = 0;
            }
          }

          break;

        case 'user.watching.start':
        case 'user.updated':
          if ((_event$user5 = event.user) !== null && _event$user5 !== void 0 && _event$user5.id) {
            s.watchers = s.watchers.set(event.user.id, seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()(event.user));
          }

          break;

        case 'user.watching.stop':
          if ((_event$user6 = event.user) !== null && _event$user6 !== void 0 && _event$user6.id) {
            s.watchers = s.watchers.without(event.user.id);
          }

          break;

        case 'message.deleted':
          if (event.message) {
            if (event.hard_delete) s.removeMessage(event.message);else s.addMessageSorted(event.message);

            if (event.message.pinned) {
              s.removePinnedMessage(event.message);
            }
          }

          break;

        case 'message.new':
          if (event.message) {
            var _event$user7, _this$getClient$user2, _event$user8;

            /* if message belongs to current user, always assume timestamp is changed to filter it out and add again to avoid duplication */
            var ownMessage = ((_event$user7 = event.user) === null || _event$user7 === void 0 ? void 0 : _event$user7.id) === ((_this$getClient$user2 = this.getClient().user) === null || _this$getClient$user2 === void 0 ? void 0 : _this$getClient$user2.id);
            var isThreadMessage = event.message.parent_id && !event.message.show_in_channel;

            if (this.state.isUpToDate || isThreadMessage) {
              s.addMessageSorted(event.message, ownMessage);
            }

            if (event.message.pinned) {
              s.addPinnedMessage(event.message);
            }

            if (ownMessage && (_event$user8 = event.user) !== null && _event$user8 !== void 0 && _event$user8.id) {
              s.unreadCount = 0;
              s.read = s.read.set(event.user.id, seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()({
                user: _objectSpread$2({}, event.user),
                last_read: new Date(event.created_at)
              }));
            } else if (this._countMessageAsUnread(event.message)) {
              s.unreadCount = s.unreadCount + 1;
            }
          }

          break;

        case 'message.updated':
          if (event.message) {
            s.addMessageSorted(event.message);

            if (event.message.pinned) {
              s.addPinnedMessage(event.message);
            } else {
              s.removePinnedMessage(event.message);
            }
          }

          break;

        case 'channel.truncated':
          s.clearMessages();
          s.unreadCount = 0;
          break;

        case 'member.added':
        case 'member.updated':
          if ((_event$member = event.member) !== null && _event$member !== void 0 && _event$member.user_id) {
            var _event$member2;

            s.members = s.members.set((_event$member2 = event.member) === null || _event$member2 === void 0 ? void 0 : _event$member2.user_id, seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()(event.member));
          }

          break;

        case 'member.removed':
          if ((_event$user9 = event.user) !== null && _event$user9 !== void 0 && _event$user9.id) {
            s.members = s.members.without(event.user.id);
          }

          break;

        case 'channel.updated':
          if (event.channel) {
            channel.data = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()(event.channel);
          }

          break;

        case 'reaction.new':
          if (event.reaction) {
            s.addReaction(event.reaction, event.message);
          }

          break;

        case 'reaction.deleted':
          if (event.reaction) {
            s.removeReaction(event.reaction, event.message);
          }

          break;

        case 'reaction.updated':
          if (event.reaction) {
            // assuming reaction.updated is only called if enforce_unique is true
            s.addReaction(event.reaction, event.message, true);
          }

          break;

        case 'channel.hidden':
          if (event.clear_history) {
            s.clearMessages();
          }

          break;
      } // any event can send over the online count


      if (event.watcher_count !== undefined) {
        channel.state.watcher_count = event.watcher_count;
      }
    }
  }, {
    key: "_checkInitialized",
    value: function _checkInitialized() {
      if (!this.initialized && !this.getClient()._isUsingServerAuth()) {
        throw Error("Channel ".concat(this.cid, " hasn't been initialized yet. Make sure to call .watch() and wait for it to resolve"));
      }
    } // eslint-disable-next-line sonarjs/cognitive-complexity

  }, {
    key: "_initializeState",
    value: function _initializeState(state) {
      // add the Users
      if (state.members) {
        var _iterator = _createForOfIteratorHelper$1(state.members),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var m = _step.value;

            if (m.user) {
              this.getClient().state.updateUserReference(m.user, this.cid);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }

      this.state.membership = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()(state.membership ? state.membership : {}); // TODO: CHECK WATCHERS TYPE!!!!!!
      // if (state.watchers) {
      //   for (const watcher of state.watchers) {
      //     if (watcher) {
      //       this.getClient().state.updateUserReference(watcher, this.cid);
      //     }
      //   }
      // }
      // immutable list of maps

      var messages = state.messages || [];

      if (!this.state.messages) {
        this.state.messages = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()([]);
      }

      this.state.addMessagesSorted(messages, false, true);

      if (!this.state.pinnedMessages) {
        this.state.pinnedMessages = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()([]);
      }

      this.state.addPinnedMessages(state.pinned_messages || []);
      this.state.watcher_count = state.watcher_count ? state.watcher_count : 0; // convert the arrays into objects for easier syncing...

      if (state.watchers) {
        var _iterator2 = _createForOfIteratorHelper$1(state.watchers),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var watcher = _step2.value;

            if (watcher) {
              this.getClient().state.updateUserReference(watcher, this.cid);
              this.state.watchers = this.state.watchers.set(watcher.id, watcher);
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      } // initialize read state to last message or current time if the channel is empty
      // if the user is a member, this value will be overwritten later on otherwise this ensures
      // that everything up to this point is not marked as unread


      if (this.getClient().userID != null) {
        var last_read = this.state.last_message_at != null ? this.state.last_message_at : new Date();

        var _this$getClient2 = this.getClient(),
            user = _this$getClient2.user;

        if (user) {
          this.state.read = this.state.read.set(user.id, {
            user: this.getClient().user,
            last_read: last_read
          });
        }
      } // apply read state if part of the state


      if (state.read) {
        var _iterator3 = _createForOfIteratorHelper$1(state.read),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var _this$getClient$user3;

            var read = _step3.value;

            var parsedRead = _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default()(_objectSpread$2({}, read));

            parsedRead.last_read = new Date(read.last_read);
            this.state.read = this.state.read.set(read.user.id, parsedRead);

            if (read.user.id === ((_this$getClient$user3 = this.getClient().user) === null || _this$getClient$user3 === void 0 ? void 0 : _this$getClient$user3.id)) {
              this.state.unreadCount = parsedRead.unread_messages;
            }
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }

      if (state.members) {
        var _iterator4 = _createForOfIteratorHelper$1(state.members),
            _step4;

        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
            var _m = _step4.value;

            if (_m.user) {
              this.state.members = this.state.members.set(_m.user.id, _m);
            }
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
      }
    }
  }, {
    key: "_disconnect",
    value: function _disconnect() {
      this._client.logger('info', "channel:disconnect() - Disconnecting the channel ".concat(this.cid), {
        tags: ['connection', 'channel'],
        channel: this
      });

      this.disconnected = true;
    }
  }]);

  return Channel;
}();

function _createForOfIteratorHelper$2(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray$2(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen); }

function _arrayLikeToArray$2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * ClientState - A container class for the client state.
 */
var ClientState = /*#__PURE__*/function () {
  function ClientState() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_7___default()(this, ClientState);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "users", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "userChannelReferences", void 0);

    // show the status for a certain user...
    // ie online, offline etc
    this.users = seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()({}); // store which channels contain references to the specified user...

    this.userChannelReferences = {};
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_8___default()(ClientState, [{
    key: "updateUsers",
    value: function updateUsers(users) {
      var _iterator = _createForOfIteratorHelper$2(users),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var user = _step.value;
          this.updateUser(user);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "updateUser",
    value: function updateUser(user) {
      if (user != null) {
        this.users = this.users.set(user.id, seamless_immutable__WEBPACK_IMPORTED_MODULE_11___default()(user));
      }
    }
  }, {
    key: "updateUserReference",
    value: function updateUserReference(user, channelID) {
      if (user == null) {
        return;
      }

      this.updateUser(user);

      if (!this.userChannelReferences[user.id]) {
        this.userChannelReferences[user.id] = {};
      }

      this.userChannelReferences[user.id][channelID] = true;
    }
  }]);

  return ClientState;
}();

// Type guards to check WebSocket error type
var isCloseEvent = function isCloseEvent(res) {
  return res.code !== undefined;
};

var isErrorEvent = function isErrorEvent(res) {
  return res.error !== undefined;
};

/**
 * StableWSConnection - A WS connection that reconnects upon failure.
 * - the browser will sometimes report that you're online or offline
 * - the WS connection can break and fail (there is a 30s health check)
 * - sometimes your WS connection will seem to work while the user is in fact offline
 * - to speed up online/offline detection you can use the window.addEventListener('offline');
 *
 * There are 4 ways in which a connection can become unhealthy:
 * - websocket.onerror is called
 * - websocket.onclose is called
 * - the health check fails and no event is received for ~40 seconds
 * - the browser indicates the connection is now offline
 *
 * There are 2 assumptions we make about the server:
 * - state can be recovered by querying the channel again
 * - if the servers fails to publish a message to the client, the WS connection is destroyed
 */
var StableWSConnection = /*#__PURE__*/function () {
  function StableWSConnection(_ref) {
    var _this = this;

    var apiKey = _ref.apiKey,
        authType = _ref.authType,
        clientID = _ref.clientID,
        eventCallback = _ref.eventCallback,
        logger = _ref.logger,
        messageCallback = _ref.messageCallback,
        recoverCallback = _ref.recoverCallback,
        tokenManager = _ref.tokenManager,
        user = _ref.user,
        userAgent = _ref.userAgent,
        userID = _ref.userID,
        wsBaseURL = _ref.wsBaseURL;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_7___default()(this, StableWSConnection);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "apiKey", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "authType", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "clientID", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "eventCallback", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "logger", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "messageCallback", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "recoverCallback", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "tokenManager", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "user", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "userAgent", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "userID", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "wsBaseURL", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "connectionID", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "connectionOpen", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "consecutiveFailures", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "healthCheckInterval", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "healthCheckIntervalRef", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "isConnecting", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "isHealthy", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "isResolved", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "lastEvent", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "monitorInterval", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "monitorIntervalRef", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "rejectPromise", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "resolvePromise", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "totalFailures", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "ws", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "wsID", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_buildUrl", function () {
      var params = {
        user_id: _this.user.id,
        user_details: _this.user,
        user_token: _this.tokenManager.getToken(),
        server_determines_connection_id: true
      };
      var qs = encodeURIComponent(JSON.stringify(params));

      var token = _this.tokenManager.getToken();

      return "".concat(_this.wsBaseURL, "/connect?json=").concat(qs, "&api_key=").concat(_this.apiKey, "&authorization=").concat(token, "&stream-auth-type=").concat(_this.authType, "&x-stream-client=").concat(_this.userAgent);
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "onlineStatusChanged", function (event) {
      if (event.type === 'offline') {
        // mark the connection as down
        _this.logger('info', 'connection:onlineStatusChanged() - Status changing to offline', {
          tags: ['connection']
        });

        _this._setHealth(false);
      } else if (event.type === 'online') {
        // retry right now...
        // We check this.isHealthy, not sure if it's always
        // smart to create a new WS connection if the old one is still up and running.
        // it's possible we didn't miss any messages, so this process is just expensive and not needed.
        _this.logger('info', "connection:onlineStatusChanged() - Status changing to online. isHealthy: ".concat(_this.isHealthy), {
          tags: ['connection']
        });

        if (!_this.isHealthy) {
          _this._reconnect({
            interval: 10
          });
        }
      }
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "onopen", function (wsID) {
      if (_this.wsID !== wsID) return;

      _this.logger('info', 'connection:onopen() - onopen callback', {
        tags: ['connection'],
        wsID: wsID
      }); // set healthy..


      _this._setHealth(true);
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "onmessage", function (wsID, event) {
      if (_this.wsID !== wsID) return; // we wait till the first message before we consider the connection open..
      // the reason for this is that auth errors and similar errors trigger a ws.onopen and immediately
      // after that a ws.onclose..

      if (!_this.isResolved && typeof event.data === 'string') {
        var data = JSON.parse(event.data);

        if (data.error != null) {
          var _this$rejectPromise;

          (_this$rejectPromise = _this.rejectPromise) === null || _this$rejectPromise === void 0 ? void 0 : _this$rejectPromise.call(_this, _this._errorFromWSEvent(data, false));
          return;
        } else {
          var _this$resolvePromise;

          (_this$resolvePromise = _this.resolvePromise) === null || _this$resolvePromise === void 0 ? void 0 : _this$resolvePromise.call(_this, event);
        }
      } // trigger the event..


      _this.lastEvent = new Date();

      _this.logger('info', 'connection:onmessage() - onmessage callback', {
        tags: ['connection'],
        event: event,
        wsID: wsID
      });

      _this.messageCallback(event);
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "onclose", function (wsID, event) {
      _this.logger('info', 'connection:onclose() - onclose callback - ' + event.code, {
        tags: ['connection'],
        event: event,
        wsID: wsID
      });

      if (_this.wsID !== wsID) return;

      if (event.code === chatCodes.WS_CLOSED_SUCCESS) {
        var _this$rejectPromise2;

        // this is a permanent error raised by stream..
        // usually caused by invalid auth details
        var error = new Error("WS connection reject with error ".concat(event.reason));
        error.reason = event.reason;
        (_this$rejectPromise2 = _this.rejectPromise) === null || _this$rejectPromise2 === void 0 ? void 0 : _this$rejectPromise2.call(_this, error);

        _this.logger('info', "connection:onclose() - WS connection reject with error ".concat(event.reason), {
          tags: ['connection'],
          event: event
        });
      } else {
        var _this$rejectPromise3;

        _this.consecutiveFailures += 1;
        _this.totalFailures += 1;

        _this._setHealth(false);

        (_this$rejectPromise3 = _this.rejectPromise) === null || _this$rejectPromise3 === void 0 ? void 0 : _this$rejectPromise3.call(_this, _this._errorFromWSEvent(event));

        _this.logger('info', "connection:onclose() - WS connection closed. Calling reconnect ...", {
          tags: ['connection'],
          event: event
        }); // reconnect if its an abnormal failure


        _this._reconnect();
      }
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "onerror", function (wsID, event) {
      var _this$rejectPromise4;

      if (_this.wsID !== wsID) return;
      _this.consecutiveFailures += 1;
      _this.totalFailures += 1;

      _this._setHealth(false);

      (_this$rejectPromise4 = _this.rejectPromise) === null || _this$rejectPromise4 === void 0 ? void 0 : _this$rejectPromise4.call(_this, _this._errorFromWSEvent(event));

      _this.logger('info', "connection:onerror() - WS connection resulted into error", {
        tags: ['connection'],
        event: event
      });

      _this._reconnect();
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_setHealth", function (healthy) {
      if (healthy && !_this.isHealthy) {
        // yes we are online:
        _this.isHealthy = true;

        _this.eventCallback({
          type: 'connection.changed',
          online: true
        });
      }

      if (!healthy && _this.isHealthy) {
        // bummer we are offline
        _this.isHealthy = false;
        setTimeout(function () {
          if (!_this.isHealthy) {
            _this.eventCallback({
              type: 'connection.changed',
              online: false
            });
          }
        }, 5000);
      }
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_errorFromWSEvent", function (event) {
      var isWSFailure = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var code;
      var statusCode;
      var message;

      if (isCloseEvent(event)) {
        code = event.code;
        statusCode = 'unknown';
        message = event.reason;
      }

      if (isErrorEvent(event)) {
        code = event.error.code;
        statusCode = event.error.StatusCode;
        message = event.error.message;
      } // Keeping this `warn` level log, to avoid cluttering of error logs from ws failures.


      _this.logger('warn', "connection:_errorFromWSEvent() - WS failed with code ".concat(code), {
        tags: ['connection'],
        event: event
      });

      var error = new Error("WS failed with code ".concat(code, " and reason - ").concat(message));
      error.code = code;
      /**
       * StatusCode does not exist on any event types but has been left
       * as is to preserve JS functionality during the TS implementation
       */

      error.StatusCode = statusCode;
      error.isWSFailure = isWSFailure;
      return error;
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_listenForConnectionChanges", function () {
      if (typeof window !== 'undefined' && window != null && window.addEventListener != null) {
        window.addEventListener('offline', _this.onlineStatusChanged);
        window.addEventListener('online', _this.onlineStatusChanged);
      }
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_removeConnectionListeners", function () {
      if (typeof window !== 'undefined' && window != null && window.addEventListener != null) {
        window.removeEventListener('offline', _this.onlineStatusChanged);
        window.removeEventListener('online', _this.onlineStatusChanged);
      }
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_retryInterval", function () {
      // try to reconnect in 0.25-25 seconds (random to spread out the load from failures)
      var max = Math.min(500 + _this.consecutiveFailures * 2000, 25000);
      var min = Math.min(Math.max(250, (_this.consecutiveFailures - 1) * 2000), 25000);
      return Math.floor(Math.random() * (max - min) + min);
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_setupConnectionPromise", function () {
      var that = _this;
      _this.isResolved = false;
      /** a promise that is resolved once ws.open is called */

      _this.connectionOpen = new Promise(function (resolve, reject) {
        that.resolvePromise = resolve;
        that.rejectPromise = reject;
      }).then(function (e) {
        if (e.data && typeof e.data === 'string') {
          var data = JSON.parse(e.data);

          if (data && data.error != null) {
            throw new Error(JSON.stringify(data.error));
          }

          return data;
        } else {
          return undefined;
        }
      }, function (error) {
        throw error;
      });
    });

    this.wsBaseURL = wsBaseURL;
    this.clientID = clientID;
    this.userID = userID;
    this.user = user;
    this.authType = authType;
    this.userAgent = userAgent;
    this.apiKey = apiKey;
    this.tokenManager = tokenManager;
    /** consecutive failures influence the duration of the timeout */

    this.consecutiveFailures = 0;
    /** keep track of the total number of failures */

    this.totalFailures = 0;
    /** We only make 1 attempt to reconnect at the same time.. */

    this.isConnecting = false;
    /** Boolean that indicates if we have a working connection to the server */

    this.isHealthy = false;
    /** Callback when the connection fails and recovers */

    this.recoverCallback = recoverCallback;
    this.messageCallback = messageCallback;
    this.eventCallback = eventCallback;
    this.logger = logger;
    /** Incremented when a new WS connection is made */

    this.wsID = 1;
    /** Store the last event time for health checks */

    this.lastEvent = null;
    /** Send a health check message every 30 seconds */

    this.healthCheckInterval = 30 * 1000;
    /** Every second we verify that we didn't miss any health checks */

    this.monitorInterval = 1 * 1000;

    this._listenForConnectionChanges();
  }
  /**
   * connect - Connect to the WS URL
   *
   * @return {ConnectAPIResponse<ChannelType, CommandType, UserType>} Promise that completes once the first health check message is received
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_8___default()(StableWSConnection, [{
    key: "connect",
    value: function () {
      var _connect2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee() {
        var healthCheck;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this.isConnecting) {
                  _context.next = 2;
                  break;
                }

                throw Error("You've called connect twice, can only attempt 1 connection at the time");

              case 2:
                _context.prev = 2;
                this.isConnecting = true;
                _context.next = 6;
                return this._connect();

              case 6:
                healthCheck = _context.sent;
                this.isConnecting = false;
                this.consecutiveFailures = 0;

                this._startMonitor();

                this._startHealthCheck();

                this.logger('info', "connection:connect() - Established ws connection with healthcheck: ".concat(healthCheck), {
                  tags: ['connection']
                });
                return _context.abrupt("return", healthCheck);

              case 15:
                _context.prev = 15;
                _context.t0 = _context["catch"](2);
                this.isConnecting = false;
                this.isHealthy = false;
                this.consecutiveFailures += 1;

                if (!(_context.t0.code === chatCodes.TOKEN_EXPIRED && !this.tokenManager.isStatic())) {
                  _context.next = 23;
                  break;
                }

                this.logger('info', 'connection:connect() - WS failure due to expired token, so going to try to reload token and reconnect', {
                  tags: ['connection']
                });
                return _context.abrupt("return", this._reconnect({
                  refreshToken: true
                }));

              case 23:
                if (_context.t0.isWSFailure) {
                  _context.next = 25;
                  break;
                }

                throw new Error(JSON.stringify({
                  code: _context.t0.code,
                  StatusCode: _context.t0.StatusCode,
                  message: _context.t0.message,
                  isWSFailure: _context.t0.isWSFailure
                }));

              case 25:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[2, 15]]);
      }));

      function connect() {
        return _connect2.apply(this, arguments);
      }

      return connect;
    }()
  }, {
    key: "disconnect",

    /**
     * disconnect - Disconnect the connection and doesn't recover...
     *
     */
    value: function disconnect(timeout) {
      var _this2 = this;

      this.logger('info', "connection:disconnect() - Closing the websocket connection for wsID ".concat(this.wsID), {
        tags: ['connection']
      });
      this.wsID += 1; // start by removing all the listeners

      if (this.healthCheckIntervalRef) {
        clearInterval(this.healthCheckIntervalRef);
      }

      if (this.monitorIntervalRef) {
        clearInterval(this.monitorIntervalRef);
      }

      this._removeConnectionListeners();

      this.isHealthy = false; // remove ws handlers...

      if (this.ws && this.ws.removeAllListeners) {
        this.ws.removeAllListeners();
      }

      var isClosedPromise; // and finally close...
      // Assigning to local here because we will remove it from this before the
      // promise resolves.

      var ws = this.ws;

      if (ws && ws.close && ws.readyState === ws.OPEN) {
        isClosedPromise = new Promise(function (resolve) {
          var onclose = function onclose(event) {
            _this2.logger('info', "connection:disconnect() - resolving isClosedPromise ".concat(event ? 'with' : 'without', " close frame"), {
              tags: ['connection'],
              event: event
            });

            resolve();
          };

          ws.onclose = onclose; // In case we don't receive close frame websocket server in time,
          // lets not wait for more than 1 seconds.

          setTimeout(onclose, timeout != null ? timeout : 1000);
        });
        this.logger('info', "connection:disconnect() - Manually closed connection by calling client.disconnect()", {
          tags: ['connection']
        });
        ws.close(chatCodes.WS_CLOSED_SUCCESS, 'Manually closed connection by calling client.disconnect()');
      } else {
        this.logger('info', "connection:disconnect() - ws connection doesn't exist or it is already closed.", {
          tags: ['connection']
        });
        isClosedPromise = Promise.resolve();
      }

      delete this.ws;
      return isClosedPromise;
    }
    /**
     * _connect - Connect to the WS endpoint
     *
     * @return {ConnectAPIResponse<ChannelType, CommandType, UserType>} Promise that completes once the first health check message is received
     */

  }, {
    key: "_connect",
    value: function () {
      var _connect3 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee2() {
        var wsURL, response;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.tokenManager.tokenReady();

              case 2:
                this._setupConnectionPromise();

                wsURL = this._buildUrl();
                this.ws = new isomorphic_ws__WEBPACK_IMPORTED_MODULE_14___default.a(wsURL);
                this.ws.onopen = this.onopen.bind(this, this.wsID);
                this.ws.onclose = this.onclose.bind(this, this.wsID);
                this.ws.onerror = this.onerror.bind(this, this.wsID);
                this.ws.onmessage = this.onmessage.bind(this, this.wsID);
                _context2.next = 11;
                return this.connectionOpen;

              case 11:
                response = _context2.sent;

                if (!response) {
                  _context2.next = 15;
                  break;
                }

                this.connectionID = response.connection_id;
                return _context2.abrupt("return", response);

              case 15:
                return _context2.abrupt("return", undefined);

              case 16:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function _connect() {
        return _connect3.apply(this, arguments);
      }

      return _connect;
    }()
    /**
     * _reconnect - Retry the connection to WS endpoint
     *
     * @param {{ interval?: number; refreshToken?: boolean }} options Following options are available
     *
     * - `interval`	{int}			number of ms that function should wait before reconnecting
     * - `refreshToken` {boolean}	reload/refresh user token be refreshed before attempting reconnection.
     */

  }, {
    key: "_reconnect",
    value: function () {
      var _reconnect2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee3() {
        var options,
            interval,
            _open,
            _args3 = arguments;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};
                this.logger('info', 'connection:_reconnect() - Initiating the reconnect', {
                  tags: ['connection']
                }); // only allow 1 connection at the time

                if (!(this.isConnecting || this.isHealthy)) {
                  _context3.next = 5;
                  break;
                }

                this.logger('info', 'connection:_reconnect() - Abort (1) since already connecting or healthy', {
                  tags: ['connection']
                });
                return _context3.abrupt("return");

              case 5:
                // reconnect in case of on error or on close
                // also reconnect if the health check cycle fails
                interval = options.interval;

                if (!interval) {
                  interval = this._retryInterval();
                } // reconnect, or try again after a little while...


                _context3.next = 9;
                return sleep(interval);

              case 9:
                if (!(this.isConnecting || this.isHealthy)) {
                  _context3.next = 12;
                  break;
                }

                this.logger('info', 'connection:_reconnect() - Abort (2) since already connecting or healthy', {
                  tags: ['connection']
                });
                return _context3.abrupt("return");

              case 12:
                this.isConnecting = true; // cleanup the old connection

                this.logger('info', 'connection:_reconnect() - Destroying current WS connection', {
                  tags: ['connection']
                });

                this._destroyCurrentWSConnection();

                if (!options.refreshToken) {
                  _context3.next = 18;
                  break;
                }

                _context3.next = 18;
                return this.tokenManager.loadToken();

              case 18:
                _context3.prev = 18;
                _context3.next = 21;
                return this._connect();

              case 21:
                _open = _context3.sent;

                if (!this.recoverCallback) {
                  _context3.next = 27;
                  break;
                }

                this.logger('info', 'connection:_reconnect() - Waiting for recoverCallBack', {
                  tags: ['connection']
                });
                _context3.next = 26;
                return this.recoverCallback(_open);

              case 26:
                this.logger('info', 'connection:_reconnect() - Finished recoverCallBack', {
                  tags: ['connection']
                });

              case 27:
                this.isConnecting = false;
                this.consecutiveFailures = 0;
                _context3.next = 40;
                break;

              case 31:
                _context3.prev = 31;
                _context3.t0 = _context3["catch"](18);
                this.isConnecting = false;
                this.isHealthy = false;
                this.consecutiveFailures += 1;

                if (!(_context3.t0.code === chatCodes.TOKEN_EXPIRED && !this.tokenManager.isStatic())) {
                  _context3.next = 39;
                  break;
                }

                this.logger('info', 'connection:_reconnect() - WS failure due to expired token, so going to try to reload token and reconnect', {
                  tags: ['connection']
                });
                return _context3.abrupt("return", this._reconnect({
                  refreshToken: true
                }));

              case 39:
                // reconnect on WS failures, don't reconnect if there is a code bug
                if (_context3.t0.isWSFailure) {
                  this.logger('info', 'connection:_reconnect() - WS failure, so going to try to reconnect', {
                    tags: ['connection']
                  });

                  this._reconnect();
                }

              case 40:
                this.logger('info', 'connection:_reconnect() - == END ==', {
                  tags: ['connection']
                });

              case 41:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[18, 31]]);
      }));

      function _reconnect() {
        return _reconnect2.apply(this, arguments);
      }

      return _reconnect;
    }()
    /**
     * onlineStatusChanged - this function is called when the browser connects or disconnects from the internet.
     *
     * @param {Event} event Event with type online or offline
     *
     */

  }, {
    key: "_destroyCurrentWSConnection",

    /**
     * _destroyCurrentWSConnection - Removes the current WS connection
     *
     */
    value: function _destroyCurrentWSConnection() {
      // increment the ID, meaning we will ignore all messages from the old
      // ws connection from now on.
      this.wsID += 1;

      try {
        if (this.ws && this.ws.removeAllListeners) {
          this.ws.removeAllListeners();
        }

        if (this.ws && this.ws.close) {
          this.ws.close();
        }
      } catch (e) {// we don't care
      }
    }
    /**
     * _retryInterval - A retry interval which increases after consecutive failures
     *
     * @return {number} Duration to wait in milliseconds
     */

  }, {
    key: "_startHealthCheck",

    /**
     * _startHealthCheck - Sends a message every 30s or so to see if the ws connection still works
     *
     */
    value: function _startHealthCheck() {
      var that = this; // 30 seconds is the recommended interval (messenger uses this)

      this.healthCheckIntervalRef = setInterval(function () {
        // send the healthcheck.., server replies with a health check event
        var data = [{
          type: 'health.check',
          client_id: that.clientID,
          user_id: that.userID
        }]; // try to send on the connection

        try {
          var _that$ws;

          (_that$ws = that.ws) === null || _that$ws === void 0 ? void 0 : _that$ws.send(JSON.stringify(data));
        } catch (e) {// error will already be detected elsewhere
        }
      }, that.healthCheckInterval);
    }
    /**
     * _startMonitor - Verifies we didn't miss any events. Marks the connection as failed in case we did.
     *
     */

  }, {
    key: "_startMonitor",
    value: function _startMonitor() {
      var _this3 = this;

      var that = this;
      this.monitorIntervalRef = setInterval(function () {
        var now = new Date(); // means we missed a health check

        if (that.lastEvent && now.getTime() - that.lastEvent.getTime() > _this3.healthCheckInterval + 10 * 1000) {
          _this3.logger('info', 'connection:_startMonitor - going to reconnect', {
            tags: ['connection']
          });

          that._setHealth(false);

          that._reconnect();
        }
      }, that.monitorInterval);
    }
  }]);

  return StableWSConnection;
}();

var jwt = null;

var crypto = null;

function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$3(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Creates the JWT token that can be used for a UserSession
 * @method JWTUserToken
 * @memberof signing
 * @private
 * @param {Secret} apiSecret - API Secret key
 * @param {string} userId - The user_id key in the JWT payload
 * @param {UnknownType} [extraData] - Extra that should be part of the JWT token
 * @param {SignOptions} [jwtOptions] - Options that can be past to jwt.sign
 * @return {string} JWT Token
 */
function JWTUserToken(apiSecret, userId) {
  var extraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var jwtOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

  if (typeof userId !== 'string') {
    throw new TypeError('userId should be a string');
  }

  var payload = _objectSpread$3({
    user_id: userId
  }, extraData); // make sure we return a clear error when jwt is shimmed (ie. browser build)


  {
    throw Error("Unable to find jwt crypto, if you are getting this error is probably because you are trying to generate tokens on browser or React Native (or other environment where crypto functions are not available). Please Note: token should only be generated server-side.");
  }

  var opts = _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default()({
    algorithm: 'HS256',
    noTimestamp: true
  }, jwtOptions);
}
function JWTServerToken(apiSecret) {
  var jwtOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var payload = {
    server: true
  };

  var opts = _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default()({
    algorithm: 'HS256',
    noTimestamp: true
  }, jwtOptions);

  return jwt.sign(payload, apiSecret, opts);
}
function UserFromToken(token) {
  var fragments = token.split('.');

  if (fragments.length !== 3) {
    return '';
  }

  var b64Payload = fragments[1];
  var payload = decodeBase64(b64Payload);
  var data = JSON.parse(payload);
  return data.user_id;
}
/**
 *
 * @param {string} userId the id of the user
 * @return {string}
 */

function DevToken(userId) {
  return ['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9', //{"alg": "HS256", "typ": "JWT"}
  encodeBase64(JSON.stringify({
    user_id: userId
  })), 'devtoken' // hardcoded signature
  ].join('.');
}
/**
 *
 * @param {string} body the signed message
 * @param {string} secret the shared secret used to generate the signature (Stream API secret)
 * @param {string} signature the signature to validate
 * @return {boolean}
 */

function CheckSignature(body, secret, signature) {
  var key = Buffer.from(secret, 'ascii');
  var hash = crypto.createHmac('sha256', key).update(body).digest('hex');
  return hash === signature;
}

/**
 * TokenManager
 *
 * Handles all the operations around user token.
 */
var TokenManager =
/**
 * Constructor
 *
 * @param {Secret} secret
 */
function TokenManager(secret) {
  var _this = this;

  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_7___default()(this, TokenManager);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "loadTokenPromise", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "type", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "secret", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "token", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "tokenProvider", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "user", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "setTokenOrProvider", /*#__PURE__*/function () {
    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee(tokenOrProvider, user) {
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _this.validateToken(tokenOrProvider, user);

              _this.user = user;

              if (isFunction(tokenOrProvider)) {
                _this.tokenProvider = tokenOrProvider;
                _this.type = 'provider';
              }

              if (typeof tokenOrProvider === 'string') {
                _this.token = tokenOrProvider;
                _this.type = 'static';
              }

              if (!tokenOrProvider && _this.user && _this.secret) {
                _this.token = JWTUserToken(_this.secret, user.id, {}, {});
                _this.type = 'static';
              }

              _context.next = 7;
              return _this.loadToken();

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }());

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "reset", function () {
    _this.token = undefined;
    _this.user = undefined;
    _this.loadTokenPromise = null;
  });

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "validateToken", function (tokenOrProvider, user) {
    // allow empty token for anon user
    if (user && user.anon && !tokenOrProvider) return; // Don't allow empty token for non-server side client.

    if (!_this.secret && !tokenOrProvider) {
      throw new Error('User token can not be empty');
    }

    if (tokenOrProvider && typeof tokenOrProvider !== 'string' && !isFunction(tokenOrProvider)) {
      throw new Error('user token should either be a string or a function');
    }

    if (typeof tokenOrProvider === 'string') {
      // Allow empty token for anonymous users
      if (user.anon && tokenOrProvider === '') return;
      var tokenUserId = UserFromToken(tokenOrProvider);

      if (tokenOrProvider != null && (tokenUserId == null || tokenUserId === '' || tokenUserId !== user.id)) {
        throw new Error('userToken does not have a user_id or is not matching with user.id');
      }
    }
  });

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "tokenReady", function () {
    return _this.loadTokenPromise;
  });

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "loadToken", function () {
    // eslint-disable-next-line no-async-promise-executor
    _this.loadTokenPromise = new Promise( /*#__PURE__*/function () {
      var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee2(resolve) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(_this.type === 'static')) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt("return", resolve(_this.token));

              case 2:
                if (!(_this.tokenProvider && typeof _this.tokenProvider !== 'string')) {
                  _context2.next = 7;
                  break;
                }

                _context2.next = 5;
                return _this.tokenProvider();

              case 5:
                _this.token = _context2.sent;
                resolve(_this.token);

              case 7:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      return function (_x3) {
        return _ref2.apply(this, arguments);
      };
    }());
    return _this.loadTokenPromise;
  });

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "getToken", function () {
    if (_this.token) {
      return _this.token;
    }

    if (_this.user && _this.user.anon && !_this.token) {
      return _this.token;
    }

    if (_this.secret) {
      return JWTServerToken(_this.secret);
    }

    throw new Error("Both secret and user tokens are not set. Either client.setUser wasn't called or client.disconnect was called");
  });

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "isStatic", function () {
    return _this.type === 'static';
  });

  this.loadTokenPromise = null;

  if (secret) {
    this.secret = secret;
  }

  this.type = 'static';

  if (this.secret) {
    this.token = JWTServerToken(this.secret);
  }
}
/**
 * Set the static string token or token provider.
 * Token provider should return a token string or a promise which resolves to string token.
 *
 * @param {TokenOrProvider} tokenOrProvider
 * @param {UserResponse<UserType>} user
 */
;

function _createForOfIteratorHelper$3(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray$3(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$3(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen); }

function _arrayLikeToArray$3(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$4(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function isString$1(x) {
  return typeof x === 'string' || x instanceof String;
}

var StreamChat = /*#__PURE__*/function () {
  function StreamChat(_key, secretOrOptions, _options) {
    var _this = this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_7___default()(this, StreamChat);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_user", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "activeChannels", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "anonymous", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "axiosInstance", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "baseURL", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "browser", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "cleaningIntervalRef", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "clientID", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "configs", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "connecting", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "connectionEstablishedCount", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "connectionID", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "failures", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "key", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "listeners", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "logger", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "recoverStateOnReconnect", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "mutedChannels", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "mutedUsers", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "node", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "options", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "secret", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "setUserPromise", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "state", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "tokenManager", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "user", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "userAgent", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "userID", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "wsBaseURL", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "wsConnection", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "wsPromise", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_setupConnection", function () {
      _this.clientID = "".concat(_this.userID, "--").concat(randomId());
      _this.wsPromise = _this.connect();

      _this._startCleaning();

      return _this.wsPromise;
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_hasConnectionID", function () {
      return Boolean(_this.connectionID);
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "connectUser", function (user, userTokenOrProvider) {
      if (!user.id) {
        throw new Error('The "id" field on the user is missing');
      }
      /**
       * Calling connectUser multiple times is potentially the result of a  bad integration, however,
       * If the user id remains the same we don't throw error
       */


      if (_this.userID === user.id && _this.setUserPromise) {
        console.warn('Consecutive calls to connectUser is detected, ideally you should only call this function once in your app.');
        return _this.setUserPromise;
      }

      if (_this.userID) {
        throw new Error('Use client.disconnect() before trying to connect as a different user. connectUser was called twice.');
      }

      if ((_this._isUsingServerAuth() || _this.node) && !_this.options.allowServerSideConnect) {
        console.warn('Please do not use connectUser server side. connectUser impacts MAU and concurrent connection usage and thus your bill. If you have a valid use-case, add "allowServerSideConnect: true" to the client options to disable this warning.');
      } // we generate the client id client side


      _this.userID = user.id;
      _this.anonymous = false;

      var setTokenPromise = _this._setToken(user, userTokenOrProvider);

      _this._setUser(user);

      var wsPromise = _this._setupConnection();

      _this.setUserPromise = Promise.all([setTokenPromise, wsPromise]).then(function (result) {
        return result[1];
      } // We only return connection promise;
      );
      return _this.setUserPromise;
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "setUser", function (user, userTokenOrProvider) {
      return _this.connectUser(user, userTokenOrProvider);
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_setToken", function (user, userTokenOrProvider) {
      return _this.tokenManager.setTokenOrProvider(userTokenOrProvider, user);
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "connectAnonymousUser", function () {
      if ((_this._isUsingServerAuth() || _this.node) && !_this.options.allowServerSideConnect) {
        console.warn('Please do not use connectUser server side. connectUser impacts MAU and concurrent connection usage and thus your bill. If you have a valid use-case, add "allowServerSideConnect: true" to the client options to disable this warning.');
      }

      _this.anonymous = true;
      _this.userID = randomId();
      var anonymousUser = {
        id: _this.userID,
        anon: true
      };

      _this._setToken(anonymousUser, '');

      _this._setUser(anonymousUser);

      return _this._setupConnection();
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "setAnonymousUser", function () {
      return _this.connectAnonymousUser();
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "doAxiosRequest", /*#__PURE__*/function () {
      var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee(type, url, data) {
        var options,
            requestConfig,
            response,
            _args = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};
                _context.next = 3;
                return _this.tokenManager.tokenReady();

              case 3:
                requestConfig = _this._enrichAxiosOptions(options);
                _context.prev = 4;

                _this._logApiRequest(type, url, data, requestConfig);

                _context.t0 = type;
                _context.next = _context.t0 === 'get' ? 9 : _context.t0 === 'delete' ? 13 : _context.t0 === 'post' ? 17 : _context.t0 === 'put' ? 21 : _context.t0 === 'patch' ? 25 : _context.t0 === 'options' ? 29 : 33;
                break;

              case 9:
                _context.next = 11;
                return _this.axiosInstance.get(url, requestConfig);

              case 11:
                response = _context.sent;
                return _context.abrupt("break", 34);

              case 13:
                _context.next = 15;
                return _this.axiosInstance.delete(url, requestConfig);

              case 15:
                response = _context.sent;
                return _context.abrupt("break", 34);

              case 17:
                _context.next = 19;
                return _this.axiosInstance.post(url, data, requestConfig);

              case 19:
                response = _context.sent;
                return _context.abrupt("break", 34);

              case 21:
                _context.next = 23;
                return _this.axiosInstance.put(url, data, requestConfig);

              case 23:
                response = _context.sent;
                return _context.abrupt("break", 34);

              case 25:
                _context.next = 27;
                return _this.axiosInstance.patch(url, data, requestConfig);

              case 27:
                response = _context.sent;
                return _context.abrupt("break", 34);

              case 29:
                _context.next = 31;
                return _this.axiosInstance.options(url, requestConfig);

              case 31:
                response = _context.sent;
                return _context.abrupt("break", 34);

              case 33:
                throw new Error('Invalid request type');

              case 34:
                _this._logApiResponse(type, url, response);

                return _context.abrupt("return", _this.handleResponse(response));

              case 38:
                _context.prev = 38;
                _context.t1 = _context["catch"](4);

                _this._logApiError(type, url, _context.t1);

                if (!_context.t1.response) {
                  _context.next = 50;
                  break;
                }

                if (!(_context.t1.response.data.code === chatCodes.TOKEN_EXPIRED && !_this.tokenManager.isStatic())) {
                  _context.next = 47;
                  break;
                }

                _this.tokenManager.loadToken();

                _context.next = 46;
                return _this.doAxiosRequest(type, url, data, options);

              case 46:
                return _context.abrupt("return", _context.sent);

              case 47:
                return _context.abrupt("return", _this.handleResponse(_context.t1.response));

              case 50:
                throw _context.t1;

              case 51:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[4, 38]]);
      }));

      return function (_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }());

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "dispatchEvent", function (event) {
      // client event handlers
      _this._handleClientEvent(event); // channel event handlers


      var cid = event.cid;
      var channel = cid ? _this.activeChannels[cid] : undefined;

      if (channel) {
        channel._handleChannelEvent(event);
      }

      _this._callClientListeners(event);

      if (channel) {
        channel._callChannelListeners(event);
      }
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "handleEvent", function (messageEvent) {
      // dispatch the event to the channel listeners
      var jsonString = messageEvent.data;
      var event = JSON.parse(jsonString);
      event.received_at = new Date();

      _this.dispatchEvent(event);
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_callClientListeners", function (event) {
      var client = _this; // gather and call the listeners

      var listeners = [];

      if (client.listeners.all) {
        listeners.push.apply(listeners, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_4___default()(client.listeners.all));
      }

      if (client.listeners[event.type]) {
        listeners.push.apply(listeners, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_4___default()(client.listeners[event.type]));
      } // call the event and send it to the listeners


      for (var _i = 0, _listeners = listeners; _i < _listeners.length; _i++) {
        var listener = _listeners[_i];
        listener(event);
      }
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "recoverState", /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee2() {
      var _this$wsConnection, _this$wsConnection2;

      var cids;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _this.logger('info', "client:recoverState() - Start of recoverState with connectionID ".concat((_this$wsConnection = _this.wsConnection) === null || _this$wsConnection === void 0 ? void 0 : _this$wsConnection.connectionID), {
                tags: ['connection']
              });

              _this.connectionID = (_this$wsConnection2 = _this.wsConnection) === null || _this$wsConnection2 === void 0 ? void 0 : _this$wsConnection2.connectionID;
              cids = Object.keys(_this.activeChannels);

              if (!(cids.length && _this.recoverStateOnReconnect)) {
                _context2.next = 11;
                break;
              }

              _this.logger('info', "client:recoverState() - Start the querying of ".concat(cids.length, " channels"), {
                tags: ['connection', 'client']
              });

              _context2.next = 7;
              return _this.queryChannels({
                cid: {
                  $in: cids
                }
              }, {
                last_message_at: -1
              }, {
                limit: 30
              });

            case 7:
              _this.logger('info', 'client:recoverState() - Querying channels finished', {
                tags: ['connection', 'client']
              });

              _this.dispatchEvent({
                type: 'connection.recovered'
              });

              _context2.next = 12;
              break;

            case 11:
              _this.dispatchEvent({
                type: 'connection.recovered'
              });

            case 12:
              _this.wsPromise = Promise.resolve();
              _this.setUserPromise = Promise.resolve();

            case 14:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    })));

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "getChannelByMembers", function (channelType, custom) {
      // Check if the channel already exists.
      // Only allow 1 channel object per cid
      var membersStr = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_4___default()(custom.members || []).sort().join(',');

      var tempCid = "".concat(channelType, ":!members-").concat(membersStr);

      if (!membersStr) {
        throw Error('Please specify atleast one member when creating unique conversation');
      } // channel could exist in `activeChannels` list with either one of the following two keys:
      // 1. cid - Which gets set on channel only after calling channel.query or channel.watch or channel.create
      // 2. Sorted membersStr - E.g., "messaging:amin,vishal" OR "messaging:amin,jaap,tom"
      //                        This is set when you create a channel, but haven't queried yet. After query,
      //                        we will replace it with `cid`


      for (var _key2 in _this.activeChannels) {
        var _channel = _this.activeChannels[_key2];

        if (_key2 === tempCid) {
          return _channel;
        }

        if (_key2.indexOf("".concat(channelType, ":!members-")) === 0) {
          var membersStrInExistingChannel = Object.keys(_channel.state.members).sort().join(',');

          if (membersStrInExistingChannel === membersStr) {
            return _channel;
          }
        }
      }

      var channel = new Channel(_this, channelType, undefined, custom); // For the time being set the key as membersStr, since we don't know the cid yet.
      // In channel.query, we will replace it with 'cid'.

      _this.activeChannels[tempCid] = channel;
      return channel;
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "getChannelById", function (channelType, channelID, custom) {
      if (typeof channelID === 'string' && ~channelID.indexOf(':')) {
        throw Error("Invalid channel id ".concat(channelID, ", can't contain the : character"));
      } // only allow 1 channel object per cid


      var cid = "".concat(channelType, ":").concat(channelID);

      if (cid in _this.activeChannels) {
        var _channel2 = _this.activeChannels[cid];

        if (Object.keys(custom).length > 0) {
          _channel2.data = custom;
          _channel2._data = custom;
        }

        return _channel2;
      }

      var channel = new Channel(_this, channelType, channelID, custom);
      _this.activeChannels[channel.cid] = channel;
      return channel;
    });

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "_isUsingServerAuth", function () {
      return !!_this.secret;
    });

    // set the key
    this.key = _key;
    this.listeners = {};
    this.state = new ClientState(); // a list of channels to hide ws events from

    this.mutedChannels = [];
    this.mutedUsers = []; // set the secret

    if (secretOrOptions && isString$1(secretOrOptions)) {
      this.secret = secretOrOptions;
    } // set the options... and figure out defaults...


    var inputOptions = _options ? _options : secretOrOptions && !isString$1(secretOrOptions) ? secretOrOptions : {};
    this.browser = typeof inputOptions.browser !== 'undefined' ? inputOptions.browser : typeof window !== 'undefined';
    this.node = !this.browser;
    this.options = _objectSpread$4({
      timeout: 3000,
      withCredentials: false,
      // making sure cookies are not sent
      warmUp: false,
      recoverStateOnReconnect: true
    }, inputOptions);

    if (this.node) {
      this.options.httpsAgent = new https.Agent({
        keepAlive: true,
        keepAliveMsecs: 3000
      });
    }

    this.axiosInstance = axios__WEBPACK_IMPORTED_MODULE_10___default.a.create(this.options);
    this.setBaseURL('https://chat-us-east-1.stream-io-api.com');

    if (typeof process !== 'undefined' && Object({"NODE_ENV":"production","BASE_URL":"/"}).STREAM_LOCAL_TEST_RUN) {
      this.setBaseURL('http://localhost:3030');
    }

    if (typeof process !== 'undefined' && Object({"NODE_ENV":"production","BASE_URL":"/"}).STREAM_LOCAL_TEST_HOST) {
      this.setBaseURL('http://' + Object({"NODE_ENV":"production","BASE_URL":"/"}).STREAM_LOCAL_TEST_HOST);
    } // WS connection is initialized when setUser is called


    this.wsConnection = null;
    this.wsPromise = null;
    this.setUserPromise = null; // keeps a reference to all the channels that are in use

    this.activeChannels = {}; // mapping between channel groups and configs

    this.configs = {};
    this.anonymous = false; // If its a server-side client, then lets initialize the tokenManager, since token will be
    // generated from secret.

    this.tokenManager = new TokenManager(this.secret);
    /**
     * logger function should accept 3 parameters:
     * @param logLevel string
     * @param message   string
     * @param extraData object
     *
     * e.g.,
     * const client = new StreamChat('api_key', {}, {
     * 		logger = (logLevel, message, extraData) => {
     * 			console.log(message);
     * 		}
     * })
     *
     * extraData contains tags array attached to log message. Tags can have one/many of following values:
     * 1. api
     * 2. api_request
     * 3. api_response
     * 4. client
     * 5. channel
     * 6. connection
     * 7. event
     *
     * It may also contains some extra data, some examples have been mentioned below:
     * 1. {
     * 		tags: ['api', 'api_request', 'client'],
     * 		url: string,
     * 		payload: object,
     * 		config: object
     * }
     * 2. {
     * 		tags: ['api', 'api_response', 'client'],
     * 		url: string,
     * 		response: object
     * }
     * 3. {
     * 		tags: ['api', 'api_response', 'client'],
     * 		url: string,
     * 		error: object
     * }
     * 4. {
     * 		tags: ['event', 'client'],
     * 		event: object
     * }
     * 5. {
     * 		tags: ['channel'],
     * 		channel: object
     * }
     */

    this.logger = isFunction(inputOptions.logger) ? inputOptions.logger : function () {
      return null;
    };
    this.recoverStateOnReconnect = this.options.recoverStateOnReconnect;
  }
  /**
   * Get a client instance
   *
   * This function always returns the same Client instance to avoid issues raised by multiple Client and WS connections
   *
   * **After the first call, the client configration will not change if the key or options parameters change**
   *
   * @param {string} key - the api key
   * @param {string} [secret] - the api secret
   * @param {StreamChatOptions} [options] - additional options, here you can pass custom options to axios instance
   * @param {boolean} [options.browser] - enforce the client to be in browser mode
   * @param {boolean} [options.warmUp] - default to false, if true, client will open a connection as soon as possible to speed up following requests
   * @param {Logger} [options.Logger] - custom logger
   * @param {number} [options.timeout] - default to 3000
   * @param {httpsAgent} [options.httpsAgent] - custom httpsAgent, in node it's default to https.agent()
   * @example <caption>initialize the client in user mode</caption>
   * StreamChat.getInstance('api_key')
   * @example <caption>initialize the client in user mode with options</caption>
   * StreamChat.getInstance('api_key', { timeout:5000 })
   * @example <caption>secret is optional and only used in server side mode</caption>
   * StreamChat.getInstance('api_key', "secret", { httpsAgent: customAgent })
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_8___default()(StreamChat, [{
    key: "devToken",
    value: function devToken(userID) {
      return DevToken(userID);
    }
  }, {
    key: "getAuthType",
    value: function getAuthType() {
      return this.anonymous ? 'anonymous' : 'jwt';
    }
  }, {
    key: "setBaseURL",
    value: function setBaseURL(baseURL) {
      this.baseURL = baseURL;
      this.wsBaseURL = this.baseURL.replace('http', 'ws');
    }
  }, {
    key: "_setUser",
    value: function _setUser(user) {
      // this one is used by the frontend
      this.user = user; // this one is actually used for requests...

      this._user = _objectSpread$4({}, user);
    }
    /**
    * updateAppSettings - updates application settings
    *
    * @param {AppSettings} options App settings.
    * 		IE: {
     			"apn_config": {
    			"auth_type": "token",
    			"auth_key": fs.readFileSync(
    				'./apn-push-auth-key.p8',
    				'utf-8',
    			),
    			"key_id": "keyid",
    			"team_id": "teamid", //either ALL these 3
    			"notification_template": "notification handlebars template",
    			"bundle_id": "com.apple.your.app",
    			"development": true
    		},
    		"firebase_config": {
    			"server_key": "server key from fcm",
    			"notification_template": "notification handlebars template"
    			"data_template": "data handlebars template"
    		},
    		"webhook_url": "https://acme.com/my/awesome/webhook/"
    	}
    */

  }, {
    key: "updateAppSettings",
    value: function () {
      var _updateAppSettings = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee3(options) {
        var _options$apn_config;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if ((_options$apn_config = options.apn_config) !== null && _options$apn_config !== void 0 && _options$apn_config.p12_cert) {
                  options.apn_config.p12_cert = Buffer.from(options.apn_config.p12_cert).toString('base64');
                }

                _context3.next = 3;
                return this.patch(this.baseURL + '/app', options);

              case 3:
                return _context3.abrupt("return", _context3.sent);

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function updateAppSettings(_x4) {
        return _updateAppSettings.apply(this, arguments);
      }

      return updateAppSettings;
    }()
    /**
     * getAppSettings - retrieves application settings
     */

  }, {
    key: "getAppSettings",
    value: function () {
      var _getAppSettings = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee4() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.get(this.baseURL + '/app');

              case 2:
                return _context4.abrupt("return", _context4.sent);

              case 3:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function getAppSettings() {
        return _getAppSettings.apply(this, arguments);
      }

      return getAppSettings;
    }()
    /**
    * testPushSettings - Tests the push settings for a user with a random chat message and the configured push templates
    *
    * @param {string} userID User ID. If user has no devices, it will error
    * @param {TestPushDataInput} [data] Overrides for push templates/message used
    * 		IE: {
    		  messageID: 'id-of-message',//will error if message does not exist
    		  apnTemplate: '{}', //if app doesn't have apn configured it will error
    		  firebaseTemplate: '{}', //if app doesn't have firebase configured it will error
    		  firebaseDataTemplate: '{}', //if app doesn't have firebase configured it will error
    		  skipDevices: true, // skip config/device checks and sending to real devices
    	}
    */

  }, {
    key: "testPushSettings",
    value: function () {
      var _testPushSettings = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee5(userID) {
        var data,
            _args5 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                data = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};
                _context5.next = 3;
                return this.post(this.baseURL + '/check_push', _objectSpread$4(_objectSpread$4(_objectSpread$4(_objectSpread$4(_objectSpread$4({
                  user_id: userID
                }, data.messageID ? {
                  message_id: data.messageID
                } : {}), data.apnTemplate ? {
                  apn_template: data.apnTemplate
                } : {}), data.firebaseTemplate ? {
                  firebase_template: data.firebaseTemplate
                } : {}), data.firebaseDataTemplate ? {
                  firebase_data_template: data.firebaseDataTemplate
                } : {}), data.skipDevices ? {
                  skip_devices: true
                } : {}));

              case 3:
                return _context5.abrupt("return", _context5.sent);

              case 4:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function testPushSettings(_x5) {
        return _testPushSettings.apply(this, arguments);
      }

      return testPushSettings;
    }()
    /**
     * testSQSSettings - Tests that the given or configured SQS configuration is valid
     *
     * @param {string} userID User ID. If user has no devices, it will error
     * @param {TestPushDataInput} [data] Overrides for push templates/message used
     * 		IE: {
    		  messageID: 'id-of-message',//will error if message does not exist
    		  apnTemplate: '{}', //if app doesn't have apn configured it will error
    		  firebaseTemplate: '{}', //if app doesn't have firebase configured it will error
    		  firebaseDataTemplate: '{}', //if app doesn't have firebase configured it will error
    	}
     */

  }, {
    key: "testSQSSettings",
    value: function () {
      var _testSQSSettings = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee6() {
        var data,
            _args6 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                data = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};
                _context6.next = 3;
                return this.post(this.baseURL + '/check_sqs', data);

              case 3:
                return _context6.abrupt("return", _context6.sent);

              case 4:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function testSQSSettings() {
        return _testSQSSettings.apply(this, arguments);
      }

      return testSQSSettings;
    }()
    /**
     * disconnect - closes the WS connection
     */

  }, {
    key: "disconnect",
    value: function disconnect(timeout) {
      this.logger('info', 'client:disconnect() - Disconnecting the client', {
        tags: ['connection', 'client']
      }); // remove the user specific fields

      delete this.user;
      delete this._user;
      delete this.userID;

      if (this.cleaningIntervalRef != null) {
        clearInterval(this.cleaningIntervalRef);
        this.cleaningIntervalRef = undefined;
      }

      this.anonymous = false;
      this.connectionEstablishedCount = 0;

      for (var _i2 = 0, _Object$values = Object.values(this.activeChannels); _i2 < _Object$values.length; _i2++) {
        var _channel3 = _Object$values[_i2];

        _channel3._disconnect();
      } // ensure we no longer return inactive channels


      this.activeChannels = {}; // reset client state

      this.state = new ClientState(); // reset token manager

      this.tokenManager.reset(); // close the WS connection

      if (this.wsConnection) {
        return this.wsConnection.disconnect(timeout);
      }

      return Promise.resolve();
    }
    /**
     * connectAnonymousUser - Set an anonymous user and open a WebSocket connection
     */

  }, {
    key: "setGuestUser",

    /**
     * setGuestUser - Setup a temporary guest user
     *
     * @param {UserResponse<UserType>} user Data about this user. IE {name: "john"}
     *
     * @return {ConnectAPIResponse<ChannelType, CommandType, UserType>} Returns a promise that resolves when the connection is setup
     */
    value: function () {
      var _setGuestUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee7(user) {
        var response, _response$user, guestUser;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                this.anonymous = true;
                _context7.prev = 1;
                _context7.next = 4;
                return this.post(this.baseURL + '/guest', {
                  user: user
                });

              case 4:
                response = _context7.sent;
                _context7.next = 11;
                break;

              case 7:
                _context7.prev = 7;
                _context7.t0 = _context7["catch"](1);
                this.anonymous = false;
                throw _context7.t0;

              case 11:
                this.anonymous = false; // eslint-disable-next-line @typescript-eslint/no-unused-vars

                _response$user = response.user, _response$user.created_at, _response$user.updated_at, _response$user.last_active, _response$user.online, guestUser = _babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3___default()(_response$user, ["created_at", "updated_at", "last_active", "online"]);
                _context7.next = 15;
                return this.connectUser(guestUser, response.access_token);

              case 15:
                return _context7.abrupt("return", _context7.sent);

              case 16:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this, [[1, 7]]);
      }));

      function setGuestUser(_x6) {
        return _setGuestUser.apply(this, arguments);
      }

      return setGuestUser;
    }()
    /**
     * createToken - Creates a token to authenticate this user. This function is used server side.
     * The resulting token should be passed to the client side when the users registers or logs in
     *
     * @param {string} userID The User ID
     * @param {number} [exp] The expiration time for the token expressed in the number of seconds since the epoch
     *
     * @return {string} Returns a token
     */

  }, {
    key: "createToken",
    value: function createToken(userID, exp) {
      if (this.secret == null) {
        throw Error("tokens can only be created server-side using the API Secret");
      }

      var extra = {};

      if (exp) {
        extra.exp = exp;
      }

      return JWTUserToken(this.secret, userID, extra, {});
    }
    /**
     * on - Listen to events on all channels and users your watching
     *
     * client.on('message.new', event => {console.log("my new message", event, channel.state.messages)})
     * or
     * client.on(event => {console.log(event.type)})
     *
     * @param {EventHandler<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType> | string} callbackOrString  The event type to listen for (optional)
     * @param {EventHandler<AttachmentType, ChannelType, CommandType, EventType, MessageType, ReactionType, UserType>} [callbackOrNothing] The callback to call
     *
     * @return {{ unsubscribe: () => void }} Description
     */

  }, {
    key: "on",
    value: function on(callbackOrString, callbackOrNothing) {
      var _this2 = this;

      var key = callbackOrNothing ? callbackOrString : 'all';
      var valid = isValidEventType(key);

      if (!valid) {
        throw Error("Invalid event type ".concat(key));
      }

      var callback = callbackOrNothing ? callbackOrNothing : callbackOrString;

      if (!(key in this.listeners)) {
        this.listeners[key] = [];
      }

      this.logger('info', "Attaching listener for ".concat(key, " event"), {
        tags: ['event', 'client']
      });
      this.listeners[key].push(callback);
      return {
        unsubscribe: function unsubscribe() {
          _this2.listeners[key] = _this2.listeners[key].filter(function (el) {
            return el !== callback;
          });
        }
      };
    }
    /**
     * off - Remove the event handler
     *
     */

  }, {
    key: "off",
    value: function off(callbackOrString, callbackOrNothing) {
      var key = callbackOrNothing ? callbackOrString : 'all';
      var valid = isValidEventType(key);

      if (!valid) {
        throw Error("Invalid event type ".concat(key));
      }

      var callback = callbackOrNothing ? callbackOrNothing : callbackOrString;

      if (!(key in this.listeners)) {
        this.listeners[key] = [];
      }

      this.logger('info', "Removing listener for ".concat(key, " event"), {
        tags: ['event', 'client']
      });
      this.listeners[key] = this.listeners[key].filter(function (value) {
        return value !== callback;
      });
    }
  }, {
    key: "_logApiRequest",
    value: function _logApiRequest(type, url, data, config) {
      this.logger('info', "client: ".concat(type, " - Request - ").concat(url), {
        tags: ['api', 'api_request', 'client'],
        url: url,
        payload: data,
        config: config
      });
    }
  }, {
    key: "_logApiResponse",
    value: function _logApiResponse(type, url, response) {
      this.logger('info', "client:".concat(type, " - Response - url: ").concat(url, " > status ").concat(response.status), {
        tags: ['api', 'api_response', 'client'],
        url: url,
        response: response
      });
    }
  }, {
    key: "_logApiError",
    value: function _logApiError(type, url, error) {
      this.logger('error', "client:".concat(type, " - Error - url: ").concat(url), {
        tags: ['api', 'api_response', 'client'],
        url: url,
        error: error
      });
    }
  }, {
    key: "get",
    value: function get(url, params) {
      return this.doAxiosRequest('get', url, null, {
        params: params
      });
    }
  }, {
    key: "put",
    value: function put(url, data) {
      return this.doAxiosRequest('put', url, data);
    }
  }, {
    key: "post",
    value: function post(url, data) {
      return this.doAxiosRequest('post', url, data);
    }
  }, {
    key: "patch",
    value: function patch(url, data) {
      return this.doAxiosRequest('patch', url, data);
    }
  }, {
    key: "delete",
    value: function _delete(url, params) {
      return this.doAxiosRequest('delete', url, null, {
        params: params
      });
    }
  }, {
    key: "sendFile",
    value: function sendFile(url, uri, name, contentType, user) {
      var data = addFileToFormData(uri, name, contentType);
      if (user != null) data.append('user', JSON.stringify(user));
      return this.doAxiosRequest('post', url, data, {
        headers: data.getHeaders ? data.getHeaders() : {},
        // node vs browser
        config: {
          timeout: 0,
          maxContentLength: Infinity,
          maxBodyLength: Infinity
        }
      });
    }
  }, {
    key: "errorFromResponse",
    value: function errorFromResponse(response) {
      var err;
      err = new Error("StreamChat error HTTP code: ".concat(response.status));

      if (response.data && response.data.code) {
        err = new Error("StreamChat error code ".concat(response.data.code, ": ").concat(response.data.message));
        err.code = response.data.code;
      }

      err.response = response;
      err.status = response.status;
      return err;
    }
  }, {
    key: "handleResponse",
    value: function handleResponse(response) {
      var data = response.data;

      if ((response.status + '')[0] !== '2') {
        throw this.errorFromResponse(response);
      }

      return data;
    }
  }, {
    key: "_handleClientEvent",
    value: function _handleClientEvent(event) {
      var _event$me, _event$me2;

      var client = this;
      this.logger('info', "client:_handleClientEvent - Received event of type { ".concat(event.type, " }"), {
        tags: ['event', 'client'],
        event: event
      }); // update the client.state with any changes to users

      if (event.user && (event.type === 'user.presence.changed' || event.type === 'user.updated')) {
        var _event$user;

        if (((_event$user = event.user) === null || _event$user === void 0 ? void 0 : _event$user.id) === this.userID) {
          this.user = this.user && _objectSpread$4(_objectSpread$4({}, this.user), event.user); // Updating only available properties in _user object.

          Object.keys(event.user).forEach(function (key) {
            if (client._user && key in client._user) {
              // @ts-expect-error
              client._user[key] = event.user[key];
            }
          });
        }

        client.state.updateUser(event.user);

        client._updateUserReferences(event.user);
      }

      if (event.type === 'health.check' && event.me) {
        client.user = event.me;
        client.state.updateUser(event.me);
        client.mutedChannels = event.me.channel_mutes;
        client.mutedUsers = event.me.mutes;
      }

      if (event.channel && event.type === 'notification.message_new') {
        this.configs[event.channel.type] = event.channel.config;
      }

      if (event.type === 'notification.channel_mutes_updated' && (_event$me = event.me) !== null && _event$me !== void 0 && _event$me.channel_mutes) {
        this.mutedChannels = event.me.channel_mutes;
      }

      if (event.type === 'notification.mutes_updated' && (_event$me2 = event.me) !== null && _event$me2 !== void 0 && _event$me2.mutes) {
        this.mutedUsers = event.me.mutes;
      }
    }
  }, {
    key: "_muteStatus",
    value: function _muteStatus(cid) {
      var muteStatus;
      this.mutedChannels.forEach(function (mute) {
        var _mute$channel;

        if (((_mute$channel = mute.channel) === null || _mute$channel === void 0 ? void 0 : _mute$channel.cid) === cid) {
          var muted = true;

          if (mute.expires) {
            muted = new Date(mute.expires).getTime() > new Date().getTime();
          }

          muteStatus = {
            muted: muted,
            createdAt: mute.created_at ? new Date(mute.created_at) : new Date(),
            expiresAt: mute.expires ? new Date(mute.expires) : null
          };
        }
      });

      if (muteStatus) {
        return muteStatus;
      }

      return {
        muted: false,
        createdAt: null,
        expiresAt: null
      };
    }
  }, {
    key: "_updateUserReferences",

    /*
    _updateUserReferences updates the members and watchers of the currently active channels
    that contain this user
    */
    value: function _updateUserReferences(user) {
      var refMap = this.state.userChannelReferences[user.id] || {};
      var refs = Object.keys(refMap);

      for (var _i3 = 0, _refs = refs; _i3 < _refs.length; _i3++) {
        var _channelID = _refs[_i3];
        var c = this.activeChannels[_channelID]; // search the members and watchers and update as needed...

        if (c && c.state) {
          if (c.state.members[user.id]) {
            c.state.members = c.state.members.setIn([user.id, 'user'], user);
          }

          if (c.state.watchers[user.id]) {
            c.state.watchers = c.state.watchers.setIn([user.id, 'user'], user);
          }
        }
      }
    }
  }, {
    key: "connect",
    value: function () {
      var _connect = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee8() {
        var client, warmUpPromise, handshake;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                this.connecting = true;
                client = this;
                this.failures = 0;

                if (!(client.userID == null || this._user == null)) {
                  _context8.next = 5;
                  break;
                }

                throw Error('Call connectUser or connectAnonymousUser before starting the connection');

              case 5:
                if (!(client.wsBaseURL == null)) {
                  _context8.next = 7;
                  break;
                }

                throw Error('Websocket base url not set');

              case 7:
                if (!(client.clientID == null)) {
                  _context8.next = 9;
                  break;
                }

                throw Error('clientID is not set');

              case 9:
                // The StableWSConnection handles all the reconnection logic.
                this.wsConnection = new StableWSConnection({
                  wsBaseURL: client.wsBaseURL,
                  clientID: client.clientID,
                  userID: client.userID,
                  tokenManager: client.tokenManager,
                  user: this._user,
                  authType: this.getAuthType(),
                  userAgent: this.getUserAgent(),
                  apiKey: this.key,
                  recoverCallback: this.recoverState,
                  messageCallback: this.handleEvent,
                  eventCallback: this.dispatchEvent,
                  logger: this.logger
                });

                if (this.options.warmUp) {
                  warmUpPromise = this.doAxiosRequest('options', this.baseURL + '/connect');
                }

                _context8.next = 13;
                return this.wsConnection.connect();

              case 13:
                handshake = _context8.sent;
                _context8.prev = 14;
                _context8.next = 17;
                return warmUpPromise;

              case 17:
                _context8.next = 22;
                break;

              case 19:
                _context8.prev = 19;
                _context8.t0 = _context8["catch"](14);
                this.logger('error', 'Warmup request failed', {
                  error: _context8.t0
                });

              case 22:
                this.connectionID = this.wsConnection.connectionID;
                return _context8.abrupt("return", handshake);

              case 24:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this, [[14, 19]]);
      }));

      function connect() {
        return _connect.apply(this, arguments);
      }

      return connect;
    }()
    /**
     * queryUsers - Query users and watch user presence
     *
     * @param {UserFilters<UserType>} filterConditions MongoDB style filter conditions
     * @param {UserSort<UserType>} sort Sort options, for instance [{last_active: -1}].
     * When using multiple fields, make sure you use array of objects to guarantee field order, for instance [{last_active: -1}, {created_at: 1}]
     * @param {UserOptions} options Option object, {presence: true}
     *
     * @return {Promise<APIResponse & { users: Array<UserResponse<UserType>> }>} User Query Response
     */

  }, {
    key: "queryUsers",
    value: function () {
      var _queryUsers = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee9(filterConditions) {
        var sort,
            options,
            defaultOptions,
            data,
            _args9 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                sort = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : [];
                options = _args9.length > 2 && _args9[2] !== undefined ? _args9[2] : {};
                defaultOptions = {
                  presence: false
                }; // Make sure we wait for the connect promise if there is a pending one

                _context9.next = 5;
                return this.setUserPromise;

              case 5:
                if (!this._hasConnectionID()) {
                  defaultOptions.presence = false;
                } // Return a list of users


                _context9.next = 8;
                return this.get(this.baseURL + '/users', {
                  payload: _objectSpread$4(_objectSpread$4({
                    filter_conditions: filterConditions,
                    sort: normalizeQuerySort(sort)
                  }, defaultOptions), options)
                });

              case 8:
                data = _context9.sent;
                this.state.updateUsers(data.users);
                return _context9.abrupt("return", data);

              case 11:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function queryUsers(_x7) {
        return _queryUsers.apply(this, arguments);
      }

      return queryUsers;
    }()
    /**
     * queryChannels - Query channels
     *
     * @param {ChannelFilters<ChannelType, CommandType, UserType>} filterConditions object MongoDB style filters
     * @param {ChannelSort<ChannelType>} [sort] Sort options, for instance {created_at: -1}.
     * When using multiple fields, make sure you use array of objects to guarantee field order, for instance [{last_updated: -1}, {created_at: 1}]
     * @param {ChannelOptions} [options] Options object
     *
     * @return {Promise<APIResponse & { channels: Array<ChannelAPIResponse<AttachmentType,ChannelType,CommandType,MessageType,ReactionType,UserType>>}> } search channels response
     */

  }, {
    key: "queryChannels",
    value: function () {
      var _queryChannels = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee10(filterConditions) {
        var sort,
            options,
            defaultOptions,
            payload,
            data,
            channels,
            _iterator,
            _step,
            channelState,
            _iterator2,
            _step2,
            _channelState,
            c,
            _args10 = arguments;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                sort = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : [];
                options = _args10.length > 2 && _args10[2] !== undefined ? _args10[2] : {};
                defaultOptions = {
                  state: true,
                  watch: true,
                  presence: false
                }; // Make sure we wait for the connect promise if there is a pending one

                _context10.next = 5;
                return this.setUserPromise;

              case 5:
                if (!this._hasConnectionID()) {
                  defaultOptions.watch = false;
                } // Return a list of channels


                payload = _objectSpread$4(_objectSpread$4({
                  filter_conditions: filterConditions,
                  sort: normalizeQuerySort(sort)
                }, defaultOptions), options);
                _context10.next = 9;
                return this.post(this.baseURL + '/channels', payload);

              case 9:
                data = _context10.sent;
                channels = []; // update our cache of the configs

                _iterator = _createForOfIteratorHelper$3(data.channels);

                try {
                  for (_iterator.s(); !(_step = _iterator.n()).done;) {
                    channelState = _step.value;

                    this._addChannelConfig(channelState);
                  }
                } catch (err) {
                  _iterator.e(err);
                } finally {
                  _iterator.f();
                }

                _iterator2 = _createForOfIteratorHelper$3(data.channels);

                try {
                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                    _channelState = _step2.value;
                    c = this.channel(_channelState.channel.type, _channelState.channel.id);
                    c.data = _channelState.channel;
                    c.initialized = true;

                    c._initializeState(_channelState);

                    channels.push(c);
                  }
                } catch (err) {
                  _iterator2.e(err);
                } finally {
                  _iterator2.f();
                }

                return _context10.abrupt("return", channels);

              case 16:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function queryChannels(_x8) {
        return _queryChannels.apply(this, arguments);
      }

      return queryChannels;
    }()
    /**
     * search - Query messages
     *
     * @param {ChannelFilters<ChannelType, CommandType, UserType>} filterConditions MongoDB style filter conditions
     * @param {MessageFilters<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType> | string} query search query or object MongoDB style filters
     * @param {SearchOptions} [options] Option object, {user_id: 'tommaso'}
     *
     * @return {Promise<SearchAPIResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>>} search messages response
     */

  }, {
    key: "search",
    value: function () {
      var _search = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee11(filterConditions, query) {
        var options,
            payload,
            _args11 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                options = _args11.length > 2 && _args11[2] !== undefined ? _args11[2] : {};
                // Return a list of channels
                payload = _objectSpread$4({
                  filter_conditions: filterConditions
                }, options);

                if (!(typeof query === 'string')) {
                  _context11.next = 6;
                  break;
                }

                payload.query = query;
                _context11.next = 11;
                break;

              case 6:
                if (!(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2___default()(query) === 'object')) {
                  _context11.next = 10;
                  break;
                }

                payload.message_filter_conditions = query;
                _context11.next = 11;
                break;

              case 10:
                throw Error("Invalid type ".concat(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2___default()(query), " for query parameter"));

              case 11:
                _context11.next = 13;
                return this.setUserPromise;

              case 13:
                _context11.next = 15;
                return this.get(this.baseURL + '/search', {
                  payload: payload
                });

              case 15:
                return _context11.abrupt("return", _context11.sent);

              case 16:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function search(_x9, _x10) {
        return _search.apply(this, arguments);
      }

      return search;
    }()
    /**
     * addDevice - Adds a push device for a user.
     *
     * @param {string} id the device id
     * @param {'apn' | 'firebase'} push_provider the push provider (apn or firebase)
     * @param {string} [userID] the user id (defaults to current user)
     *
     */

  }, {
    key: "addDevice",
    value: function () {
      var _addDevice = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee12(id, push_provider, userID) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return this.post(this.baseURL + '/devices', _objectSpread$4({
                  id: id,
                  push_provider: push_provider
                }, userID != null ? {
                  user_id: userID
                } : {}));

              case 2:
                return _context12.abrupt("return", _context12.sent);

              case 3:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function addDevice(_x11, _x12, _x13) {
        return _addDevice.apply(this, arguments);
      }

      return addDevice;
    }()
    /**
     * getDevices - Returns the devices associated with a current user
     *
     * @param {string} [userID] User ID. Only works on serverside
     *
     * @return {APIResponse & Device<UserType>[]} Array of devices
     */

  }, {
    key: "getDevices",
    value: function () {
      var _getDevices = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee13(userID) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return this.get(this.baseURL + '/devices', userID ? {
                  user_id: userID
                } : {});

              case 2:
                return _context13.abrupt("return", _context13.sent);

              case 3:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));

      function getDevices(_x14) {
        return _getDevices.apply(this, arguments);
      }

      return getDevices;
    }()
    /**
     * removeDevice - Removes the device with the given id. Clientside users can only delete their own devices
     *
     * @param {string} id The device id
     * @param {string} [userID] The user id. Only specify this for serverside requests
     *
     */

  }, {
    key: "removeDevice",
    value: function () {
      var _removeDevice = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee14(id, userID) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return this.delete(this.baseURL + '/devices', _objectSpread$4({
                  id: id
                }, userID ? {
                  user_id: userID
                } : {}));

              case 2:
                return _context14.abrupt("return", _context14.sent);

              case 3:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function removeDevice(_x15, _x16) {
        return _removeDevice.apply(this, arguments);
      }

      return removeDevice;
    }()
  }, {
    key: "_addChannelConfig",
    value: function _addChannelConfig(channelState) {
      this.configs[channelState.channel.type] = channelState.channel.config;
    }
    /**
     * channel - Returns a new channel with the given type, id and custom data
     *
     * If you want to create a unique conversation between 2 or more users; you can leave out the ID parameter and provide the list of members.
     * Make sure to await channel.create() or channel.watch() before accessing channel functions:
     * ie. channel = client.channel("messaging", {members: ["tommaso", "thierry"]})
     * await channel.create() to assign an ID to channel
     *
     * @param {string} channelType The channel type
     * @param {string | ChannelData<ChannelType> | null} [channelIDOrCustom]   The channel ID, you can leave this out if you want to create a conversation channel
     * @param {object} [custom]    Custom data to attach to the channel
     *
     * @return {channel} The channel object, initialize it using channel.watch()
     */

  }, {
    key: "channel",
    value: function channel(channelType, channelIDOrCustom) {
      var custom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      if (!this.userID && !this._isUsingServerAuth()) {
        throw Error('Call connectUser or connectAnonymousUser before creating a channel');
      }

      if (~channelType.indexOf(':')) {
        throw Error("Invalid channel group ".concat(channelType, ", can't contain the : character"));
      } // support channel("messaging", null, {options})
      // support channel("messaging", undefined, {options})
      // support channel("messaging", "", {options})


      if (channelIDOrCustom == null || channelIDOrCustom === '') {
        return new Channel(this, channelType, undefined, custom);
      } // support channel("messaging", {options})


      if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2___default()(channelIDOrCustom) === 'object') {
        return this.getChannelByMembers(channelType, channelIDOrCustom);
      }

      return this.getChannelById(channelType, channelIDOrCustom, custom);
    }
    /**
     * It's a helper method for `client.channel()` method, used to create unique conversation or
     * channel based on member list instead of id.
     *
     * If the channel already exists in `activeChannels` list, then we simply return it, since that
     * means the same channel was already requested or created.
     *
     * Otherwise we create a new instance of Channel class and return it.
     *
     * @private
     *
     * @param {string} channelType The channel type
     * @param {object} [custom]    Custom data to attach to the channel
     *
     * @return {channel} The channel object, initialize it using channel.watch()
     */

  }, {
    key: "updateUser",

    /**
     * @deprecated Please use upsertUser() function instead.
     *
     * updateUser - Update or Create the given user object
     *
     * @param {UserResponse<UserType>} userObject user object, the only required field is the user id. IE {id: "myuser"} is valid
     *
     * @return {Promise<APIResponse & { users: { [key: string]: UserResponse<UserType> } }>}
     */
    value: function () {
      var _updateUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee15(userObject) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return this.upsertUsers([userObject]);

              case 2:
                return _context15.abrupt("return", _context15.sent);

              case 3:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));

      function updateUser(_x17) {
        return _updateUser.apply(this, arguments);
      }

      return updateUser;
    }()
    /**
     * partialUpdateUser - Update the given user object
     *
     * @param {PartialUserUpdate<UserType>} partialUserObject which should contain id and any of "set" or "unset" params;
     * example: {id: "user1", set:{field: value}, unset:["field2"]}
     *
     * @return {Promise<APIResponse & { users: { [key: string]: UserResponse<UserType> } }>} list of updated users
     */

  }, {
    key: "partialUpdateUser",
    value: function () {
      var _partialUpdateUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee16(partialUserObject) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return this.partialUpdateUsers([partialUserObject]);

              case 2:
                return _context16.abrupt("return", _context16.sent);

              case 3:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this);
      }));

      function partialUpdateUser(_x18) {
        return _partialUpdateUser.apply(this, arguments);
      }

      return partialUpdateUser;
    }()
    /**
     * upsertUsers - Batch upsert the list of users
     *
     * @param {UserResponse<UserType>[]} users list of users
     *
     * @return {Promise<APIResponse & { users: { [key: string]: UserResponse<UserType> } }>}
     */

  }, {
    key: "upsertUsers",
    value: function () {
      var _upsertUsers = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee17(users) {
        var userMap, _iterator3, _step3, userObject;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                userMap = {};
                _iterator3 = _createForOfIteratorHelper$3(users);
                _context17.prev = 2;

                _iterator3.s();

              case 4:
                if ((_step3 = _iterator3.n()).done) {
                  _context17.next = 11;
                  break;
                }

                userObject = _step3.value;

                if (userObject.id) {
                  _context17.next = 8;
                  break;
                }

                throw Error('User ID is required when updating a user');

              case 8:
                userMap[userObject.id] = userObject;

              case 9:
                _context17.next = 4;
                break;

              case 11:
                _context17.next = 16;
                break;

              case 13:
                _context17.prev = 13;
                _context17.t0 = _context17["catch"](2);

                _iterator3.e(_context17.t0);

              case 16:
                _context17.prev = 16;

                _iterator3.f();

                return _context17.finish(16);

              case 19:
                _context17.next = 21;
                return this.post(this.baseURL + '/users', {
                  users: userMap
                });

              case 21:
                return _context17.abrupt("return", _context17.sent);

              case 22:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this, [[2, 13, 16, 19]]);
      }));

      function upsertUsers(_x19) {
        return _upsertUsers.apply(this, arguments);
      }

      return upsertUsers;
    }()
    /**
     * upsertUser - Update or Create the given user object
     *
     * @param {UserResponse<UserType>} userObject user object, the only required field is the user id. IE {id: "myuser"} is valid
     *
     * @return {Promise<APIResponse & { users: { [key: string]: UserResponse<UserType> } }>}
     */

  }, {
    key: "upsertUser",
    value: function upsertUser(userObject) {
      return this.upsertUsers([userObject]);
    }
    /**
     * @deprecated Please use upsertUsers() function instead.
     *
     * updateUsers - Batch update the list of users
     *
     * @param {UserResponse<UserType>[]} users list of users
     *
     * @return {Promise<APIResponse & { users: { [key: string]: UserResponse<UserType> } }>}
     */

  }, {
    key: "updateUsers",
    value: function updateUsers(users) {
      return this.upsertUsers(users);
    }
    /**
     * partialUpdateUsers - Batch partial update of users
     *
     * @param {PartialUserUpdate<UserType>[]} users list of partial update requests
     *
     * @return {Promise<APIResponse & { users: { [key: string]: UserResponse<UserType> } }>}
     */

  }, {
    key: "partialUpdateUsers",
    value: function () {
      var _partialUpdateUsers = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee18(users) {
        var _iterator4, _step4, userObject;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                _iterator4 = _createForOfIteratorHelper$3(users);
                _context18.prev = 1;

                _iterator4.s();

              case 3:
                if ((_step4 = _iterator4.n()).done) {
                  _context18.next = 9;
                  break;
                }

                userObject = _step4.value;

                if (userObject.id) {
                  _context18.next = 7;
                  break;
                }

                throw Error('User ID is required when updating a user');

              case 7:
                _context18.next = 3;
                break;

              case 9:
                _context18.next = 14;
                break;

              case 11:
                _context18.prev = 11;
                _context18.t0 = _context18["catch"](1);

                _iterator4.e(_context18.t0);

              case 14:
                _context18.prev = 14;

                _iterator4.f();

                return _context18.finish(14);

              case 17:
                _context18.next = 19;
                return this.patch(this.baseURL + '/users', {
                  users: users
                });

              case 19:
                return _context18.abrupt("return", _context18.sent);

              case 20:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this, [[1, 11, 14, 17]]);
      }));

      function partialUpdateUsers(_x20) {
        return _partialUpdateUsers.apply(this, arguments);
      }

      return partialUpdateUsers;
    }()
  }, {
    key: "deleteUser",
    value: function () {
      var _deleteUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee19(userID, params) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return this.delete(this.baseURL + "/users/".concat(userID), params);

              case 2:
                return _context19.abrupt("return", _context19.sent);

              case 3:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));

      function deleteUser(_x21, _x22) {
        return _deleteUser.apply(this, arguments);
      }

      return deleteUser;
    }()
  }, {
    key: "reactivateUser",
    value: function () {
      var _reactivateUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee20(userID, options) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                _context20.next = 2;
                return this.post(this.baseURL + "/users/".concat(userID, "/reactivate"), _objectSpread$4({}, options));

              case 2:
                return _context20.abrupt("return", _context20.sent);

              case 3:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20, this);
      }));

      function reactivateUser(_x23, _x24) {
        return _reactivateUser.apply(this, arguments);
      }

      return reactivateUser;
    }()
  }, {
    key: "deactivateUser",
    value: function () {
      var _deactivateUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee21(userID, options) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                _context21.next = 2;
                return this.post(this.baseURL + "/users/".concat(userID, "/deactivate"), _objectSpread$4({}, options));

              case 2:
                return _context21.abrupt("return", _context21.sent);

              case 3:
              case "end":
                return _context21.stop();
            }
          }
        }, _callee21, this);
      }));

      function deactivateUser(_x25, _x26) {
        return _deactivateUser.apply(this, arguments);
      }

      return deactivateUser;
    }()
  }, {
    key: "exportUser",
    value: function () {
      var _exportUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee22(userID, options) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                _context22.next = 2;
                return this.get(this.baseURL + "/users/".concat(userID, "/export"), _objectSpread$4({}, options));

              case 2:
                return _context22.abrupt("return", _context22.sent);

              case 3:
              case "end":
                return _context22.stop();
            }
          }
        }, _callee22, this);
      }));

      function exportUser(_x27, _x28) {
        return _exportUser.apply(this, arguments);
      }

      return exportUser;
    }()
    /** banUser - bans a user from all channels
     *
     * @param {string} targetUserID
     * @param {BanUserOptions<UserType>} [options]
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "banUser",
    value: function () {
      var _banUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee23(targetUserID, options) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee23$(_context23) {
          while (1) {
            switch (_context23.prev = _context23.next) {
              case 0:
                if ((options === null || options === void 0 ? void 0 : options.user_id) !== undefined) {
                  options.banned_by_id = options.user_id;
                  delete options.user_id;
                  console.warn("banUser: 'user_id' is deprecated, please consider switching to 'banned_by_id'");
                }

                if ((options === null || options === void 0 ? void 0 : options.user) !== undefined) {
                  options.banned_by = options.user;
                  delete options.user;
                  console.warn("banUser: 'user' is deprecated, please consider switching to 'banned_by'");
                }

                _context23.next = 4;
                return this.post(this.baseURL + '/moderation/ban', _objectSpread$4({
                  target_user_id: targetUserID
                }, options));

              case 4:
                return _context23.abrupt("return", _context23.sent);

              case 5:
              case "end":
                return _context23.stop();
            }
          }
        }, _callee23, this);
      }));

      function banUser(_x29, _x30) {
        return _banUser.apply(this, arguments);
      }

      return banUser;
    }()
    /** unbanUser - revoke global ban for a user
     *
     * @param {string} targetUserID
     * @param {UnBanUserOptions} [options]
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "unbanUser",
    value: function () {
      var _unbanUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee24(targetUserID, options) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee24$(_context24) {
          while (1) {
            switch (_context24.prev = _context24.next) {
              case 0:
                _context24.next = 2;
                return this.delete(this.baseURL + '/moderation/ban', _objectSpread$4({
                  target_user_id: targetUserID
                }, options));

              case 2:
                return _context24.abrupt("return", _context24.sent);

              case 3:
              case "end":
                return _context24.stop();
            }
          }
        }, _callee24, this);
      }));

      function unbanUser(_x31, _x32) {
        return _unbanUser.apply(this, arguments);
      }

      return unbanUser;
    }()
    /** shadowBan - shadow bans a user from all channels
     *
     * @param {string} targetUserID
     * @param {BanUserOptions<UserType>} [options]
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "shadowBan",
    value: function () {
      var _shadowBan = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee25(targetUserID, options) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee25$(_context25) {
          while (1) {
            switch (_context25.prev = _context25.next) {
              case 0:
                _context25.next = 2;
                return this.banUser(targetUserID, _objectSpread$4({
                  shadow: true
                }, options));

              case 2:
                return _context25.abrupt("return", _context25.sent);

              case 3:
              case "end":
                return _context25.stop();
            }
          }
        }, _callee25, this);
      }));

      function shadowBan(_x33, _x34) {
        return _shadowBan.apply(this, arguments);
      }

      return shadowBan;
    }()
    /** removeShadowBan - revoke global shadow ban for a user
     *
     * @param {string} targetUserID
     * @param {UnBanUserOptions} [options]
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "removeShadowBan",
    value: function () {
      var _removeShadowBan = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee26(targetUserID, options) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee26$(_context26) {
          while (1) {
            switch (_context26.prev = _context26.next) {
              case 0:
                _context26.next = 2;
                return this.unbanUser(targetUserID, _objectSpread$4({
                  shadow: true
                }, options));

              case 2:
                return _context26.abrupt("return", _context26.sent);

              case 3:
              case "end":
                return _context26.stop();
            }
          }
        }, _callee26, this);
      }));

      function removeShadowBan(_x35, _x36) {
        return _removeShadowBan.apply(this, arguments);
      }

      return removeShadowBan;
    }()
    /** muteUser - mutes a user
     *
     * @param {string} targetID
     * @param {string} [userID] Only used with serverside auth
     * @param {MuteUserOptions<UserType>} [options]
     * @returns {Promise<MuteUserResponse<ChannelType, CommandType, UserType>>}
     */

  }, {
    key: "muteUser",
    value: function () {
      var _muteUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee27(targetID, userID) {
        var options,
            _args27 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee27$(_context27) {
          while (1) {
            switch (_context27.prev = _context27.next) {
              case 0:
                options = _args27.length > 2 && _args27[2] !== undefined ? _args27[2] : {};
                _context27.next = 3;
                return this.post(this.baseURL + '/moderation/mute', _objectSpread$4(_objectSpread$4({
                  target_id: targetID
                }, userID ? {
                  user_id: userID
                } : {}), options));

              case 3:
                return _context27.abrupt("return", _context27.sent);

              case 4:
              case "end":
                return _context27.stop();
            }
          }
        }, _callee27, this);
      }));

      function muteUser(_x37, _x38) {
        return _muteUser.apply(this, arguments);
      }

      return muteUser;
    }()
    /** unmuteUser - unmutes a user
     *
     * @param {string} targetID
     * @param {string} [currentUserID] Only used with serverside auth
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "unmuteUser",
    value: function () {
      var _unmuteUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee28(targetID, currentUserID) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee28$(_context28) {
          while (1) {
            switch (_context28.prev = _context28.next) {
              case 0:
                _context28.next = 2;
                return this.post(this.baseURL + '/moderation/unmute', _objectSpread$4({
                  target_id: targetID
                }, currentUserID ? {
                  user_id: currentUserID
                } : {}));

              case 2:
                return _context28.abrupt("return", _context28.sent);

              case 3:
              case "end":
                return _context28.stop();
            }
          }
        }, _callee28, this);
      }));

      function unmuteUser(_x39, _x40) {
        return _unmuteUser.apply(this, arguments);
      }

      return unmuteUser;
    }()
    /** userMuteStatus - check if a user is muted or not, can be used after setUser() is called
     *
     * @param {string} targetID
     * @returns {boolean}
     */

  }, {
    key: "userMuteStatus",
    value: function userMuteStatus(targetID) {
      if (!this.user || !this.wsPromise) throw new Error('Make sure to await setUser() first.');

      for (var i = 0; i < this.mutedUsers.length; i += 1) {
        if (this.mutedUsers[i].target.id === targetID) return true;
      }

      return false;
    }
    /**
     * flagMessage - flag a message
     * @param {string} targetMessageID
     * @param {string} [options.user_id] currentUserID, only used with serverside auth
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "flagMessage",
    value: function () {
      var _flagMessage = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee29(targetMessageID) {
        var options,
            _args29 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee29$(_context29) {
          while (1) {
            switch (_context29.prev = _context29.next) {
              case 0:
                options = _args29.length > 1 && _args29[1] !== undefined ? _args29[1] : {};
                _context29.next = 3;
                return this.post(this.baseURL + '/moderation/flag', _objectSpread$4({
                  target_message_id: targetMessageID
                }, options));

              case 3:
                return _context29.abrupt("return", _context29.sent);

              case 4:
              case "end":
                return _context29.stop();
            }
          }
        }, _callee29, this);
      }));

      function flagMessage(_x41) {
        return _flagMessage.apply(this, arguments);
      }

      return flagMessage;
    }()
    /**
     * flagUser - flag a user
     * @param {string} targetID
     * @param {string} [options.user_id] currentUserID, only used with serverside auth
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "flagUser",
    value: function () {
      var _flagUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee30(targetID) {
        var options,
            _args30 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee30$(_context30) {
          while (1) {
            switch (_context30.prev = _context30.next) {
              case 0:
                options = _args30.length > 1 && _args30[1] !== undefined ? _args30[1] : {};
                _context30.next = 3;
                return this.post(this.baseURL + '/moderation/flag', _objectSpread$4({
                  target_user_id: targetID
                }, options));

              case 3:
                return _context30.abrupt("return", _context30.sent);

              case 4:
              case "end":
                return _context30.stop();
            }
          }
        }, _callee30, this);
      }));

      function flagUser(_x42) {
        return _flagUser.apply(this, arguments);
      }

      return flagUser;
    }()
    /**
     * unflagMessage - unflag a message
     * @param {string} targetMessageID
     * @param {string} [options.user_id] currentUserID, only used with serverside auth
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "unflagMessage",
    value: function () {
      var _unflagMessage = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee31(targetMessageID) {
        var options,
            _args31 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee31$(_context31) {
          while (1) {
            switch (_context31.prev = _context31.next) {
              case 0:
                options = _args31.length > 1 && _args31[1] !== undefined ? _args31[1] : {};
                _context31.next = 3;
                return this.post(this.baseURL + '/moderation/unflag', _objectSpread$4({
                  target_message_id: targetMessageID
                }, options));

              case 3:
                return _context31.abrupt("return", _context31.sent);

              case 4:
              case "end":
                return _context31.stop();
            }
          }
        }, _callee31, this);
      }));

      function unflagMessage(_x43) {
        return _unflagMessage.apply(this, arguments);
      }

      return unflagMessage;
    }()
    /**
     * unflagUser - unflag a user
     * @param {string} targetID
     * @param {string} [options.user_id] currentUserID, only used with serverside auth
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "unflagUser",
    value: function () {
      var _unflagUser = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee32(targetID) {
        var options,
            _args32 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee32$(_context32) {
          while (1) {
            switch (_context32.prev = _context32.next) {
              case 0:
                options = _args32.length > 1 && _args32[1] !== undefined ? _args32[1] : {};
                _context32.next = 3;
                return this.post(this.baseURL + '/moderation/unflag', _objectSpread$4({
                  target_user_id: targetID
                }, options));

              case 3:
                return _context32.abrupt("return", _context32.sent);

              case 4:
              case "end":
                return _context32.stop();
            }
          }
        }, _callee32, this);
      }));

      function unflagUser(_x44) {
        return _unflagUser.apply(this, arguments);
      }

      return unflagUser;
    }()
    /**
     * markAllRead - marks all channels for this user as read
     * @param {MarkAllReadOptions<UserType>} [data]
     *
     * @return {Promise<APIResponse>}
     */

  }, {
    key: "markAllRead",
    value: function () {
      var _markAllRead = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee33() {
        var data,
            _args33 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee33$(_context33) {
          while (1) {
            switch (_context33.prev = _context33.next) {
              case 0:
                data = _args33.length > 0 && _args33[0] !== undefined ? _args33[0] : {};
                _context33.next = 3;
                return this.post(this.baseURL + '/channels/read', _objectSpread$4({}, data));

              case 3:
              case "end":
                return _context33.stop();
            }
          }
        }, _callee33, this);
      }));

      function markAllRead() {
        return _markAllRead.apply(this, arguments);
      }

      return markAllRead;
    }()
  }, {
    key: "createCommand",
    value: function createCommand(data) {
      return this.post(this.baseURL + '/commands', data);
    }
  }, {
    key: "getCommand",
    value: function getCommand(name) {
      return this.get(this.baseURL + "/commands/".concat(name));
    }
  }, {
    key: "updateCommand",
    value: function updateCommand(name, data) {
      return this.put(this.baseURL + "/commands/".concat(name), data);
    }
  }, {
    key: "deleteCommand",
    value: function deleteCommand(name) {
      return this.delete(this.baseURL + "/commands/".concat(name));
    }
  }, {
    key: "listCommands",
    value: function listCommands() {
      return this.get(this.baseURL + "/commands");
    }
  }, {
    key: "createChannelType",
    value: function createChannelType(data) {
      var channelData = _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default()({}, {
        commands: ['all']
      }, data);

      return this.post(this.baseURL + '/channeltypes', channelData);
    }
  }, {
    key: "getChannelType",
    value: function getChannelType(channelType) {
      return this.get(this.baseURL + "/channeltypes/".concat(channelType));
    }
  }, {
    key: "updateChannelType",
    value: function updateChannelType(channelType, data) {
      return this.put(this.baseURL + "/channeltypes/".concat(channelType), data);
    }
  }, {
    key: "deleteChannelType",
    value: function deleteChannelType(channelType) {
      return this.delete(this.baseURL + "/channeltypes/".concat(channelType));
    }
  }, {
    key: "listChannelTypes",
    value: function listChannelTypes() {
      return this.get(this.baseURL + "/channeltypes");
    }
    /**
     * translateMessage - adds the translation to the message
     *
     * @param {string} messageId
     * @param {string} language
     *
     * @return {APIResponse & MessageResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>} Response that includes the message
     */

  }, {
    key: "translateMessage",
    value: function () {
      var _translateMessage = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee34(messageId, language) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee34$(_context34) {
          while (1) {
            switch (_context34.prev = _context34.next) {
              case 0:
                _context34.next = 2;
                return this.post(this.baseURL + "/messages/".concat(messageId, "/translate"), {
                  language: language
                });

              case 2:
                return _context34.abrupt("return", _context34.sent);

              case 3:
              case "end":
                return _context34.stop();
            }
          }
        }, _callee34, this);
      }));

      function translateMessage(_x45, _x46) {
        return _translateMessage.apply(this, arguments);
      }

      return translateMessage;
    }()
    /**
     * pinMessage - pins provided message
     * @param {UpdatedMessage<AttachmentType,ChannelType,CommandType,MessageType,ReactionType,UserType>} message object
     * @param {undefined|number|string|Date} timeoutOrExpirationDate expiration date or timeout. Use number type to set timeout in seconds, string or Date to set exact expiration date
     */

  }, {
    key: "pinMessage",
    value: function pinMessage(message, timeoutOrExpirationDate) {
      var pinExpires;

      if (typeof timeoutOrExpirationDate === 'number') {
        var now = new Date();
        now.setSeconds(now.getSeconds() + timeoutOrExpirationDate);
        pinExpires = now.toISOString();
      } else if (isString$1(timeoutOrExpirationDate)) {
        pinExpires = timeoutOrExpirationDate;
      } else if (timeoutOrExpirationDate instanceof Date) {
        pinExpires = timeoutOrExpirationDate.toISOString();
      }

      return this.updateMessage(_objectSpread$4(_objectSpread$4({}, message), {}, {
        pinned: true,
        pin_expires: pinExpires
      }));
    }
    /**
     * unpinMessage - unpins provided message
     * @param {UpdatedMessage<AttachmentType,ChannelType,CommandType,MessageType,ReactionType,UserType>} message object
     */

  }, {
    key: "unpinMessage",
    value: function unpinMessage(message) {
      return this.updateMessage(_objectSpread$4(_objectSpread$4({}, message), {}, {
        pinned: false
      }));
    }
    /**
     * updateMessage - Update the given message
     *
     * @param {Omit<MessageResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType>, 'mentioned_users'> & { mentioned_users?: string[] }} message object, id needs to be specified
     * @param {string | { id: string }} [userId]
     *
     * @return {APIResponse & { message: MessageResponse<AttachmentType, ChannelType, CommandType, MessageType, ReactionType, UserType> }} Response that includes the message
     */

  }, {
    key: "updateMessage",
    value: function () {
      var _updateMessage = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee35(message, userId) {
        var clonedMessage, reservedMessageFields;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee35$(_context35) {
          while (1) {
            switch (_context35.prev = _context35.next) {
              case 0:
                if (message.id) {
                  _context35.next = 2;
                  break;
                }

                throw Error('Please specify the message id when calling updateMessage');

              case 2:
                clonedMessage = _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default()({}, message);
                delete clonedMessage.id;
                reservedMessageFields = ['command', 'created_at', 'html', 'latest_reactions', 'own_reactions', 'reaction_counts', 'reply_count', 'type', 'updated_at', 'user'];
                reservedMessageFields.forEach(function (item) {
                  if (clonedMessage[item] != null) {
                    delete clonedMessage[item];
                  }
                });

                if (userId != null) {
                  if (isString$1(userId)) {
                    clonedMessage.user_id = userId;
                  } else {
                    clonedMessage.user = {
                      id: userId.id
                    };
                  }
                }

                _context35.next = 9;
                return this.post(this.baseURL + "/messages/".concat(message.id), {
                  message: clonedMessage
                });

              case 9:
                return _context35.abrupt("return", _context35.sent);

              case 10:
              case "end":
                return _context35.stop();
            }
          }
        }, _callee35, this);
      }));

      function updateMessage(_x47, _x48) {
        return _updateMessage.apply(this, arguments);
      }

      return updateMessage;
    }()
  }, {
    key: "deleteMessage",
    value: function () {
      var _deleteMessage = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee36(messageID, hardDelete) {
        var params;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee36$(_context36) {
          while (1) {
            switch (_context36.prev = _context36.next) {
              case 0:
                params = {};

                if (hardDelete) {
                  params = {
                    hard: true
                  };
                }

                _context36.next = 4;
                return this.delete(this.baseURL + "/messages/".concat(messageID), params);

              case 4:
                return _context36.abrupt("return", _context36.sent);

              case 5:
              case "end":
                return _context36.stop();
            }
          }
        }, _callee36, this);
      }));

      function deleteMessage(_x49, _x50) {
        return _deleteMessage.apply(this, arguments);
      }

      return deleteMessage;
    }()
  }, {
    key: "getMessage",
    value: function () {
      var _getMessage = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee37(messageID) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee37$(_context37) {
          while (1) {
            switch (_context37.prev = _context37.next) {
              case 0:
                _context37.next = 2;
                return this.get(this.baseURL + "/messages/".concat(messageID));

              case 2:
                return _context37.abrupt("return", _context37.sent);

              case 3:
              case "end":
                return _context37.stop();
            }
          }
        }, _callee37, this);
      }));

      function getMessage(_x51) {
        return _getMessage.apply(this, arguments);
      }

      return getMessage;
    }()
    /**
     * @deprecated Please use getUserAgent instead
     */

  }, {
    key: "_userAgent",
    value: function _userAgent() {
      return this.getUserAgent();
    }
  }, {
    key: "getUserAgent",
    value: function getUserAgent() {
      return this.userAgent || "stream-chat-javascript-client-".concat(this.node ? 'node' : 'browser', "-", "2.12.0");
    }
  }, {
    key: "setUserAgent",
    value: function setUserAgent(userAgent) {
      this.userAgent = userAgent;
    }
    /**
     * _isUsingServerAuth - Returns true if we're using server side auth
     */

  }, {
    key: "_enrichAxiosOptions",
    value: function _enrichAxiosOptions() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        params: {},
        headers: {},
        config: {}
      };

      var token = this._getToken();

      return _objectSpread$4({
        params: _objectSpread$4(_objectSpread$4({
          user_id: this.userID
        }, options.params), {}, {
          api_key: this.key,
          connection_id: this.connectionID
        }),
        headers: _objectSpread$4({
          Authorization: token,
          'stream-auth-type': this.getAuthType(),
          'x-stream-client': this._userAgent()
        }, options.headers)
      }, options.config);
    }
  }, {
    key: "_getToken",
    value: function _getToken() {
      if (!this.tokenManager || this.anonymous) return null;
      return this.tokenManager.getToken();
    }
  }, {
    key: "_startCleaning",
    value: function _startCleaning() {
      var that = this;

      if (this.cleaningIntervalRef != null) {
        return;
      }

      this.cleaningIntervalRef = setInterval(function () {
        // call clean on the channel, used for calling the stop.typing event etc.
        for (var _i4 = 0, _Object$values2 = Object.values(that.activeChannels); _i4 < _Object$values2.length; _i4++) {
          var _channel4 = _Object$values2[_i4];

          _channel4.clean();
        }
      }, 500);
    }
  }, {
    key: "verifyWebhook",
    value: function verifyWebhook(requestBody, xSignature) {
      return !!this.secret && CheckSignature(requestBody, this.secret, xSignature);
    }
    /** getPermission - gets the definition for a permission
     *
     * @param {string} name
     * @returns {Promise<PermissionAPIResponse>}
     */

  }, {
    key: "getPermission",
    value: function getPermission(name) {
      return this.get("".concat(this.baseURL, "/custom_permission/").concat(name));
    }
    /** createPermission - creates a custom permission
     *
     * @param {CustomPermissionOptions} permissionData the permission data
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "createPermission",
    value: function createPermission(permissionData) {
      return this.post("".concat(this.baseURL, "/custom_permission"), _objectSpread$4({}, permissionData));
    }
    /** updatePermission - updates an existing custom permission
     *
     * @param {string} name
     * @param {CustomPermissionOptions} permissionData the permission data
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "updatePermission",
    value: function updatePermission(name, permissionData) {
      return this.post("".concat(this.baseURL, "/custom_permission/").concat(name), _objectSpread$4({}, permissionData));
    }
    /** deletePermission - deletes a custom permission
     *
     * @param {string} name
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "deletePermission",
    value: function deletePermission(name) {
      return this.delete("".concat(this.baseURL, "/custom_permission/").concat(name));
    }
    /** listPermissions - returns the list of custom permissions for this application
     *
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "listPermissions",
    value: function listPermissions() {
      return this.get("".concat(this.baseURL, "/custom_permission"));
    }
    /** createRole - creates a custom role
     *
     * @param {string} name the new role name
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "createRole",
    value: function createRole(name) {
      return this.post("".concat(this.baseURL, "/custom_role"), {
        name: name
      });
    }
    /** listRoles - returns the list of custom roles for this application
     *
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "listRoles",
    value: function listRoles() {
      return this.get("".concat(this.baseURL, "/custom_role"));
    }
    /** deleteRole - deletes a custom role
     *
     * @param {string} name the role name
     * @returns {Promise<APIResponse>}
     */

  }, {
    key: "deleteRole",
    value: function deleteRole(name) {
      return this.delete("".concat(this.baseURL, "/custom_role/").concat(name));
    }
    /** sync - returns all events that happened for a list of channels since last sync
     * @param {string[]} channel_cids list of channel CIDs
     * @param {string} last_sync_at last time the user was online and in sync. RFC3339 ie. "2020-05-06T15:05:01.207Z"
     */

  }, {
    key: "sync",
    value: function sync(channel_cids, last_sync_at) {
      return this.post("".concat(this.baseURL, "/sync"), {
        channel_cids: channel_cids,
        last_sync_at: last_sync_at
      });
    }
  }, {
    key: "createBlockList",
    value: function createBlockList(blockList) {
      return this.post("".concat(this.baseURL, "/blocklists"), blockList);
    }
  }, {
    key: "listBlockLists",
    value: function listBlockLists() {
      return this.get("".concat(this.baseURL, "/blocklists"));
    }
  }, {
    key: "getBlockList",
    value: function getBlockList(name) {
      return this.get("".concat(this.baseURL, "/blocklists/").concat(name));
    }
  }, {
    key: "updateBlockList",
    value: function updateBlockList(name, data) {
      return this.put("".concat(this.baseURL, "/blocklists/").concat(name), data);
    }
  }, {
    key: "deleteBlockList",
    value: function deleteBlockList(name) {
      return this.delete("".concat(this.baseURL, "/blocklists/").concat(name));
    }
  }, {
    key: "exportChannels",
    value: function exportChannels(request) {
      var payload = {
        channels: request
      };
      return this.post("".concat(this.baseURL, "/export_channels"), payload);
    }
  }, {
    key: "exportChannel",
    value: function exportChannel(request) {
      return this.exportChannels([request]);
    }
  }, {
    key: "getExportChannelStatus",
    value: function getExportChannelStatus(id) {
      return this.get("".concat(this.baseURL, "/export_channels/").concat(id));
    }
  }], [{
    key: "getInstance",
    value: function getInstance(key, secretOrOptions, options) {
      if (!StreamChat._instance) {
        if (typeof secretOrOptions === 'string') {
          StreamChat._instance = new StreamChat(key, secretOrOptions, options);
        } else {
          StreamChat._instance = new StreamChat(key, secretOrOptions);
        }
      }

      return StreamChat._instance;
    }
  }]);

  return StreamChat;
}();

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(StreamChat, "_instance", void 0);

var Allow = 'Allow';
var Deny = 'Deny';
var AnyResource = ['*'];
var AnyRole = ['*'];
var MaxPriority = 999;
var MinPriority = 1; // deprecated permission object class, you should use the new permission system v2 and use permissions
// defined in BuiltinPermissions to configure your channel types

var Permission = function Permission(name, priority) {
  var resources = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : AnyResource;
  var roles = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : AnyRole;
  var owner = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  var action = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Allow;

  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_7___default()(this, Permission);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "name", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "action", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "owner", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "priority", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "resources", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(this, "roles", void 0);

  this.name = name;
  this.action = action;
  this.owner = owner;
  this.priority = priority;
  this.resources = resources;
  this.roles = roles;
}; // deprecated

var AllowAll = new Permission('Allow all', MaxPriority, AnyResource, AnyRole, false, Allow); // deprecated

var DenyAll = new Permission('Deny all', MinPriority, AnyResource, AnyRole, false, Deny);
var BuiltinRoles = {
  Admin: 'admin',
  Anonymous: 'anonymous',
  ChannelMember: 'channel_member',
  ChannelModerator: 'channel_moderator',
  Guest: 'guest',
  User: 'user'
};
var BuiltinPermissions = {
  AddLinks: 'Add Links',
  BanUser: 'Ban User',
  CreateChannel: 'Create Channel',
  CreateMessage: 'Create Message',
  CreateReaction: 'Create Reaction',
  DeleteAnyAttachment: 'Delete Any Attachment',
  DeleteAnyChannel: 'Delete Any Channel',
  DeleteAnyMessage: 'Delete Any Message',
  DeleteAnyReaction: 'Delete Any Reaction',
  DeleteOwnAttachment: 'Delete Own Attachment',
  DeleteOwnChannel: 'Delete Own Channel',
  DeleteOwnMessage: 'Delete Own Message',
  DeleteOwnReaction: 'Delete Own Reaction',
  ReadAnyChannel: 'Read Any Channel',
  ReadOwnChannel: 'Read Own Channel',
  RunMessageAction: 'Run Message Action',
  UpdateAnyChannel: 'Update Any Channel',
  UpdateAnyMessage: 'Update Any Message',
  UpdateMembersAnyChannel: 'Update Members Any Channel',
  UpdateMembersOwnChannel: 'Update Members Own Channel',
  UpdateOwnChannel: 'Update Own Channel',
  UpdateOwnMessage: 'Update Own Message',
  UploadAttachment: 'Upload Attachment',
  UseFrozenChannel: 'Send messages and reactions to frozen channels'
};


//# sourceMappingURL=browser.es.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("b639").Buffer, __webpack_require__("4362")))

/***/ }),

/***/ "37e8":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var anObject = __webpack_require__("825a");
var objectKeys = __webpack_require__("df75");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "387f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),

/***/ "3934":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),

/***/ "3bbe":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "3ca3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "3f8c":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "3fe3":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js

var ws = null

if (typeof WebSocket !== 'undefined') {
  ws = WebSocket
} else if (typeof MozWebSocket !== 'undefined') {
  ws = MozWebSocket
} else if (typeof global !== 'undefined') {
  ws = global.WebSocket || global.MozWebSocket
} else if (typeof window !== 'undefined') {
  ws = window.WebSocket || window.MozWebSocket
} else if (typeof self !== 'undefined') {
  ws = self.WebSocket || self.MozWebSocket
}

module.exports = ws

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "4082":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("a4d3");

var objectWithoutPropertiesLoose = __webpack_require__("f0e4");

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

module.exports = _objectWithoutProperties;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "4160":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var forEach = __webpack_require__("17c2");

// `Array.prototype.forEach` method
// https://tc39.es/ecma262/#sec-array.prototype.foreach
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "428f":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global;


/***/ }),

/***/ "433e":
/***/ (function(module) {

module.exports = JSON.parse("{\"Smileys & People\":[{\"no\":1,\"code\":\"U+1F600\",\"emoji\":\"😀\",\"description\":\"GRINNING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"grin\"]},{\"no\":2,\"code\":\"U+1F601\",\"emoji\":\"😁\",\"description\":\"GRINNING FACE WITH SMILING EYES\",\"flagged\":false,\"keywords\":[\"eye\",\"face\",\"grin\",\"smile\"]},{\"no\":3,\"code\":\"U+1F602\",\"emoji\":\"😂\",\"description\":\"FACE WITH TEARS OF JOY\",\"flagged\":false,\"keywords\":[\"face\",\"joy\",\"laugh\",\"tear\"]},{\"no\":4,\"code\":\"U+1F923\",\"emoji\":\"🤣\",\"description\":\"ROLLING ON THE FLOOR LAUGHING\",\"flagged\":true,\"keywords\":[\"face\",\"floor\",\"laugh\",\"lol\",\"rofl\",\"rolling\"]},{\"no\":5,\"code\":\"U+1F603\",\"emoji\":\"😃\",\"description\":\"SMILING FACE WITH OPEN MOUTH\",\"flagged\":false,\"keywords\":[\"face\",\"mouth\",\"open\",\"smile\"]},{\"no\":6,\"code\":\"U+1F604\",\"emoji\":\"😄\",\"description\":\"SMILING FACE WITH OPEN MOUTH AND SMILING EYES\",\"flagged\":false,\"keywords\":[\"eye\",\"face\",\"mouth\",\"open\",\"smile\"]},{\"no\":7,\"code\":\"U+1F605\",\"emoji\":\"😅\",\"description\":\"SMILING FACE WITH OPEN MOUTH AND COLD SWEAT\",\"flagged\":false,\"keywords\":[\"cold\",\"face\",\"open\",\"smile\",\"sweat\"]},{\"no\":8,\"code\":\"U+1F606\",\"emoji\":\"😆\",\"description\":\"SMILING FACE WITH OPEN MOUTH AND TIGHTLY-CLOSED EYES\",\"flagged\":false,\"keywords\":[\"face\",\"laugh\",\"mouth\",\"open\",\"satisfied\",\"smile\"]},{\"no\":9,\"code\":\"U+1F609\",\"emoji\":\"😉\",\"description\":\"WINKING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"wink\"]},{\"no\":10,\"code\":\"U+1F60A\",\"emoji\":\"😊\",\"description\":\"SMILING FACE WITH SMILING EYES\",\"flagged\":false,\"keywords\":[\"blush\",\"eye\",\"face\",\"smile\"]},{\"no\":11,\"code\":\"U+1F60B\",\"emoji\":\"😋\",\"description\":\"FACE SAVOURING DELICIOUS FOOD\",\"flagged\":false,\"keywords\":[\"delicious\",\"face\",\"savouring\",\"smile\",\"um\",\"yum\"]},{\"no\":12,\"code\":\"U+1F60E\",\"emoji\":\"😎\",\"description\":\"SMILING FACE WITH SUNGLASSES\",\"flagged\":false,\"keywords\":[\"bright\",\"cool\",\"eye\",\"eyewear\",\"face\",\"glasses\",\"smile\",\"sun\",\"sunglasses\",\"weather\"]},{\"no\":13,\"code\":\"U+1F60D\",\"emoji\":\"😍\",\"description\":\"SMILING FACE WITH HEART-SHAPED EYES\",\"flagged\":false,\"keywords\":[\"eye\",\"face\",\"heart\",\"love\",\"smile\"]},{\"no\":14,\"code\":\"U+1F618\",\"emoji\":\"😘\",\"description\":\"FACE THROWING A KISS\",\"flagged\":false,\"keywords\":[\"face\",\"heart\",\"kiss\"]},{\"no\":15,\"code\":\"U+1F617\",\"emoji\":\"😗\",\"description\":\"KISSING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"kiss\"]},{\"no\":16,\"code\":\"U+1F619\",\"emoji\":\"😙\",\"description\":\"KISSING FACE WITH SMILING EYES\",\"flagged\":false,\"keywords\":[\"eye\",\"face\",\"kiss\",\"smile\"]},{\"no\":17,\"code\":\"U+1F61A\",\"emoji\":\"😚\",\"description\":\"KISSING FACE WITH CLOSED EYES\",\"flagged\":false,\"keywords\":[\"closed\",\"eye\",\"face\",\"kiss\"]},{\"no\":19,\"code\":\"U+1F642\",\"emoji\":\"🙂\",\"description\":\"SLIGHTLY SMILING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"smile\"]},{\"no\":20,\"code\":\"U+1F917\",\"emoji\":\"🤗\",\"description\":\"HUGGING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"hug\",\"hugging\"]},{\"no\":21,\"code\":\"U+1F914\",\"emoji\":\"🤔\",\"description\":\"THINKING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"thinking\"]},{\"no\":22,\"code\":\"U+1F610\",\"emoji\":\"😐\",\"description\":\"NEUTRAL FACE\",\"flagged\":false,\"keywords\":[\"deadpan\",\"face\",\"neutral\"]},{\"no\":23,\"code\":\"U+1F611\",\"emoji\":\"😑\",\"description\":\"EXPRESSIONLESS FACE\",\"flagged\":false,\"keywords\":[\"expressionless\",\"face\",\"inexpressive\",\"unexpressive\"]},{\"no\":24,\"code\":\"U+1F636\",\"emoji\":\"😶\",\"description\":\"FACE WITHOUT MOUTH\",\"flagged\":false,\"keywords\":[\"face\",\"mouth\",\"quiet\",\"silent\"]},{\"no\":25,\"code\":\"U+1F644\",\"emoji\":\"🙄\",\"description\":\"FACE WITH ROLLING EYES\",\"flagged\":false,\"keywords\":[\"eyes\",\"face\",\"rolling\"]},{\"no\":26,\"code\":\"U+1F60F\",\"emoji\":\"😏\",\"description\":\"SMIRKING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"smirk\"]},{\"no\":27,\"code\":\"U+1F623\",\"emoji\":\"😣\",\"description\":\"PERSEVERING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"persevere\"]},{\"no\":28,\"code\":\"U+1F625\",\"emoji\":\"😥\",\"description\":\"DISAPPOINTED BUT RELIEVED FACE\",\"flagged\":false,\"keywords\":[\"disappointed\",\"face\",\"relieved\",\"whew\"]},{\"no\":29,\"code\":\"U+1F62E\",\"emoji\":\"😮\",\"description\":\"FACE WITH OPEN MOUTH\",\"flagged\":false,\"keywords\":[\"face\",\"mouth\",\"open\",\"sympathy\"]},{\"no\":30,\"code\":\"U+1F910\",\"emoji\":\"🤐\",\"description\":\"ZIPPER-MOUTH FACE\",\"flagged\":false,\"keywords\":[\"face\",\"mouth\",\"zipper\"]},{\"no\":31,\"code\":\"U+1F62F\",\"emoji\":\"😯\",\"description\":\"HUSHED FACE\",\"flagged\":false,\"keywords\":[\"face\",\"hushed\",\"stunned\",\"surprised\"]},{\"no\":32,\"code\":\"U+1F62A\",\"emoji\":\"😪\",\"description\":\"SLEEPY FACE\",\"flagged\":false,\"keywords\":[\"face\",\"sleep\"]},{\"no\":33,\"code\":\"U+1F62B\",\"emoji\":\"😫\",\"description\":\"TIRED FACE\",\"flagged\":false,\"keywords\":[\"face\",\"tired\"]},{\"no\":34,\"code\":\"U+1F634\",\"emoji\":\"😴\",\"description\":\"SLEEPING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"sleep\",\"zzz\"]},{\"no\":35,\"code\":\"U+1F60C\",\"emoji\":\"😌\",\"description\":\"RELIEVED FACE\",\"flagged\":false,\"keywords\":[\"face\",\"relieved\"]},{\"no\":36,\"code\":\"U+1F913\",\"emoji\":\"🤓\",\"description\":\"NERD FACE\",\"flagged\":false,\"keywords\":[\"face\",\"geek\",\"nerd\"]},{\"no\":37,\"code\":\"U+1F61B\",\"emoji\":\"😛\",\"description\":\"FACE WITH STUCK-OUT TONGUE\",\"flagged\":false,\"keywords\":[\"face\",\"tongue\"]},{\"no\":38,\"code\":\"U+1F61C\",\"emoji\":\"😜\",\"description\":\"FACE WITH STUCK-OUT TONGUE AND WINKING EYE\",\"flagged\":false,\"keywords\":[\"eye\",\"face\",\"joke\",\"tongue\",\"wink\"]},{\"no\":39,\"code\":\"U+1F61D\",\"emoji\":\"😝\",\"description\":\"FACE WITH STUCK-OUT TONGUE AND TIGHTLY-CLOSED EYES\",\"flagged\":false,\"keywords\":[\"eye\",\"face\",\"horrible\",\"taste\",\"tongue\"]},{\"no\":40,\"code\":\"U+1F924\",\"emoji\":\"🤤\",\"description\":\"DROOLING FACE\",\"flagged\":true,\"keywords\":[\"drooling\",\"face\"]},{\"no\":41,\"code\":\"U+1F612\",\"emoji\":\"😒\",\"description\":\"UNAMUSED FACE\",\"flagged\":false,\"keywords\":[\"face\",\"unamused\",\"unhappy\"]},{\"no\":42,\"code\":\"U+1F613\",\"emoji\":\"😓\",\"description\":\"FACE WITH COLD SWEAT\",\"flagged\":false,\"keywords\":[\"cold\",\"face\",\"sweat\"]},{\"no\":43,\"code\":\"U+1F614\",\"emoji\":\"😔\",\"description\":\"PENSIVE FACE\",\"flagged\":false,\"keywords\":[\"dejected\",\"face\",\"pensive\"]},{\"no\":44,\"code\":\"U+1F615\",\"emoji\":\"😕\",\"description\":\"CONFUSED FACE\",\"flagged\":false,\"keywords\":[\"confused\",\"face\"]},{\"no\":45,\"code\":\"U+1F643\",\"emoji\":\"🙃\",\"description\":\"UPSIDE-DOWN FACE\",\"flagged\":false,\"keywords\":[\"face\",\"upside-down\"]},{\"no\":46,\"code\":\"U+1F911\",\"emoji\":\"🤑\",\"description\":\"MONEY-MOUTH FACE\",\"flagged\":false,\"keywords\":[\"face\",\"money\",\"mouth\"]},{\"no\":47,\"code\":\"U+1F632\",\"emoji\":\"😲\",\"description\":\"ASTONISHED FACE\",\"flagged\":false,\"keywords\":[\"astonished\",\"face\",\"shocked\",\"totally\"]},{\"no\":48,\"code\":\"U+2639\",\"emoji\":\"☹\",\"description\":\"WHITE FROWNING FACE≊ frowning face\",\"flagged\":false,\"keywords\":[\"face\",\"frown\"]},{\"no\":49,\"code\":\"U+1F641\",\"emoji\":\"🙁\",\"description\":\"SLIGHTLY FROWNING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"frown\"]},{\"no\":50,\"code\":\"U+1F616\",\"emoji\":\"😖\",\"description\":\"CONFOUNDED FACE\",\"flagged\":false,\"keywords\":[\"confounded\",\"face\"]},{\"no\":51,\"code\":\"U+1F61E\",\"emoji\":\"😞\",\"description\":\"DISAPPOINTED FACE\",\"flagged\":false,\"keywords\":[\"disappointed\",\"face\"]},{\"no\":52,\"code\":\"U+1F61F\",\"emoji\":\"😟\",\"description\":\"WORRIED FACE\",\"flagged\":false,\"keywords\":[\"face\",\"worried\"]},{\"no\":53,\"code\":\"U+1F624\",\"emoji\":\"😤\",\"description\":\"FACE WITH LOOK OF TRIUMPH≊ face with steam from nose\",\"flagged\":false,\"keywords\":[\"face\",\"triumph\",\"won\"]},{\"no\":54,\"code\":\"U+1F622\",\"emoji\":\"😢\",\"description\":\"CRYING FACE\",\"flagged\":false,\"keywords\":[\"cry\",\"face\",\"sad\",\"tear\"]},{\"no\":55,\"code\":\"U+1F62D\",\"emoji\":\"😭\",\"description\":\"LOUDLY CRYING FACE\",\"flagged\":false,\"keywords\":[\"cry\",\"face\",\"sad\",\"sob\",\"tear\"]},{\"no\":56,\"code\":\"U+1F626\",\"emoji\":\"😦\",\"description\":\"FROWNING FACE WITH OPEN MOUTH\",\"flagged\":false,\"keywords\":[\"face\",\"frown\",\"mouth\",\"open\"]},{\"no\":57,\"code\":\"U+1F627\",\"emoji\":\"😧\",\"description\":\"ANGUISHED FACE\",\"flagged\":false,\"keywords\":[\"anguished\",\"face\"]},{\"no\":58,\"code\":\"U+1F628\",\"emoji\":\"😨\",\"description\":\"FEARFUL FACE\",\"flagged\":false,\"keywords\":[\"face\",\"fear\",\"fearful\",\"scared\"]},{\"no\":59,\"code\":\"U+1F629\",\"emoji\":\"😩\",\"description\":\"WEARY FACE\",\"flagged\":false,\"keywords\":[\"face\",\"tired\",\"weary\"]},{\"no\":60,\"code\":\"U+1F62C\",\"emoji\":\"😬\",\"description\":\"GRIMACING FACE\",\"flagged\":false,\"keywords\":[\"face\",\"grimace\"]},{\"no\":61,\"code\":\"U+1F630\",\"emoji\":\"😰\",\"description\":\"FACE WITH OPEN MOUTH AND COLD SWEAT\",\"flagged\":false,\"keywords\":[\"blue\",\"cold\",\"face\",\"mouth\",\"open\",\"rushed\",\"sweat\"]},{\"no\":62,\"code\":\"U+1F631\",\"emoji\":\"😱\",\"description\":\"FACE SCREAMING IN FEAR\",\"flagged\":false,\"keywords\":[\"face\",\"fear\",\"fearful\",\"munch\",\"scared\",\"scream\"]},{\"no\":63,\"code\":\"U+1F633\",\"emoji\":\"😳\",\"description\":\"FLUSHED FACE\",\"flagged\":false,\"keywords\":[\"dazed\",\"face\",\"flushed\"]},{\"no\":64,\"code\":\"U+1F635\",\"emoji\":\"😵\",\"description\":\"DIZZY FACE\",\"flagged\":false,\"keywords\":[\"dizzy\",\"face\"]},{\"no\":65,\"code\":\"U+1F621\",\"emoji\":\"😡\",\"description\":\"POUTING FACE\",\"flagged\":false,\"keywords\":[\"angry\",\"face\",\"mad\",\"pouting\",\"rage\",\"red\"]},{\"no\":66,\"code\":\"U+1F620\",\"emoji\":\"😠\",\"description\":\"ANGRY FACE\",\"flagged\":false,\"keywords\":[\"angry\",\"face\",\"mad\"]},{\"no\":67,\"code\":\"U+1F607\",\"emoji\":\"😇\",\"description\":\"SMILING FACE WITH HALO\",\"flagged\":false,\"keywords\":[\"angel\",\"face\",\"fairy tale\",\"fantasy\",\"halo\",\"innocent\",\"smile\"]},{\"no\":68,\"code\":\"U+1F920\",\"emoji\":\"🤠\",\"description\":\"FACE WITH COWBOY HAT\",\"flagged\":true,\"keywords\":[\"cowboy\",\"cowgirl\",\"face\",\"hat\"]},{\"no\":69,\"code\":\"U+1F921\",\"emoji\":\"🤡\",\"description\":\"CLOWN FACE\",\"flagged\":true,\"keywords\":[\"clown\",\"face\"]},{\"no\":70,\"code\":\"U+1F925\",\"emoji\":\"🤥\",\"description\":\"LYING FACE\",\"flagged\":true,\"keywords\":[\"face\",\"lie\",\"pinocchio\"]},{\"no\":71,\"code\":\"U+1F637\",\"emoji\":\"😷\",\"description\":\"FACE WITH MEDICAL MASK\",\"flagged\":false,\"keywords\":[\"cold\",\"doctor\",\"face\",\"mask\",\"medicine\",\"sick\"]},{\"no\":72,\"code\":\"U+1F912\",\"emoji\":\"🤒\",\"description\":\"FACE WITH THERMOMETER\",\"flagged\":false,\"keywords\":[\"face\",\"ill\",\"sick\",\"thermometer\"]},{\"no\":73,\"code\":\"U+1F915\",\"emoji\":\"🤕\",\"description\":\"FACE WITH HEAD-BANDAGE\",\"flagged\":false,\"keywords\":[\"bandage\",\"face\",\"hurt\",\"injury\"]},{\"no\":74,\"code\":\"U+1F922\",\"emoji\":\"🤢\",\"description\":\"NAUSEATED FACE\",\"flagged\":true,\"keywords\":[\"face\",\"nauseated\",\"vomit\"]},{\"no\":75,\"code\":\"U+1F927\",\"emoji\":\"🤧\",\"description\":\"SNEEZING FACE\",\"flagged\":true,\"keywords\":[\"face\",\"gesundheit\",\"sneeze\"]},{\"no\":76,\"code\":\"U+1F608\",\"emoji\":\"😈\",\"description\":\"SMILING FACE WITH HORNS\",\"flagged\":false,\"keywords\":[\"face\",\"fairy tale\",\"fantasy\",\"horns\",\"smile\"]},{\"no\":77,\"code\":\"U+1F47F\",\"emoji\":\"👿\",\"description\":\"IMP\",\"flagged\":false,\"keywords\":[\"demon\",\"devil\",\"face\",\"fairy tale\",\"fantasy\",\"imp\"]},{\"no\":78,\"code\":\"U+1F479\",\"emoji\":\"👹\",\"description\":\"JAPANESE OGRE≊ ogre\",\"flagged\":false,\"keywords\":[\"creature\",\"face\",\"fairy tale\",\"fantasy\",\"japanese\",\"monster\",\"ogre\"]},{\"no\":79,\"code\":\"U+1F47A\",\"emoji\":\"👺\",\"description\":\"JAPANESE GOBLIN≊ goblin\",\"flagged\":false,\"keywords\":[\"creature\",\"face\",\"fairy tale\",\"fantasy\",\"goblin\",\"japanese\",\"monster\"]},{\"no\":80,\"code\":\"U+1F480\",\"emoji\":\"💀\",\"description\":\"SKULL\",\"flagged\":false,\"keywords\":[\"body\",\"death\",\"face\",\"fairy tale\",\"monster\",\"skull\"]},{\"no\":81,\"code\":\"U+2620\",\"emoji\":\"☠\",\"description\":\"SKULL AND CROSSBONES\",\"flagged\":false,\"keywords\":[\"body\",\"crossbones\",\"death\",\"face\",\"monster\",\"skull\"]},{\"no\":82,\"code\":\"U+1F47B\",\"emoji\":\"👻\",\"description\":\"GHOST\",\"flagged\":false,\"keywords\":[\"creature\",\"face\",\"fairy tale\",\"fantasy\",\"ghost\",\"monster\"]},{\"no\":83,\"code\":\"U+1F47D\",\"emoji\":\"👽\",\"description\":\"EXTRATERRESTRIAL ALIEN≊ alien\",\"flagged\":false,\"keywords\":[\"alien\",\"creature\",\"extraterrestrial\",\"face\",\"fairy tale\",\"fantasy\",\"monster\",\"space\",\"ufo\"]},{\"no\":84,\"code\":\"U+1F47E\",\"emoji\":\"👾\",\"description\":\"ALIEN MONSTER\",\"flagged\":false,\"keywords\":[\"alien\",\"creature\",\"extraterrestrial\",\"face\",\"fairy tale\",\"fantasy\",\"monster\",\"space\",\"ufo\"]},{\"no\":85,\"code\":\"U+1F916\",\"emoji\":\"🤖\",\"description\":\"ROBOT FACE\",\"flagged\":false,\"keywords\":[\"face\",\"monster\",\"robot\"]},{\"no\":86,\"code\":\"U+1F4A9\",\"emoji\":\"💩\",\"description\":\"PILE OF POO\",\"flagged\":false,\"keywords\":[\"comic\",\"dung\",\"face\",\"monster\",\"poo\",\"poop\"]},{\"no\":87,\"code\":\"U+1F63A\",\"emoji\":\"😺\",\"description\":\"SMILING CAT FACE WITH OPEN MOUTH\",\"flagged\":false,\"keywords\":[\"cat\",\"face\",\"mouth\",\"open\",\"smile\"]},{\"no\":88,\"code\":\"U+1F638\",\"emoji\":\"😸\",\"description\":\"GRINNING CAT FACE WITH SMILING EYES\",\"flagged\":false,\"keywords\":[\"cat\",\"eye\",\"face\",\"grin\",\"smile\"]},{\"no\":89,\"code\":\"U+1F639\",\"emoji\":\"😹\",\"description\":\"CAT FACE WITH TEARS OF JOY\",\"flagged\":false,\"keywords\":[\"cat\",\"face\",\"joy\",\"tear\"]},{\"no\":90,\"code\":\"U+1F63B\",\"emoji\":\"😻\",\"description\":\"SMILING CAT FACE WITH HEART-SHAPED EYES\",\"flagged\":false,\"keywords\":[\"cat\",\"eye\",\"face\",\"heart\",\"love\",\"smile\"]},{\"no\":91,\"code\":\"U+1F63C\",\"emoji\":\"😼\",\"description\":\"CAT FACE WITH WRY SMILE\",\"flagged\":false,\"keywords\":[\"cat\",\"face\",\"ironic\",\"smile\",\"wry\"]},{\"no\":92,\"code\":\"U+1F63D\",\"emoji\":\"😽\",\"description\":\"KISSING CAT FACE WITH CLOSED EYES\",\"flagged\":false,\"keywords\":[\"cat\",\"eye\",\"face\",\"kiss\"]},{\"no\":93,\"code\":\"U+1F640\",\"emoji\":\"🙀\",\"description\":\"WEARY CAT FACE\",\"flagged\":false,\"keywords\":[\"cat\",\"face\",\"oh\",\"surprised\",\"weary\"]},{\"no\":94,\"code\":\"U+1F63F\",\"emoji\":\"😿\",\"description\":\"CRYING CAT FACE\",\"flagged\":false,\"keywords\":[\"cat\",\"cry\",\"face\",\"sad\",\"tear\"]},{\"no\":95,\"code\":\"U+1F63E\",\"emoji\":\"😾\",\"description\":\"POUTING CAT FACE\",\"flagged\":false,\"keywords\":[\"cat\",\"face\",\"pouting\"]},{\"no\":96,\"code\":\"U+1F648\",\"emoji\":\"🙈\",\"description\":\"SEE-NO-EVIL MONKEY≊ see-no-evil\",\"flagged\":false,\"keywords\":[\"evil\",\"face\",\"forbidden\",\"gesture\",\"monkey\",\"no\",\"not\",\"prohibited\",\"see\"]},{\"no\":97,\"code\":\"U+1F649\",\"emoji\":\"🙉\",\"description\":\"HEAR-NO-EVIL MONKEY≊ hear-no-evil\",\"flagged\":false,\"keywords\":[\"evil\",\"face\",\"forbidden\",\"gesture\",\"hear\",\"monkey\",\"no\",\"not\",\"prohibited\"]},{\"no\":98,\"code\":\"U+1F64A\",\"emoji\":\"🙊\",\"description\":\"SPEAK-NO-EVIL MONKEY≊ speak-no-evil\",\"flagged\":false,\"keywords\":[\"evil\",\"face\",\"forbidden\",\"gesture\",\"monkey\",\"no\",\"not\",\"prohibited\",\"speak\"]},{\"no\":99,\"code\":\"U+1F466\",\"emoji\":\"👦\",\"description\":\"BOY\",\"flagged\":false,\"keywords\":[\"boy\"],\"types\":[\"U+1F466 U+1F3FF\",\"U+1F466 U+1F3FE\",\"U+1F466 U+1F3FD\",\"U+1F466 U+1F3FC\",\"U+1F466 U+1F3FB\"]},{\"no\":105,\"code\":\"U+1F467\",\"emoji\":\"👧\",\"description\":\"GIRL\",\"flagged\":false,\"keywords\":[\"girl\",\"maiden\",\"virgin\",\"virgo\",\"zodiac\"],\"types\":[\"U+1F467 U+1F3FF\",\"U+1F467 U+1F3FE\",\"U+1F467 U+1F3FD\",\"U+1F467 U+1F3FC\",\"U+1F467 U+1F3FB\"]},{\"no\":111,\"code\":\"U+1F468\",\"emoji\":\"👨\",\"description\":\"MAN\",\"flagged\":false,\"keywords\":[\"man\"],\"types\":[\"U+1F468 U+1F3FF\",\"U+1F468 U+1F3FE\",\"U+1F468 U+1F3FD\",\"U+1F468 U+1F3FC\",\"U+1F468 U+1F3FB\"]},{\"no\":117,\"code\":\"U+1F469\",\"emoji\":\"👩\",\"description\":\"WOMAN\",\"flagged\":false,\"keywords\":[\"woman\"],\"types\":[\"U+1F469 U+1F3FF\",\"U+1F469 U+1F3FE\",\"U+1F469 U+1F3FD\",\"U+1F469 U+1F3FC\",\"U+1F469 U+1F3FB\"]},{\"no\":123,\"code\":\"U+1F474\",\"emoji\":\"👴\",\"description\":\"OLDER MAN≊ old man\",\"flagged\":false,\"keywords\":[\"man\",\"old\"],\"types\":[\"U+1F474 U+1F3FF\",\"U+1F474 U+1F3FE\",\"U+1F474 U+1F3FD\",\"U+1F474 U+1F3FC\",\"U+1F474 U+1F3FB\"]},{\"no\":129,\"code\":\"U+1F475\",\"emoji\":\"👵\",\"description\":\"OLDER WOMAN≊ old woman\",\"flagged\":false,\"keywords\":[\"old\",\"woman\"],\"types\":[\"U+1F475 U+1F3FF\",\"U+1F475 U+1F3FE\",\"U+1F475 U+1F3FD\",\"U+1F475 U+1F3FC\",\"U+1F475 U+1F3FB\"]},{\"no\":135,\"code\":\"U+1F476\",\"emoji\":\"👶\",\"description\":\"BABY\",\"flagged\":false,\"keywords\":[\"baby\"],\"types\":[\"U+1F476 U+1F3FF\",\"U+1F476 U+1F3FE\",\"U+1F476 U+1F3FD\",\"U+1F476 U+1F3FC\",\"U+1F476 U+1F3FB\"]},{\"no\":141,\"code\":\"U+1F47C\",\"emoji\":\"👼\",\"description\":\"BABY ANGEL\",\"flagged\":false,\"keywords\":[\"angel\",\"baby\",\"face\",\"fairy tale\",\"fantasy\"],\"types\":[\"U+1F47C U+1F3FF\",\"U+1F47C U+1F3FE\",\"U+1F47C U+1F3FD\",\"U+1F47C U+1F3FC\",\"U+1F47C U+1F3FB\"]},{\"no\":147,\"code\":\"U+1F471\",\"emoji\":\"👱\",\"description\":\"PERSON WITH BLOND HAIR\",\"flagged\":false,\"keywords\":[\"blond\"],\"types\":[\"U+1F471 U+1F3FF\",\"U+1F471 U+1F3FE\",\"U+1F471 U+1F3FD\",\"U+1F471 U+1F3FC\",\"U+1F471 U+1F3FB\"]},{\"no\":153,\"code\":\"U+1F46E\",\"emoji\":\"👮\",\"description\":\"POLICE OFFICER\",\"flagged\":false,\"keywords\":[\"cop\",\"officer\",\"police\"],\"types\":[\"U+1F46E U+1F3FF\",\"U+1F46E U+1F3FE\",\"U+1F46E U+1F3FD\",\"U+1F46E U+1F3FC\",\"U+1F46E U+1F3FB\"]},{\"no\":159,\"code\":\"U+1F472\",\"emoji\":\"👲\",\"description\":\"MAN WITH GUA PI MAO≊ man with chinese cap\",\"flagged\":false,\"keywords\":[\"gua pi mao\",\"hat\",\"man\"],\"types\":[\"U+1F472 U+1F3FF\",\"U+1F472 U+1F3FE\",\"U+1F472 U+1F3FD\",\"U+1F472 U+1F3FC\",\"U+1F472 U+1F3FB\"]},{\"no\":165,\"code\":\"U+1F473\",\"emoji\":\"👳\",\"description\":\"MAN WITH TURBAN\",\"flagged\":false,\"keywords\":[\"man\",\"turban\"],\"types\":[\"U+1F473 U+1F3FF\",\"U+1F473 U+1F3FE\",\"U+1F473 U+1F3FD\",\"U+1F473 U+1F3FC\",\"U+1F473 U+1F3FB\"]},{\"no\":171,\"code\":\"U+1F477\",\"emoji\":\"👷\",\"description\":\"CONSTRUCTION WORKER\",\"flagged\":false,\"keywords\":[\"construction\",\"hat\",\"worker\"],\"types\":[\"U+1F477 U+1F3FF\",\"U+1F477 U+1F3FE\",\"U+1F477 U+1F3FD\",\"U+1F477 U+1F3FC\",\"U+1F477 U+1F3FB\"]},{\"no\":177,\"code\":\"U+1F478\",\"emoji\":\"👸\",\"description\":\"PRINCESS\",\"flagged\":false,\"keywords\":[\"fairy tale\",\"fantasy\",\"princess\"],\"types\":[\"U+1F478 U+1F3FF\",\"U+1F478 U+1F3FE\",\"U+1F478 U+1F3FD\",\"U+1F478 U+1F3FC\",\"U+1F478 U+1F3FB\"]},{\"no\":183,\"code\":\"U+1F934\",\"emoji\":\"🤴\",\"description\":\"PRINCE\",\"flagged\":true,\"keywords\":[\"prince\"],\"types\":[\"U+1F934 U+1F3FF\",\"U+1F934 U+1F3FE\",\"U+1F934 U+1F3FD\",\"U+1F934 U+1F3FC\",\"U+1F934 U+1F3FB\"]},{\"no\":189,\"code\":\"U+1F482\",\"emoji\":\"💂\",\"description\":\"GUARDSMAN\",\"flagged\":false,\"keywords\":[\"guard\",\"guardsman\"],\"types\":[\"U+1F482 U+1F3FF\",\"U+1F482 U+1F3FE\",\"U+1F482 U+1F3FD\",\"U+1F482 U+1F3FC\",\"U+1F482 U+1F3FB\"]},{\"no\":195,\"code\":\"U+1F575\",\"emoji\":\"🕵\",\"description\":\"SLEUTH OR SPY≊ detective\",\"flagged\":false,\"keywords\":[\"detective\",\"sleuth\",\"spy\"],\"types\":[\"U+1F575 U+1F3FF\",\"U+1F575 U+1F3FE\",\"U+1F575 U+1F3FD\",\"U+1F575 U+1F3FC\",\"U+1F575 U+1F3FB\"]},{\"no\":201,\"code\":\"U+1F385\",\"emoji\":\"🎅\",\"description\":\"FATHER CHRISTMAS≊ santa claus\",\"flagged\":false,\"keywords\":[\"activity\",\"celebration\",\"christmas\",\"fairy tale\",\"fantasy\",\"father\",\"santa\"],\"types\":[\"U+1F385 U+1F3FF\",\"U+1F385 U+1F3FE\",\"U+1F385 U+1F3FD\",\"U+1F385 U+1F3FC\",\"U+1F385 U+1F3FB\"]},{\"no\":207,\"code\":\"U+1F936\",\"emoji\":\"🤶\",\"description\":\"MOTHER CHRISTMAS\",\"flagged\":true,\"keywords\":[\"christmas\",\"mother\",\"mrs. claus\"],\"types\":[\"U+1F936 U+1F3FF\",\"U+1F936 U+1F3FE\",\"U+1F936 U+1F3FD\",\"U+1F936 U+1F3FC\",\"U+1F936 U+1F3FB\"]},{\"no\":213,\"code\":\"U+1F470\",\"emoji\":\"👰\",\"description\":\"BRIDE WITH VEIL\",\"flagged\":false,\"keywords\":[\"bride\",\"veil\",\"wedding\"],\"types\":[\"U+1F470 U+1F3FF\",\"U+1F470 U+1F3FE\",\"U+1F470 U+1F3FD\",\"U+1F470 U+1F3FC\",\"U+1F470 U+1F3FB\"]},{\"no\":219,\"code\":\"U+1F935\",\"emoji\":\"🤵\",\"description\":\"MAN IN TUXEDO\",\"flagged\":true,\"keywords\":[\"groom\",\"man\",\"tuxedo\"],\"types\":[\"U+1F935 U+1F3FF\",\"U+1F935 U+1F3FE\",\"U+1F935 U+1F3FD\",\"U+1F935 U+1F3FC\",\"U+1F935 U+1F3FB\"]},{\"no\":225,\"code\":\"U+1F486\",\"emoji\":\"💆\",\"description\":\"FACE MASSAGE\",\"flagged\":false,\"keywords\":[\"massage\",\"salon\"],\"types\":[\"U+1F486 U+1F3FF\",\"U+1F486 U+1F3FE\",\"U+1F486 U+1F3FD\",\"U+1F486 U+1F3FC\",\"U+1F486 U+1F3FB\"]},{\"no\":231,\"code\":\"U+1F487\",\"emoji\":\"💇\",\"description\":\"HAIRCUT\",\"flagged\":false,\"keywords\":[\"barber\",\"beauty\",\"haircut\",\"parlor\"],\"types\":[\"U+1F487 U+1F3FF\",\"U+1F487 U+1F3FE\",\"U+1F487 U+1F3FD\",\"U+1F487 U+1F3FC\",\"U+1F487 U+1F3FB\"]},{\"no\":237,\"code\":\"U+1F64D\",\"emoji\":\"🙍\",\"description\":\"PERSON FROWNING\",\"flagged\":false,\"keywords\":[\"frown\",\"gesture\"],\"types\":[\"U+1F64D U+1F3FF\",\"U+1F64D U+1F3FE\",\"U+1F64D U+1F3FD\",\"U+1F64D U+1F3FC\",\"U+1F64D U+1F3FB\"]},{\"no\":243,\"code\":\"U+1F64E\",\"emoji\":\"🙎\",\"description\":\"PERSON WITH POUTING FACE≊ person pouting\",\"flagged\":false,\"keywords\":[\"gesture\",\"pouting\"],\"types\":[\"U+1F64E U+1F3FF\",\"U+1F64E U+1F3FE\",\"U+1F64E U+1F3FD\",\"U+1F64E U+1F3FC\",\"U+1F64E U+1F3FB\"]},{\"no\":249,\"code\":\"U+1F645\",\"emoji\":\"🙅\",\"description\":\"FACE WITH NO GOOD GESTURE≊ gesturing no\",\"flagged\":false,\"keywords\":[\"forbidden\",\"gesture\",\"hand\",\"no\",\"not\",\"prohibited\"],\"types\":[\"U+1F645 U+1F3FF\",\"U+1F645 U+1F3FE\",\"U+1F645 U+1F3FD\",\"U+1F645 U+1F3FC\",\"U+1F645 U+1F3FB\"]},{\"no\":255,\"code\":\"U+1F646\",\"emoji\":\"🙆\",\"description\":\"FACE WITH OK GESTURE≊ gesturing ok\",\"flagged\":false,\"keywords\":[\"gesture\",\"hand\",\"ok\"],\"types\":[\"U+1F646 U+1F3FF\",\"U+1F646 U+1F3FE\",\"U+1F646 U+1F3FD\",\"U+1F646 U+1F3FC\",\"U+1F646 U+1F3FB\"]},{\"no\":261,\"code\":\"U+1F481\",\"emoji\":\"💁\",\"description\":\"INFORMATION DESK PERSON\",\"flagged\":false,\"keywords\":[\"hand\",\"help\",\"information\",\"sassy\"],\"types\":[\"U+1F481 U+1F3FF\",\"U+1F481 U+1F3FE\",\"U+1F481 U+1F3FD\",\"U+1F481 U+1F3FC\",\"U+1F481 U+1F3FB\"]},{\"no\":267,\"code\":\"U+1F937\",\"emoji\":\"🤷\",\"description\":\"SHRUG\",\"flagged\":true,\"keywords\":[\"doubt\",\"ignorance\",\"indifference\",\"shrug\"],\"types\":[\"U+1F937 U+1F3FF\",\"U+1F937 U+1F3FE\",\"U+1F937 U+1F3FD\",\"U+1F937 U+1F3FC\",\"U+1F937 U+1F3FB\"]},{\"no\":273,\"code\":\"U+1F64B\",\"emoji\":\"🙋\",\"description\":\"HAPPY PERSON RAISING ONE HAND≊ happy person raising hand\",\"flagged\":false,\"keywords\":[\"gesture\",\"hand\",\"happy\",\"raised\"],\"types\":[\"U+1F64B U+1F3FF\",\"U+1F64B U+1F3FE\",\"U+1F64B U+1F3FD\",\"U+1F64B U+1F3FC\",\"U+1F64B U+1F3FB\"]},{\"no\":279,\"code\":\"U+1F926\",\"emoji\":\"🤦\",\"description\":\"FACE PALM\",\"flagged\":true,\"keywords\":[\"disbelief\",\"exasperation\",\"face\",\"palm\"],\"types\":[\"U+1F926 U+1F3FF\",\"U+1F926 U+1F3FE\",\"U+1F926 U+1F3FD\",\"U+1F926 U+1F3FC\",\"U+1F926 U+1F3FB\"]},{\"no\":285,\"code\":\"U+1F647\",\"emoji\":\"🙇\",\"description\":\"PERSON BOWING DEEPLY≊ person bowing\",\"flagged\":false,\"keywords\":[\"apology\",\"bow\",\"gesture\",\"sorry\"],\"types\":[\"U+1F647 U+1F3FF\",\"U+1F647 U+1F3FE\",\"U+1F647 U+1F3FD\",\"U+1F647 U+1F3FC\",\"U+1F647 U+1F3FB\"]},{\"no\":291,\"code\":\"U+1F6B6\",\"emoji\":\"🚶\",\"description\":\"PEDESTRIAN\",\"flagged\":false,\"keywords\":[\"hike\",\"pedestrian\",\"walk\",\"walking\"],\"types\":[\"U+1F6B6 U+1F3FF\",\"U+1F6B6 U+1F3FE\",\"U+1F6B6 U+1F3FD\",\"U+1F6B6 U+1F3FC\",\"U+1F6B6 U+1F3FB\"]},{\"no\":297,\"code\":\"U+1F3C3\",\"emoji\":\"🏃\",\"description\":\"RUNNER\",\"flagged\":false,\"keywords\":[\"marathon\",\"runner\",\"running\"],\"types\":[\"U+1F3C3 U+1F3FF\",\"U+1F3C3 U+1F3FE\",\"U+1F3C3 U+1F3FD\",\"U+1F3C3 U+1F3FC\",\"U+1F3C3 U+1F3FB\"]},{\"no\":303,\"code\":\"U+1F483\",\"emoji\":\"💃\",\"description\":\"DANCER\",\"flagged\":false,\"keywords\":[\"dancer\"],\"types\":[\"U+1F483 U+1F3FF\",\"U+1F483 U+1F3FE\",\"U+1F483 U+1F3FD\",\"U+1F483 U+1F3FC\",\"U+1F483 U+1F3FB\"]},{\"no\":309,\"code\":\"U+1F57A\",\"emoji\":\"🕺\",\"description\":\"MAN DANCING\",\"flagged\":true,\"keywords\":[\"dance\",\"man\"],\"types\":[\"U+1F57A U+1F3FF\",\"U+1F57A U+1F3FE\",\"U+1F57A U+1F3FD\",\"U+1F57A U+1F3FC\",\"U+1F57A U+1F3FB\"]},{\"no\":315,\"code\":\"U+1F930\",\"emoji\":\"🤰\",\"description\":\"PREGNANT WOMAN\",\"flagged\":true,\"keywords\":[\"pregnant\",\"woman\"],\"types\":[\"U+1F930 U+1F3FF\",\"U+1F930 U+1F3FE\",\"U+1F930 U+1F3FD\",\"U+1F930 U+1F3FC\",\"U+1F930 U+1F3FB\"]},{\"no\":321,\"code\":\"U+1F46F\",\"emoji\":\"👯\",\"description\":\"WOMAN WITH BUNNY EARS≊ women partying\",\"flagged\":false,\"keywords\":[\"bunny\",\"dancer\",\"ear\",\"girl\",\"woman\"]},{\"no\":322,\"code\":\"U+1F574\",\"emoji\":\"🕴\",\"description\":\"MAN IN BUSINESS SUIT LEVITATING\",\"flagged\":false,\"keywords\":[\"business\",\"man\",\"suit\"]},{\"no\":323,\"code\":\"U+1F5E3\",\"emoji\":\"🗣\",\"description\":\"SPEAKING HEAD IN SILHOUETTE≊ speaking head\",\"flagged\":false,\"keywords\":[\"face\",\"head\",\"silhouette\",\"speak\",\"speaking\"]},{\"no\":324,\"code\":\"U+1F464\",\"emoji\":\"👤\",\"description\":\"BUST IN SILHOUETTE\",\"flagged\":false,\"keywords\":[\"bust\",\"silhouette\"]},{\"no\":325,\"code\":\"U+1F465\",\"emoji\":\"👥\",\"description\":\"BUSTS IN SILHOUETTE\",\"flagged\":false,\"keywords\":[\"bust\",\"silhouette\"]},{\"no\":326,\"code\":\"U+1F46B\",\"emoji\":\"👫\",\"description\":\"MAN AND WOMAN HOLDING HANDS\",\"flagged\":false,\"keywords\":[\"couple\",\"hand\",\"hold\",\"man\",\"woman\"]},{\"no\":327,\"code\":\"U+1F46C\",\"emoji\":\"👬\",\"description\":\"TWO MEN HOLDING HANDS\",\"flagged\":false,\"keywords\":[\"couple\",\"gemini\",\"hand\",\"hold\",\"man\",\"twins\",\"zodiac\"]},{\"no\":328,\"code\":\"U+1F46D\",\"emoji\":\"👭\",\"description\":\"TWO WOMEN HOLDING HANDS\",\"flagged\":false,\"keywords\":[\"couple\",\"hand\",\"hold\",\"woman\"]},{\"no\":329,\"code\":\"U+1F48F\",\"emoji\":\"💏\",\"description\":\"KISS\",\"flagged\":false,\"keywords\":[\"couple\",\"kiss\",\"romance\"]},{\"no\":330,\"code\":\"U+1F469 U+200D U+2764 U+FE0F U+200D U+1F48B U+200D U+1F468\",\"emoji\":\"👩‍❤️‍💋‍👨\",\"description\":\"Kiss: WOMAN, MAN\",\"flagged\":false,\"keywords\":[\"kiss\",\"man\",\"woman\"]},{\"no\":331,\"code\":\"U+1F468 U+200D U+2764 U+FE0F U+200D U+1F48B U+200D U+1F468\",\"emoji\":\"👨‍❤️‍💋‍👨\",\"description\":\"Kiss: MAN, MAN\",\"flagged\":false,\"keywords\":[\"kiss\",\"man\"]},{\"no\":332,\"code\":\"U+1F469 U+200D U+2764 U+FE0F U+200D U+1F48B U+200D U+1F469\",\"emoji\":\"👩‍❤️‍💋‍👩\",\"description\":\"Kiss: WOMAN, WOMAN\",\"flagged\":false,\"keywords\":[\"kiss\",\"woman\"]},{\"no\":333,\"code\":\"U+1F491\",\"emoji\":\"💑\",\"description\":\"COUPLE WITH HEART\",\"flagged\":false,\"keywords\":[\"couple\",\"heart\",\"love\",\"romance\"]},{\"no\":334,\"code\":\"U+1F469 U+200D U+2764 U+FE0F U+200D U+1F468\",\"emoji\":\"👩‍❤️‍👨\",\"description\":\"Couple with heart: WOMAN, MAN\",\"flagged\":false,\"keywords\":[\"couple\",\"man\",\"woman\"]},{\"no\":335,\"code\":\"U+1F468 U+200D U+2764 U+FE0F U+200D U+1F468\",\"emoji\":\"👨‍❤️‍👨\",\"description\":\"Couple with heart: MAN, MAN\",\"flagged\":false,\"keywords\":[\"couple\",\"man\"]},{\"no\":336,\"code\":\"U+1F469 U+200D U+2764 U+FE0F U+200D U+1F469\",\"emoji\":\"👩‍❤️‍👩\",\"description\":\"Couple with heart: WOMAN, WOMAN\",\"flagged\":false,\"keywords\":[\"couple\",\"woman\"]},{\"no\":337,\"code\":\"U+1F46A\",\"emoji\":\"👪\",\"description\":\"FAMILY\",\"flagged\":false,\"keywords\":[\"child\",\"family\",\"father\",\"mother\"]},{\"no\":338,\"code\":\"U+1F468 U+200D U+1F469 U+200D U+1F466\",\"emoji\":\"👨‍👩‍👦\",\"description\":\"Family: MAN, WOMAN, BOY\",\"flagged\":false,\"keywords\":[\"boy\",\"family\",\"man\",\"woman\"]},{\"no\":339,\"code\":\"U+1F468 U+200D U+1F469 U+200D U+1F467\",\"emoji\":\"👨‍👩‍👧\",\"description\":\"Family: MAN, WOMAN, GIRL\",\"flagged\":false,\"keywords\":[\"family\",\"girl\",\"man\",\"woman\"]},{\"no\":340,\"code\":\"U+1F468 U+200D U+1F469 U+200D U+1F467 U+200D U+1F466\",\"emoji\":\"👨‍👩‍👧‍👦\",\"description\":\"Family: MAN, WOMAN, GIRL, BOY\",\"flagged\":false,\"keywords\":[\"boy\",\"family\",\"girl\",\"man\",\"woman\"]},{\"no\":341,\"code\":\"U+1F468 U+200D U+1F469 U+200D U+1F466 U+200D U+1F466\",\"emoji\":\"👨‍👩‍👦‍👦\",\"description\":\"Family: MAN, WOMAN, BOY, BOY\",\"flagged\":false,\"keywords\":[\"boy\",\"family\",\"man\",\"woman\"]},{\"no\":342,\"code\":\"U+1F468 U+200D U+1F469 U+200D U+1F467 U+200D U+1F467\",\"emoji\":\"👨‍👩‍👧‍👧\",\"description\":\"Family: MAN, WOMAN, GIRL, GIRL\",\"flagged\":false,\"keywords\":[\"family\",\"girl\",\"man\",\"woman\"]},{\"no\":343,\"code\":\"U+1F468 U+200D U+1F468 U+200D U+1F466\",\"emoji\":\"👨‍👨‍👦\",\"description\":\"Family: MAN, MAN, BOY\",\"flagged\":false,\"keywords\":[\"boy\",\"family\",\"man\"]},{\"no\":344,\"code\":\"U+1F468 U+200D U+1F468 U+200D U+1F467\",\"emoji\":\"👨‍👨‍👧\",\"description\":\"Family: MAN, MAN, GIRL\",\"flagged\":false,\"keywords\":[\"family\",\"girl\",\"man\"]},{\"no\":345,\"code\":\"U+1F468 U+200D U+1F468 U+200D U+1F467 U+200D U+1F466\",\"emoji\":\"👨‍👨‍👧‍👦\",\"description\":\"Family: MAN, MAN, GIRL, BOY\",\"flagged\":false,\"keywords\":[\"boy\",\"family\",\"girl\",\"man\"]},{\"no\":346,\"code\":\"U+1F468 U+200D U+1F468 U+200D U+1F466 U+200D U+1F466\",\"emoji\":\"👨‍👨‍👦‍👦\",\"description\":\"Family: MAN, MAN, BOY, BOY\",\"flagged\":false,\"keywords\":[\"boy\",\"family\",\"man\"]},{\"no\":347,\"code\":\"U+1F468 U+200D U+1F468 U+200D U+1F467 U+200D U+1F467\",\"emoji\":\"👨‍👨‍👧‍👧\",\"description\":\"Family: MAN, MAN, GIRL, GIRL\",\"flagged\":false,\"keywords\":[\"family\",\"girl\",\"man\"]},{\"no\":348,\"code\":\"U+1F469 U+200D U+1F469 U+200D U+1F466\",\"emoji\":\"👩‍👩‍👦\",\"description\":\"Family: WOMAN, WOMAN, BOY\",\"flagged\":false,\"keywords\":[\"boy\",\"family\",\"woman\"]},{\"no\":349,\"code\":\"U+1F469 U+200D U+1F469 U+200D U+1F467\",\"emoji\":\"👩‍👩‍👧\",\"description\":\"Family: WOMAN, WOMAN, GIRL\",\"flagged\":false,\"keywords\":[\"family\",\"girl\",\"woman\"]},{\"no\":350,\"code\":\"U+1F469 U+200D U+1F469 U+200D U+1F467 U+200D U+1F466\",\"emoji\":\"👩‍👩‍👧‍👦\",\"description\":\"Family: WOMAN, WOMAN, GIRL, BOY\",\"flagged\":false,\"keywords\":[\"boy\",\"family\",\"girl\",\"woman\"]},{\"no\":351,\"code\":\"U+1F469 U+200D U+1F469 U+200D U+1F466 U+200D U+1F466\",\"emoji\":\"👩‍👩‍👦‍👦\",\"description\":\"Family: WOMAN, WOMAN, BOY, BOY\",\"flagged\":false,\"keywords\":[\"boy\",\"family\",\"woman\"]},{\"no\":352,\"code\":\"U+1F469 U+200D U+1F469 U+200D U+1F467 U+200D U+1F467\",\"emoji\":\"👩‍👩‍👧‍👧\",\"description\":\"Family: WOMAN, WOMAN, GIRL, GIRL\",\"flagged\":false,\"keywords\":[\"family\",\"girl\",\"woman\"]},{\"no\":353,\"code\":\"U+1F3FB\",\"emoji\":\"🏻\",\"description\":\"EMOJI MODIFIER FITZPATRICK TYPE-1-2≊ skin type-1-2\",\"flagged\":true,\"keywords\":[\"emoji modifier\",\"fitzpatrick\",\"skin\",\"tone\"]},{\"no\":354,\"code\":\"U+1F3FC\",\"emoji\":\"🏼\",\"description\":\"EMOJI MODIFIER FITZPATRICK TYPE-3≊ skin type-3\",\"flagged\":true,\"keywords\":[\"emoji modifier\",\"fitzpatrick\",\"skin\",\"tone\"]},{\"no\":355,\"code\":\"U+1F3FD\",\"emoji\":\"🏽\",\"description\":\"EMOJI MODIFIER FITZPATRICK TYPE-4≊ skin type-4\",\"flagged\":true,\"keywords\":[\"emoji modifier\",\"fitzpatrick\",\"skin\",\"tone\"]},{\"no\":356,\"code\":\"U+1F3FE\",\"emoji\":\"🏾\",\"description\":\"EMOJI MODIFIER FITZPATRICK TYPE-5≊ skin type-5\",\"flagged\":true,\"keywords\":[\"emoji modifier\",\"fitzpatrick\",\"skin\",\"tone\"]},{\"no\":357,\"code\":\"U+1F3FF\",\"emoji\":\"🏿\",\"description\":\"EMOJI MODIFIER FITZPATRICK TYPE-6≊ skin type-6\",\"flagged\":true,\"keywords\":[\"emoji modifier\",\"fitzpatrick\",\"skin\",\"tone\"]},{\"no\":358,\"code\":\"U+1F4AA\",\"emoji\":\"💪\",\"description\":\"FLEXED BICEPS\",\"flagged\":false,\"keywords\":[\"biceps\",\"body\",\"comic\",\"flex\",\"muscle\"],\"types\":[\"U+1F4AA U+1F3FF\",\"U+1F4AA U+1F3FE\",\"U+1F4AA U+1F3FD\",\"U+1F4AA U+1F3FC\",\"U+1F4AA U+1F3FB\"]},{\"no\":364,\"code\":\"U+1F933\",\"emoji\":\"🤳\",\"description\":\"SELFIE\",\"flagged\":true,\"keywords\":[\"camera\",\"phone\",\"selfie\"],\"types\":[\"U+1F933 U+1F3FF\",\"U+1F933 U+1F3FE\",\"U+1F933 U+1F3FD\",\"U+1F933 U+1F3FC\",\"U+1F933 U+1F3FB\"]},{\"no\":370,\"code\":\"U+1F448\",\"emoji\":\"👈\",\"description\":\"WHITE LEFT POINTING BACKHAND INDEX≊ backhand index pointing left\",\"flagged\":false,\"keywords\":[\"backhand\",\"body\",\"finger\",\"hand\",\"index\",\"point\"],\"types\":[\"U+1F448 U+1F3FF\",\"U+1F448 U+1F3FE\",\"U+1F448 U+1F3FD\",\"U+1F448 U+1F3FC\",\"U+1F448 U+1F3FB\"]},{\"no\":376,\"code\":\"U+1F449\",\"emoji\":\"👉\",\"description\":\"WHITE RIGHT POINTING BACKHAND INDEX≊ backhand index pointing right\",\"flagged\":false,\"keywords\":[\"backhand\",\"body\",\"finger\",\"hand\",\"index\",\"point\"],\"types\":[\"U+1F449 U+1F3FF\",\"U+1F449 U+1F3FE\",\"U+1F449 U+1F3FD\",\"U+1F449 U+1F3FC\",\"U+1F449 U+1F3FB\"]},{\"no\":382,\"code\":\"U+261D\",\"emoji\":\"☝\",\"description\":\"WHITE UP POINTING INDEX≊ index pointing up\",\"flagged\":false,\"keywords\":[\"body\",\"finger\",\"hand\",\"index\",\"point\",\"up\"],\"types\":[\"U+261D U+1F3FF\",\"U+261D U+1F3FE\",\"U+261D U+1F3FD\",\"U+261D U+1F3FC\",\"U+261D U+1F3FB\"]},{\"no\":388,\"code\":\"U+1F446\",\"emoji\":\"👆\",\"description\":\"WHITE UP POINTING BACKHAND INDEX≊ backhand index pointing up\",\"flagged\":false,\"keywords\":[\"backhand\",\"body\",\"finger\",\"hand\",\"index\",\"point\",\"up\"],\"types\":[\"U+1F446 U+1F3FF\",\"U+1F446 U+1F3FE\",\"U+1F446 U+1F3FD\",\"U+1F446 U+1F3FC\",\"U+1F446 U+1F3FB\"]},{\"no\":394,\"code\":\"U+1F595\",\"emoji\":\"🖕\",\"description\":\"REVERSED HAND WITH MIDDLE FINGER EXTENDED≊ middle finger\",\"flagged\":false,\"keywords\":[\"body\",\"finger\",\"hand\",\"middle finger\"],\"types\":[\"U+1F595 U+1F3FF\",\"U+1F595 U+1F3FE\",\"U+1F595 U+1F3FD\",\"U+1F595 U+1F3FC\",\"U+1F595 U+1F3FB\"]},{\"no\":400,\"code\":\"U+1F447\",\"emoji\":\"👇\",\"description\":\"WHITE DOWN POINTING BACKHAND INDEX≊ backhand index pointing down\",\"flagged\":false,\"keywords\":[\"backhand\",\"body\",\"down\",\"finger\",\"hand\",\"index\",\"point\"],\"types\":[\"U+1F447 U+1F3FF\",\"U+1F447 U+1F3FE\",\"U+1F447 U+1F3FD\",\"U+1F447 U+1F3FC\",\"U+1F447 U+1F3FB\"]},{\"no\":406,\"code\":\"U+270C\",\"emoji\":\"✌\",\"description\":\"VICTORY HAND\",\"flagged\":false,\"keywords\":[\"body\",\"hand\",\"v\",\"victory\"],\"types\":[\"U+270C U+1F3FF\",\"U+270C U+1F3FE\",\"U+270C U+1F3FD\",\"U+270C U+1F3FC\",\"U+270C U+1F3FB\"]},{\"no\":412,\"code\":\"U+1F91E\",\"emoji\":\"🤞\",\"description\":\"HAND WITH INDEX AND MIDDLE FINGERS CROSSED\",\"flagged\":true,\"keywords\":[\"cross\",\"finger\",\"hand\",\"luck\"],\"types\":[\"U+1F91E U+1F3FF\",\"U+1F91E U+1F3FE\",\"U+1F91E U+1F3FD\",\"U+1F91E U+1F3FC\",\"U+1F91E U+1F3FB\"]},{\"no\":418,\"code\":\"U+1F596\",\"emoji\":\"🖖\",\"description\":\"RAISED HAND WITH PART BETWEEN MIDDLE AND RING FINGERS≊ vulcan salute\",\"flagged\":false,\"keywords\":[\"body\",\"finger\",\"hand\",\"spock\",\"vulcan\"],\"types\":[\"U+1F596 U+1F3FF\",\"U+1F596 U+1F3FE\",\"U+1F596 U+1F3FD\",\"U+1F596 U+1F3FC\",\"U+1F596 U+1F3FB\"]},{\"no\":424,\"code\":\"U+1F918\",\"emoji\":\"🤘\",\"description\":\"SIGN OF THE HORNS\",\"flagged\":false,\"keywords\":[\"body\",\"finger\",\"hand\",\"horns\",\"rock-on\"],\"types\":[\"U+1F918 U+1F3FF\",\"U+1F918 U+1F3FE\",\"U+1F918 U+1F3FD\",\"U+1F918 U+1F3FC\",\"U+1F918 U+1F3FB\"]},{\"no\":430,\"code\":\"U+1F919\",\"emoji\":\"🤙\",\"description\":\"CALL ME HAND\",\"flagged\":true,\"keywords\":[\"call\",\"hand\"],\"types\":[\"U+1F919 U+1F3FF\",\"U+1F919 U+1F3FE\",\"U+1F919 U+1F3FD\",\"U+1F919 U+1F3FC\",\"U+1F919 U+1F3FB\"]},{\"no\":436,\"code\":\"U+1F590\",\"emoji\":\"🖐\",\"description\":\"RAISED HAND WITH FINGERS SPLAYED\",\"flagged\":false,\"keywords\":[\"body\",\"finger\",\"hand\",\"splayed\"],\"types\":[\"U+1F590 U+1F3FF\",\"U+1F590 U+1F3FE\",\"U+1F590 U+1F3FD\",\"U+1F590 U+1F3FC\",\"U+1F590 U+1F3FB\"]},{\"no\":442,\"code\":\"U+270B\",\"emoji\":\"✋\",\"description\":\"RAISED HAND\",\"flagged\":false,\"keywords\":[\"body\",\"hand\"],\"types\":[\"U+270B U+1F3FF\",\"U+270B U+1F3FE\",\"U+270B U+1F3FD\",\"U+270B U+1F3FC\",\"U+270B U+1F3FB\"]},{\"no\":448,\"code\":\"U+1F44C\",\"emoji\":\"👌\",\"description\":\"OK HAND SIGN≊ ok hand\",\"flagged\":false,\"keywords\":[\"body\",\"hand\",\"ok\"],\"types\":[\"U+1F44C U+1F3FF\",\"U+1F44C U+1F3FE\",\"U+1F44C U+1F3FD\",\"U+1F44C U+1F3FC\",\"U+1F44C U+1F3FB\"]},{\"no\":454,\"code\":\"U+1F44D\",\"emoji\":\"👍\",\"description\":\"THUMBS UP SIGN≊ thumbs up\",\"flagged\":false,\"keywords\":[\"+1\",\"body\",\"hand\",\"thumb\",\"thumbs up\",\"up\"],\"types\":[\"U+1F44D U+1F3FF\",\"U+1F44D U+1F3FE\",\"U+1F44D U+1F3FD\",\"U+1F44D U+1F3FC\",\"U+1F44D U+1F3FB\"]},{\"no\":460,\"code\":\"U+1F44E\",\"emoji\":\"👎\",\"description\":\"THUMBS DOWN SIGN≊ thumbs down\",\"flagged\":false,\"keywords\":[\"-1\",\"body\",\"down\",\"hand\",\"thumb\",\"thumbs down\"],\"types\":[\"U+1F44E U+1F3FF\",\"U+1F44E U+1F3FE\",\"U+1F44E U+1F3FD\",\"U+1F44E U+1F3FC\",\"U+1F44E U+1F3FB\"]},{\"no\":466,\"code\":\"U+270A\",\"emoji\":\"✊\",\"description\":\"RAISED FIST\",\"flagged\":false,\"keywords\":[\"body\",\"clenched\",\"fist\",\"hand\",\"punch\"],\"types\":[\"U+270A U+1F3FF\",\"U+270A U+1F3FE\",\"U+270A U+1F3FD\",\"U+270A U+1F3FC\",\"U+270A U+1F3FB\"]},{\"no\":472,\"code\":\"U+1F44A\",\"emoji\":\"👊\",\"description\":\"FISTED HAND SIGN≊ oncoming fist\",\"flagged\":false,\"keywords\":[\"body\",\"clenched\",\"fist\",\"hand\",\"punch\"],\"types\":[\"U+1F44A U+1F3FF\",\"U+1F44A U+1F3FE\",\"U+1F44A U+1F3FD\",\"U+1F44A U+1F3FC\",\"U+1F44A U+1F3FB\"]},{\"no\":478,\"code\":\"U+1F91B\",\"emoji\":\"🤛\",\"description\":\"LEFT-FACING FIST\",\"flagged\":true,\"keywords\":[\"fist\",\"leftwards\"],\"types\":[\"U+1F91B U+1F3FF\",\"U+1F91B U+1F3FE\",\"U+1F91B U+1F3FD\",\"U+1F91B U+1F3FC\",\"U+1F91B U+1F3FB\"]},{\"no\":484,\"code\":\"U+1F91C\",\"emoji\":\"🤜\",\"description\":\"RIGHT-FACING FIST\",\"flagged\":true,\"keywords\":[\"fist\",\"rightwards\"],\"types\":[\"U+1F91C U+1F3FF\",\"U+1F91C U+1F3FE\",\"U+1F91C U+1F3FD\",\"U+1F91C U+1F3FC\",\"U+1F91C U+1F3FB\"]},{\"no\":490,\"code\":\"U+1F91A\",\"emoji\":\"🤚\",\"description\":\"RAISED BACK OF HAND\",\"flagged\":true,\"keywords\":[\"backhand\",\"raised\"],\"types\":[\"U+1F91A U+1F3FF\",\"U+1F91A U+1F3FE\",\"U+1F91A U+1F3FD\",\"U+1F91A U+1F3FC\",\"U+1F91A U+1F3FB\"]},{\"no\":496,\"code\":\"U+1F44B\",\"emoji\":\"👋\",\"description\":\"WAVING HAND SIGN≊ waving hand\",\"flagged\":false,\"keywords\":[\"body\",\"hand\",\"wave\",\"waving\"],\"types\":[\"U+1F44B U+1F3FF\",\"U+1F44B U+1F3FE\",\"U+1F44B U+1F3FD\",\"U+1F44B U+1F3FC\",\"U+1F44B U+1F3FB\"]},{\"no\":502,\"code\":\"U+1F44F\",\"emoji\":\"👏\",\"description\":\"CLAPPING HANDS SIGN≊ clapping hands\",\"flagged\":false,\"keywords\":[\"body\",\"clap\",\"hand\"],\"types\":[\"U+1F44F U+1F3FF\",\"U+1F44F U+1F3FE\",\"U+1F44F U+1F3FD\",\"U+1F44F U+1F3FC\",\"U+1F44F U+1F3FB\"]},{\"no\":508,\"code\":\"U+270D\",\"emoji\":\"✍\",\"description\":\"WRITING HAND\",\"flagged\":false,\"keywords\":[\"body\",\"hand\",\"write\"],\"types\":[\"U+270D U+1F3FF\",\"U+270D U+1F3FE\",\"U+270D U+1F3FD\",\"U+270D U+1F3FC\",\"U+270D U+1F3FB\"]},{\"no\":514,\"code\":\"U+1F450\",\"emoji\":\"👐\",\"description\":\"OPEN HANDS SIGN≊ open hands\",\"flagged\":false,\"keywords\":[\"body\",\"hand\",\"open\"],\"types\":[\"U+1F450 U+1F3FF\",\"U+1F450 U+1F3FE\",\"U+1F450 U+1F3FD\",\"U+1F450 U+1F3FC\",\"U+1F450 U+1F3FB\"]},{\"no\":520,\"code\":\"U+1F64C\",\"emoji\":\"🙌\",\"description\":\"PERSON RAISING BOTH HANDS IN CELEBRATION≊ person raising hands\",\"flagged\":false,\"keywords\":[\"body\",\"celebration\",\"gesture\",\"hand\",\"hooray\",\"raised\"],\"types\":[\"U+1F64C U+1F3FF\",\"U+1F64C U+1F3FE\",\"U+1F64C U+1F3FD\",\"U+1F64C U+1F3FC\",\"U+1F64C U+1F3FB\"]},{\"no\":526,\"code\":\"U+1F64F\",\"emoji\":\"🙏\",\"description\":\"PERSON WITH FOLDED HANDS≊ folded hands\",\"flagged\":false,\"keywords\":[\"ask\",\"body\",\"bow\",\"folded\",\"gesture\",\"hand\",\"please\",\"pray\",\"thanks\"],\"types\":[\"U+1F64F U+1F3FF\",\"U+1F64F U+1F3FE\",\"U+1F64F U+1F3FD\",\"U+1F64F U+1F3FC\",\"U+1F64F U+1F3FB\"]},{\"no\":532,\"code\":\"U+1F91D\",\"emoji\":\"🤝\",\"description\":\"HANDSHAKE\",\"flagged\":true,\"keywords\":[\"agreement\",\"hand\",\"handshake\",\"meeting\",\"shake\"],\"types\":[\"U+1F91D U+1F3FF\",\"U+1F91D U+1F3FE\",\"U+1F91D U+1F3FD\",\"U+1F91D U+1F3FC\",\"U+1F91D U+1F3FB\"]},{\"no\":538,\"code\":\"U+1F485\",\"emoji\":\"💅\",\"description\":\"NAIL POLISH\",\"flagged\":false,\"keywords\":[\"body\",\"care\",\"cosmetics\",\"manicure\",\"nail\",\"polish\"],\"types\":[\"U+1F485 U+1F3FF\",\"U+1F485 U+1F3FE\",\"U+1F485 U+1F3FD\",\"U+1F485 U+1F3FC\",\"U+1F485 U+1F3FB\"]},{\"no\":544,\"code\":\"U+1F442\",\"emoji\":\"👂\",\"description\":\"EAR\",\"flagged\":false,\"keywords\":[\"body\",\"ear\"],\"types\":[\"U+1F442 U+1F3FF\",\"U+1F442 U+1F3FE\",\"U+1F442 U+1F3FD\",\"U+1F442 U+1F3FC\",\"U+1F442 U+1F3FB\"]},{\"no\":550,\"code\":\"U+1F443\",\"emoji\":\"👃\",\"description\":\"NOSE\",\"flagged\":false,\"keywords\":[\"body\",\"nose\"],\"types\":[\"U+1F443 U+1F3FF\",\"U+1F443 U+1F3FE\",\"U+1F443 U+1F3FD\",\"U+1F443 U+1F3FC\",\"U+1F443 U+1F3FB\"]},{\"no\":556,\"code\":\"U+1F463\",\"emoji\":\"👣\",\"description\":\"FOOTPRINTS\",\"flagged\":false,\"keywords\":[\"body\",\"clothing\",\"footprint\",\"print\"]},{\"no\":557,\"code\":\"U+1F440\",\"emoji\":\"👀\",\"description\":\"EYES\",\"flagged\":false,\"keywords\":[\"body\",\"eye\",\"face\"]},{\"no\":558,\"code\":\"U+1F441\",\"emoji\":\"👁\",\"description\":\"EYE\",\"flagged\":false,\"keywords\":[\"body\",\"eye\"]},{\"no\":559,\"code\":\"U+1F441 U+200D U+1F5E8\",\"emoji\":\"👁‍🗨\",\"description\":\"EYE, LEFT SPEECH BUBBLE≊ eye in speech bubble\",\"flagged\":false,\"keywords\":[\"bubble\",\"eye\",\"speech\",\"witness\"]},{\"no\":560,\"code\":\"U+1F445\",\"emoji\":\"👅\",\"description\":\"TONGUE\",\"flagged\":false,\"keywords\":[\"body\",\"tongue\"]},{\"no\":561,\"code\":\"U+1F444\",\"emoji\":\"👄\",\"description\":\"MOUTH\",\"flagged\":false,\"keywords\":[\"body\",\"lips\",\"mouth\"]},{\"no\":562,\"code\":\"U+1F48B\",\"emoji\":\"💋\",\"description\":\"KISS MARK\",\"flagged\":false,\"keywords\":[\"heart\",\"kiss\",\"lips\",\"mark\",\"romance\"]},{\"no\":563,\"code\":\"U+1F498\",\"emoji\":\"💘\",\"description\":\"HEART WITH ARROW\",\"flagged\":false,\"keywords\":[\"arrow\",\"cupid\",\"heart\",\"romance\"]},{\"no\":564,\"code\":\"U+2764\",\"emoji\":\"❤\",\"description\":\"HEAVY BLACK HEART≊ red heart\",\"flagged\":false,\"keywords\":[\"heart\"]},{\"no\":565,\"code\":\"U+1F493\",\"emoji\":\"💓\",\"description\":\"BEATING HEART\",\"flagged\":false,\"keywords\":[\"beating\",\"heart\",\"heartbeat\",\"pulsating\"]},{\"no\":566,\"code\":\"U+1F494\",\"emoji\":\"💔\",\"description\":\"BROKEN HEART\",\"flagged\":false,\"keywords\":[\"break\",\"broken\",\"heart\"]},{\"no\":567,\"code\":\"U+1F495\",\"emoji\":\"💕\",\"description\":\"TWO HEARTS\",\"flagged\":false,\"keywords\":[\"heart\",\"love\"]},{\"no\":568,\"code\":\"U+1F496\",\"emoji\":\"💖\",\"description\":\"SPARKLING HEART\",\"flagged\":false,\"keywords\":[\"excited\",\"heart\",\"sparkle\"]},{\"no\":569,\"code\":\"U+1F497\",\"emoji\":\"💗\",\"description\":\"GROWING HEART\",\"flagged\":false,\"keywords\":[\"excited\",\"growing\",\"heart\",\"heartpulse\",\"nervous\"]},{\"no\":570,\"code\":\"U+1F499\",\"emoji\":\"💙\",\"description\":\"BLUE HEART\",\"flagged\":false,\"keywords\":[\"blue\",\"heart\"]},{\"no\":571,\"code\":\"U+1F49A\",\"emoji\":\"💚\",\"description\":\"GREEN HEART\",\"flagged\":false,\"keywords\":[\"green\",\"heart\"]},{\"no\":572,\"code\":\"U+1F49B\",\"emoji\":\"💛\",\"description\":\"YELLOW HEART\",\"flagged\":false,\"keywords\":[\"heart\",\"yellow\"]},{\"no\":573,\"code\":\"U+1F49C\",\"emoji\":\"💜\",\"description\":\"PURPLE HEART\",\"flagged\":false,\"keywords\":[\"heart\",\"purple\"]},{\"no\":574,\"code\":\"U+1F5A4\",\"emoji\":\"🖤\",\"description\":\"BLACK HEART\",\"flagged\":true,\"keywords\":[\"black\",\"evil\",\"heart\",\"wicked\"]},{\"no\":575,\"code\":\"U+1F49D\",\"emoji\":\"💝\",\"description\":\"HEART WITH RIBBON\",\"flagged\":false,\"keywords\":[\"heart\",\"ribbon\",\"valentine\"]},{\"no\":576,\"code\":\"U+1F49E\",\"emoji\":\"💞\",\"description\":\"REVOLVING HEARTS\",\"flagged\":false,\"keywords\":[\"heart\",\"revolving\"]},{\"no\":577,\"code\":\"U+1F49F\",\"emoji\":\"💟\",\"description\":\"HEART DECORATION\",\"flagged\":false,\"keywords\":[\"heart\"]},{\"no\":578,\"code\":\"U+2763\",\"emoji\":\"❣\",\"description\":\"HEAVY HEART EXCLAMATION MARK ORNAMENT\",\"flagged\":false,\"keywords\":[\"exclamation\",\"heart\",\"mark\",\"punctuation\"]},{\"no\":579,\"code\":\"U+1F48C\",\"emoji\":\"💌\",\"description\":\"LOVE LETTER\",\"flagged\":false,\"keywords\":[\"heart\",\"letter\",\"love\",\"mail\",\"romance\"]},{\"no\":580,\"code\":\"U+1F4A4\",\"emoji\":\"💤\",\"description\":\"SLEEPING SYMBOL≊ zzz\",\"flagged\":false,\"keywords\":[\"comic\",\"sleep\",\"zzz\"]},{\"no\":581,\"code\":\"U+1F4A2\",\"emoji\":\"💢\",\"description\":\"ANGER SYMBOL\",\"flagged\":false,\"keywords\":[\"angry\",\"comic\",\"mad\"]},{\"no\":582,\"code\":\"U+1F4A3\",\"emoji\":\"💣\",\"description\":\"BOMB\",\"flagged\":false,\"keywords\":[\"bomb\",\"comic\"]},{\"no\":583,\"code\":\"U+1F4A5\",\"emoji\":\"💥\",\"description\":\"COLLISION SYMBOL≊ collision\",\"flagged\":false,\"keywords\":[\"boom\",\"collision\",\"comic\"]},{\"no\":584,\"code\":\"U+1F4A6\",\"emoji\":\"💦\",\"description\":\"SPLASHING SWEAT SYMBOL≊ sweat droplets\",\"flagged\":false,\"keywords\":[\"comic\",\"splashing\",\"sweat\"]},{\"no\":585,\"code\":\"U+1F4A8\",\"emoji\":\"💨\",\"description\":\"DASH SYMBOL≊ dashing\",\"flagged\":false,\"keywords\":[\"comic\",\"dash\",\"running\"]},{\"no\":586,\"code\":\"U+1F4AB\",\"emoji\":\"💫\",\"description\":\"DIZZY SYMBOL≊ dizzy\",\"flagged\":false,\"keywords\":[\"comic\",\"dizzy\",\"star\"]},{\"no\":587,\"code\":\"U+1F4AC\",\"emoji\":\"💬\",\"description\":\"SPEECH BALLOON\",\"flagged\":false,\"keywords\":[\"balloon\",\"bubble\",\"comic\",\"dialog\",\"speech\"]},{\"no\":588,\"code\":\"U+1F5E8\",\"emoji\":\"🗨\",\"description\":\"LEFT SPEECH BUBBLE\",\"flagged\":false,\"keywords\":[\"dialog\",\"speech\"]},{\"no\":589,\"code\":\"U+1F5EF\",\"emoji\":\"🗯\",\"description\":\"RIGHT ANGER BUBBLE\",\"flagged\":false,\"keywords\":[\"angry\",\"balloon\",\"bubble\",\"mad\"]},{\"no\":590,\"code\":\"U+1F4AD\",\"emoji\":\"💭\",\"description\":\"THOUGHT BALLOON\",\"flagged\":false,\"keywords\":[\"balloon\",\"bubble\",\"comic\",\"thought\"]},{\"no\":591,\"code\":\"U+1F573\",\"emoji\":\"🕳\",\"description\":\"HOLE\",\"flagged\":false,\"keywords\":[\"hole\"]},{\"no\":592,\"code\":\"U+1F453\",\"emoji\":\"👓\",\"description\":\"EYEGLASSES≊ glasses\",\"flagged\":false,\"keywords\":[\"clothing\",\"eye\",\"eyeglasses\",\"eyewear\",\"glasses\"]},{\"no\":593,\"code\":\"U+1F576\",\"emoji\":\"🕶\",\"description\":\"DARK SUNGLASSES≊ sunglasses\",\"flagged\":false,\"keywords\":[\"dark\",\"eye\",\"eyewear\",\"glasses\",\"sunglasses\"]},{\"no\":594,\"code\":\"U+1F454\",\"emoji\":\"👔\",\"description\":\"NECKTIE\",\"flagged\":false,\"keywords\":[\"clothing\",\"necktie\"]},{\"no\":595,\"code\":\"U+1F455\",\"emoji\":\"👕\",\"description\":\"T-SHIRT\",\"flagged\":false,\"keywords\":[\"clothing\",\"shirt\",\"tshirt\"]},{\"no\":596,\"code\":\"U+1F456\",\"emoji\":\"👖\",\"description\":\"JEANS\",\"flagged\":false,\"keywords\":[\"clothing\",\"jeans\",\"pants\",\"trousers\"]},{\"no\":597,\"code\":\"U+1F457\",\"emoji\":\"👗\",\"description\":\"DRESS\",\"flagged\":false,\"keywords\":[\"clothing\",\"dress\"]},{\"no\":598,\"code\":\"U+1F458\",\"emoji\":\"👘\",\"description\":\"KIMONO\",\"flagged\":false,\"keywords\":[\"clothing\",\"kimono\"]},{\"no\":599,\"code\":\"U+1F459\",\"emoji\":\"👙\",\"description\":\"BIKINI\",\"flagged\":false,\"keywords\":[\"bikini\",\"clothing\",\"swim\"]},{\"no\":600,\"code\":\"U+1F45A\",\"emoji\":\"👚\",\"description\":\"WOMANS CLOTHES≊ woman’s clothes\",\"flagged\":false,\"keywords\":[\"clothing\",\"woman\"]},{\"no\":601,\"code\":\"U+1F45B\",\"emoji\":\"👛\",\"description\":\"PURSE\",\"flagged\":false,\"keywords\":[\"clothing\",\"coin\",\"purse\"]},{\"no\":602,\"code\":\"U+1F45C\",\"emoji\":\"👜\",\"description\":\"HANDBAG\",\"flagged\":false,\"keywords\":[\"bag\",\"clothing\",\"handbag\"]},{\"no\":603,\"code\":\"U+1F45D\",\"emoji\":\"👝\",\"description\":\"POUCH\",\"flagged\":false,\"keywords\":[\"bag\",\"clothing\",\"pouch\"]},{\"no\":604,\"code\":\"U+1F6CD\",\"emoji\":\"🛍\",\"description\":\"SHOPPING BAGS\",\"flagged\":false,\"keywords\":[\"bag\",\"hotel\",\"shopping\"]},{\"no\":605,\"code\":\"U+1F392\",\"emoji\":\"🎒\",\"description\":\"SCHOOL SATCHEL≊ school backpack\",\"flagged\":false,\"keywords\":[\"activity\",\"bag\",\"satchel\",\"school\"]},{\"no\":606,\"code\":\"U+1F45E\",\"emoji\":\"👞\",\"description\":\"MANS SHOE≊ man’s shoe\",\"flagged\":false,\"keywords\":[\"clothing\",\"man\",\"shoe\"]},{\"no\":607,\"code\":\"U+1F45F\",\"emoji\":\"👟\",\"description\":\"ATHLETIC SHOE≊ running shoe\",\"flagged\":false,\"keywords\":[\"athletic\",\"clothing\",\"shoe\",\"sneaker\"]},{\"no\":608,\"code\":\"U+1F460\",\"emoji\":\"👠\",\"description\":\"HIGH-HEELED SHOE\",\"flagged\":false,\"keywords\":[\"clothing\",\"heel\",\"shoe\",\"woman\"]},{\"no\":609,\"code\":\"U+1F461\",\"emoji\":\"👡\",\"description\":\"WOMANS SANDAL≊ woman’s sandal\",\"flagged\":false,\"keywords\":[\"clothing\",\"sandal\",\"shoe\",\"woman\"]},{\"no\":610,\"code\":\"U+1F462\",\"emoji\":\"👢\",\"description\":\"WOMANS BOOTS≊ woman’s boot\",\"flagged\":false,\"keywords\":[\"boot\",\"clothing\",\"shoe\",\"woman\"]},{\"no\":611,\"code\":\"U+1F451\",\"emoji\":\"👑\",\"description\":\"CROWN\",\"flagged\":false,\"keywords\":[\"clothing\",\"crown\",\"king\",\"queen\"]},{\"no\":612,\"code\":\"U+1F452\",\"emoji\":\"👒\",\"description\":\"WOMANS HAT≊ woman’s hat\",\"flagged\":false,\"keywords\":[\"clothing\",\"hat\",\"woman\"]},{\"no\":613,\"code\":\"U+1F3A9\",\"emoji\":\"🎩\",\"description\":\"TOP HAT\",\"flagged\":false,\"keywords\":[\"activity\",\"clothing\",\"entertainment\",\"hat\",\"top\",\"tophat\"]},{\"no\":614,\"code\":\"U+1F393\",\"emoji\":\"🎓\",\"description\":\"GRADUATION CAP\",\"flagged\":false,\"keywords\":[\"activity\",\"cap\",\"celebration\",\"clothing\",\"graduation\",\"hat\"]},{\"no\":615,\"code\":\"U+26D1\",\"emoji\":\"⛑\",\"description\":\"HELMET WITH WHITE CROSS\",\"flagged\":false,\"keywords\":[\"aid\",\"cross\",\"face\",\"hat\",\"helmet\"]},{\"no\":616,\"code\":\"U+1F4FF\",\"emoji\":\"📿\",\"description\":\"PRAYER BEADS\",\"flagged\":false,\"keywords\":[\"beads\",\"clothing\",\"necklace\",\"prayer\",\"religion\"]},{\"no\":617,\"code\":\"U+1F484\",\"emoji\":\"💄\",\"description\":\"LIPSTICK\",\"flagged\":false,\"keywords\":[\"cosmetics\",\"lipstick\",\"makeup\"]},{\"no\":618,\"code\":\"U+1F48D\",\"emoji\":\"💍\",\"description\":\"RING\",\"flagged\":false,\"keywords\":[\"diamond\",\"ring\",\"romance\"]},{\"no\":619,\"code\":\"U+1F48E\",\"emoji\":\"💎\",\"description\":\"GEM STONE\",\"flagged\":false,\"keywords\":[\"diamond\",\"gem\",\"jewel\",\"romance\"]}],\"Animals & Nature\":[{\"no\":620,\"code\":\"U+1F435\",\"emoji\":\"🐵\",\"description\":\"MONKEY FACE\",\"flagged\":false,\"keywords\":[\"face\",\"monkey\"]},{\"no\":621,\"code\":\"U+1F412\",\"emoji\":\"🐒\",\"description\":\"MONKEY\",\"flagged\":false,\"keywords\":[\"monkey\"]},{\"no\":622,\"code\":\"U+1F98D\",\"emoji\":\"🦍\",\"description\":\"GORILLA\",\"flagged\":true,\"keywords\":[\"gorilla\"]},{\"no\":623,\"code\":\"U+1F436\",\"emoji\":\"🐶\",\"description\":\"DOG FACE\",\"flagged\":false,\"keywords\":[\"dog\",\"face\",\"pet\"]},{\"no\":624,\"code\":\"U+1F415\",\"emoji\":\"🐕\",\"description\":\"DOG\",\"flagged\":false,\"keywords\":[\"dog\",\"pet\"]},{\"no\":625,\"code\":\"U+1F429\",\"emoji\":\"🐩\",\"description\":\"POODLE\",\"flagged\":false,\"keywords\":[\"dog\",\"poodle\"]},{\"no\":626,\"code\":\"U+1F43A\",\"emoji\":\"🐺\",\"description\":\"WOLF FACE\",\"flagged\":false,\"keywords\":[\"face\",\"wolf\"]},{\"no\":627,\"code\":\"U+1F98A\",\"emoji\":\"🦊\",\"description\":\"FOX FACE\",\"flagged\":true,\"keywords\":[\"face\",\"fox\"]},{\"no\":628,\"code\":\"U+1F431\",\"emoji\":\"🐱\",\"description\":\"CAT FACE\",\"flagged\":false,\"keywords\":[\"cat\",\"face\",\"pet\"]},{\"no\":629,\"code\":\"U+1F408\",\"emoji\":\"🐈\",\"description\":\"CAT\",\"flagged\":false,\"keywords\":[\"cat\",\"pet\"]},{\"no\":630,\"code\":\"U+1F981\",\"emoji\":\"🦁\",\"description\":\"LION FACE\",\"flagged\":false,\"keywords\":[\"face\",\"leo\",\"lion\",\"zodiac\"]},{\"no\":631,\"code\":\"U+1F42F\",\"emoji\":\"🐯\",\"description\":\"TIGER FACE\",\"flagged\":false,\"keywords\":[\"face\",\"tiger\"]},{\"no\":632,\"code\":\"U+1F405\",\"emoji\":\"🐅\",\"description\":\"TIGER\",\"flagged\":false,\"keywords\":[\"tiger\"]},{\"no\":633,\"code\":\"U+1F406\",\"emoji\":\"🐆\",\"description\":\"LEOPARD\",\"flagged\":false,\"keywords\":[\"leopard\"]},{\"no\":634,\"code\":\"U+1F434\",\"emoji\":\"🐴\",\"description\":\"HORSE FACE\",\"flagged\":false,\"keywords\":[\"face\",\"horse\"]},{\"no\":635,\"code\":\"U+1F40E\",\"emoji\":\"🐎\",\"description\":\"HORSE\",\"flagged\":false,\"keywords\":[\"horse\",\"racehorse\",\"racing\"]},{\"no\":636,\"code\":\"U+1F98C\",\"emoji\":\"🦌\",\"description\":\"DEER\",\"flagged\":true,\"keywords\":[\"deer\"]},{\"no\":637,\"code\":\"U+1F984\",\"emoji\":\"🦄\",\"description\":\"UNICORN FACE\",\"flagged\":false,\"keywords\":[\"face\",\"unicorn\"]},{\"no\":638,\"code\":\"U+1F42E\",\"emoji\":\"🐮\",\"description\":\"COW FACE\",\"flagged\":false,\"keywords\":[\"cow\",\"face\"]},{\"no\":639,\"code\":\"U+1F402\",\"emoji\":\"🐂\",\"description\":\"OX\",\"flagged\":false,\"keywords\":[\"bull\",\"ox\",\"taurus\",\"zodiac\"]},{\"no\":640,\"code\":\"U+1F403\",\"emoji\":\"🐃\",\"description\":\"WATER BUFFALO\",\"flagged\":false,\"keywords\":[\"buffalo\",\"water\"]},{\"no\":641,\"code\":\"U+1F404\",\"emoji\":\"🐄\",\"description\":\"COW\",\"flagged\":false,\"keywords\":[\"cow\"]},{\"no\":642,\"code\":\"U+1F437\",\"emoji\":\"🐷\",\"description\":\"PIG FACE\",\"flagged\":false,\"keywords\":[\"face\",\"pig\"]},{\"no\":643,\"code\":\"U+1F416\",\"emoji\":\"🐖\",\"description\":\"PIG\",\"flagged\":false,\"keywords\":[\"pig\",\"sow\"]},{\"no\":644,\"code\":\"U+1F417\",\"emoji\":\"🐗\",\"description\":\"BOAR\",\"flagged\":false,\"keywords\":[\"boar\",\"pig\"]},{\"no\":645,\"code\":\"U+1F43D\",\"emoji\":\"🐽\",\"description\":\"PIG NOSE\",\"flagged\":false,\"keywords\":[\"face\",\"nose\",\"pig\"]},{\"no\":646,\"code\":\"U+1F40F\",\"emoji\":\"🐏\",\"description\":\"RAM\",\"flagged\":false,\"keywords\":[\"aries\",\"ram\",\"sheep\",\"zodiac\"]},{\"no\":647,\"code\":\"U+1F411\",\"emoji\":\"🐑\",\"description\":\"SHEEP\",\"flagged\":false,\"keywords\":[\"ewe\",\"sheep\"]},{\"no\":648,\"code\":\"U+1F410\",\"emoji\":\"🐐\",\"description\":\"GOAT\",\"flagged\":false,\"keywords\":[\"capricorn\",\"goat\",\"zodiac\"]},{\"no\":649,\"code\":\"U+1F42A\",\"emoji\":\"🐪\",\"description\":\"DROMEDARY CAMEL≊ camel\",\"flagged\":false,\"keywords\":[\"camel\",\"dromedary\",\"hump\"]},{\"no\":650,\"code\":\"U+1F42B\",\"emoji\":\"🐫\",\"description\":\"BACTRIAN CAMEL≊ two-hump camel\",\"flagged\":false,\"keywords\":[\"bactrian\",\"camel\",\"hump\"]},{\"no\":651,\"code\":\"U+1F418\",\"emoji\":\"🐘\",\"description\":\"ELEPHANT\",\"flagged\":false,\"keywords\":[\"elephant\"]},{\"no\":652,\"code\":\"U+1F98F\",\"emoji\":\"🦏\",\"description\":\"RHINOCEROS\",\"flagged\":true,\"keywords\":[\"rhinoceros\"]},{\"no\":653,\"code\":\"U+1F42D\",\"emoji\":\"🐭\",\"description\":\"MOUSE FACE\",\"flagged\":false,\"keywords\":[\"face\",\"mouse\"]},{\"no\":654,\"code\":\"U+1F401\",\"emoji\":\"🐁\",\"description\":\"MOUSE\",\"flagged\":false,\"keywords\":[\"mouse\"]},{\"no\":655,\"code\":\"U+1F400\",\"emoji\":\"🐀\",\"description\":\"RAT\",\"flagged\":false,\"keywords\":[\"rat\"]},{\"no\":656,\"code\":\"U+1F439\",\"emoji\":\"🐹\",\"description\":\"HAMSTER FACE\",\"flagged\":false,\"keywords\":[\"face\",\"hamster\",\"pet\"]},{\"no\":657,\"code\":\"U+1F430\",\"emoji\":\"🐰\",\"description\":\"RABBIT FACE\",\"flagged\":false,\"keywords\":[\"bunny\",\"face\",\"pet\",\"rabbit\"]},{\"no\":658,\"code\":\"U+1F407\",\"emoji\":\"🐇\",\"description\":\"RABBIT\",\"flagged\":false,\"keywords\":[\"bunny\",\"pet\",\"rabbit\"]},{\"no\":659,\"code\":\"U+1F43F\",\"emoji\":\"🐿\",\"description\":\"CHIPMUNK\",\"flagged\":false,\"keywords\":[\"chipmunk\"]},{\"no\":660,\"code\":\"U+1F987\",\"emoji\":\"🦇\",\"description\":\"BAT\",\"flagged\":true,\"keywords\":[\"bat\",\"vampire\"]},{\"no\":661,\"code\":\"U+1F43B\",\"emoji\":\"🐻\",\"description\":\"BEAR FACE\",\"flagged\":false,\"keywords\":[\"bear\",\"face\"]},{\"no\":662,\"code\":\"U+1F428\",\"emoji\":\"🐨\",\"description\":\"KOALA\",\"flagged\":false,\"keywords\":[\"bear\",\"koala\"]},{\"no\":663,\"code\":\"U+1F43C\",\"emoji\":\"🐼\",\"description\":\"PANDA FACE\",\"flagged\":false,\"keywords\":[\"face\",\"panda\"]},{\"no\":664,\"code\":\"U+1F43E\",\"emoji\":\"🐾\",\"description\":\"PAW PRINTS\",\"flagged\":false,\"keywords\":[\"feet\",\"paw\",\"print\"]},{\"no\":665,\"code\":\"U+1F983\",\"emoji\":\"🦃\",\"description\":\"TURKEY\",\"flagged\":false,\"keywords\":[\"turkey\"]},{\"no\":666,\"code\":\"U+1F414\",\"emoji\":\"🐔\",\"description\":\"CHICKEN\",\"flagged\":false,\"keywords\":[\"chicken\"]},{\"no\":667,\"code\":\"U+1F413\",\"emoji\":\"🐓\",\"description\":\"ROOSTER\",\"flagged\":false,\"keywords\":[\"rooster\"]},{\"no\":668,\"code\":\"U+1F423\",\"emoji\":\"🐣\",\"description\":\"HATCHING CHICK\",\"flagged\":false,\"keywords\":[\"baby\",\"chick\",\"hatching\"]},{\"no\":669,\"code\":\"U+1F424\",\"emoji\":\"🐤\",\"description\":\"BABY CHICK\",\"flagged\":false,\"keywords\":[\"baby\",\"chick\"]},{\"no\":670,\"code\":\"U+1F425\",\"emoji\":\"🐥\",\"description\":\"FRONT-FACING BABY CHICK\",\"flagged\":false,\"keywords\":[\"baby\",\"chick\"]},{\"no\":671,\"code\":\"U+1F426\",\"emoji\":\"🐦\",\"description\":\"BIRD\",\"flagged\":false,\"keywords\":[\"bird\"]},{\"no\":672,\"code\":\"U+1F427\",\"emoji\":\"🐧\",\"description\":\"PENGUIN\",\"flagged\":false,\"keywords\":[\"penguin\"]},{\"no\":673,\"code\":\"U+1F54A\",\"emoji\":\"🕊\",\"description\":\"DOVE OF PEACE≊ dove\",\"flagged\":false,\"keywords\":[\"bird\",\"dove\",\"fly\",\"peace\"]},{\"no\":674,\"code\":\"U+1F985\",\"emoji\":\"🦅\",\"description\":\"EAGLE\",\"flagged\":true,\"keywords\":[\"bird\",\"eagle\"]},{\"no\":675,\"code\":\"U+1F986\",\"emoji\":\"🦆\",\"description\":\"DUCK\",\"flagged\":true,\"keywords\":[\"bird\",\"duck\"]},{\"no\":676,\"code\":\"U+1F989\",\"emoji\":\"🦉\",\"description\":\"OWL\",\"flagged\":true,\"keywords\":[\"bird\",\"owl\",\"wise\"]},{\"no\":677,\"code\":\"U+1F438\",\"emoji\":\"🐸\",\"description\":\"FROG FACE\",\"flagged\":false,\"keywords\":[\"face\",\"frog\"]},{\"no\":678,\"code\":\"U+1F40A\",\"emoji\":\"🐊\",\"description\":\"CROCODILE\",\"flagged\":false,\"keywords\":[\"crocodile\"]},{\"no\":679,\"code\":\"U+1F422\",\"emoji\":\"🐢\",\"description\":\"TURTLE\",\"flagged\":false,\"keywords\":[\"turtle\"]},{\"no\":680,\"code\":\"U+1F98E\",\"emoji\":\"🦎\",\"description\":\"LIZARD\",\"flagged\":true,\"keywords\":[\"lizard\",\"reptile\"]},{\"no\":681,\"code\":\"U+1F40D\",\"emoji\":\"🐍\",\"description\":\"SNAKE\",\"flagged\":false,\"keywords\":[\"bearer\",\"ophiuchus\",\"serpent\",\"snake\",\"zodiac\"]},{\"no\":682,\"code\":\"U+1F432\",\"emoji\":\"🐲\",\"description\":\"DRAGON FACE\",\"flagged\":false,\"keywords\":[\"dragon\",\"face\",\"fairy tale\"]},{\"no\":683,\"code\":\"U+1F409\",\"emoji\":\"🐉\",\"description\":\"DRAGON\",\"flagged\":false,\"keywords\":[\"dragon\",\"fairy tale\"]},{\"no\":684,\"code\":\"U+1F433\",\"emoji\":\"🐳\",\"description\":\"SPOUTING WHALE\",\"flagged\":false,\"keywords\":[\"face\",\"spouting\",\"whale\"]},{\"no\":685,\"code\":\"U+1F40B\",\"emoji\":\"🐋\",\"description\":\"WHALE\",\"flagged\":false,\"keywords\":[\"whale\"]},{\"no\":686,\"code\":\"U+1F42C\",\"emoji\":\"🐬\",\"description\":\"DOLPHIN\",\"flagged\":false,\"keywords\":[\"dolphin\",\"flipper\"]},{\"no\":687,\"code\":\"U+1F41F\",\"emoji\":\"🐟\",\"description\":\"FISH\",\"flagged\":false,\"keywords\":[\"fish\",\"pisces\",\"zodiac\"]},{\"no\":688,\"code\":\"U+1F420\",\"emoji\":\"🐠\",\"description\":\"TROPICAL FISH\",\"flagged\":false,\"keywords\":[\"fish\",\"tropical\"]},{\"no\":689,\"code\":\"U+1F421\",\"emoji\":\"🐡\",\"description\":\"BLOWFISH\",\"flagged\":false,\"keywords\":[\"blowfish\",\"fish\"]},{\"no\":690,\"code\":\"U+1F988\",\"emoji\":\"🦈\",\"description\":\"SHARK\",\"flagged\":true,\"keywords\":[\"fish\",\"shark\"]},{\"no\":691,\"code\":\"U+1F419\",\"emoji\":\"🐙\",\"description\":\"OCTOPUS\",\"flagged\":false,\"keywords\":[\"octopus\"]},{\"no\":692,\"code\":\"U+1F41A\",\"emoji\":\"🐚\",\"description\":\"SPIRAL SHELL\",\"flagged\":false,\"keywords\":[\"shell\",\"spiral\"]},{\"no\":693,\"code\":\"U+1F980\",\"emoji\":\"🦀\",\"description\":\"CRAB\",\"flagged\":false,\"keywords\":[\"cancer\",\"crab\",\"zodiac\"]},{\"no\":694,\"code\":\"U+1F990\",\"emoji\":\"🦐\",\"description\":\"SHRIMP\",\"flagged\":true,\"keywords\":[\"shellfish\",\"shrimp\",\"small\"]},{\"no\":695,\"code\":\"U+1F991\",\"emoji\":\"🦑\",\"description\":\"SQUID\",\"flagged\":true,\"keywords\":[\"molusc\",\"squid\"]},{\"no\":696,\"code\":\"U+1F98B\",\"emoji\":\"🦋\",\"description\":\"BUTTERFLY\",\"flagged\":true,\"keywords\":[\"butterfly\",\"insect\",\"pretty\"]},{\"no\":697,\"code\":\"U+1F40C\",\"emoji\":\"🐌\",\"description\":\"SNAIL\",\"flagged\":false,\"keywords\":[\"snail\"]},{\"no\":698,\"code\":\"U+1F41B\",\"emoji\":\"🐛\",\"description\":\"BUG\",\"flagged\":false,\"keywords\":[\"bug\",\"insect\"]},{\"no\":699,\"code\":\"U+1F41C\",\"emoji\":\"🐜\",\"description\":\"ANT\",\"flagged\":false,\"keywords\":[\"ant\",\"insect\"]},{\"no\":700,\"code\":\"U+1F41D\",\"emoji\":\"🐝\",\"description\":\"HONEYBEE\",\"flagged\":false,\"keywords\":[\"bee\",\"honeybee\",\"insect\"]},{\"no\":701,\"code\":\"U+1F41E\",\"emoji\":\"🐞\",\"description\":\"LADY BEETLE\",\"flagged\":false,\"keywords\":[\"beetle\",\"insect\",\"lady beetle\",\"ladybird\",\"ladybug\"]},{\"no\":702,\"code\":\"U+1F577\",\"emoji\":\"🕷\",\"description\":\"SPIDER\",\"flagged\":false,\"keywords\":[\"insect\",\"spider\"]},{\"no\":703,\"code\":\"U+1F578\",\"emoji\":\"🕸\",\"description\":\"SPIDER WEB\",\"flagged\":false,\"keywords\":[\"spider\",\"web\"]},{\"no\":704,\"code\":\"U+1F982\",\"emoji\":\"🦂\",\"description\":\"SCORPION\",\"flagged\":false,\"keywords\":[\"scorpio\",\"scorpion\",\"scorpius\",\"zodiac\"]},{\"no\":705,\"code\":\"U+1F490\",\"emoji\":\"💐\",\"description\":\"BOUQUET\",\"flagged\":false,\"keywords\":[\"bouquet\",\"flower\",\"plant\",\"romance\"]},{\"no\":706,\"code\":\"U+1F338\",\"emoji\":\"🌸\",\"description\":\"CHERRY BLOSSOM\",\"flagged\":false,\"keywords\":[\"blossom\",\"cherry\",\"flower\",\"plant\"]},{\"no\":707,\"code\":\"U+1F4AE\",\"emoji\":\"💮\",\"description\":\"WHITE FLOWER\",\"flagged\":false,\"keywords\":[\"flower\"]},{\"no\":708,\"code\":\"U+1F3F5\",\"emoji\":\"🏵\",\"description\":\"ROSETTE\",\"flagged\":false,\"keywords\":[\"plant\",\"rosette\"]},{\"no\":709,\"code\":\"U+1F339\",\"emoji\":\"🌹\",\"description\":\"ROSE\",\"flagged\":false,\"keywords\":[\"flower\",\"plant\",\"rose\"]},{\"no\":710,\"code\":\"U+1F940\",\"emoji\":\"🥀\",\"description\":\"WILTED FLOWER\",\"flagged\":true,\"keywords\":[\"flower\",\"wilted\"]},{\"no\":711,\"code\":\"U+1F33A\",\"emoji\":\"🌺\",\"description\":\"HIBISCUS\",\"flagged\":false,\"keywords\":[\"flower\",\"hibiscus\",\"plant\"]},{\"no\":712,\"code\":\"U+1F33B\",\"emoji\":\"🌻\",\"description\":\"SUNFLOWER\",\"flagged\":false,\"keywords\":[\"flower\",\"plant\",\"sun\",\"sunflower\"]},{\"no\":713,\"code\":\"U+1F33C\",\"emoji\":\"🌼\",\"description\":\"BLOSSOM\",\"flagged\":false,\"keywords\":[\"blossom\",\"flower\",\"plant\"]},{\"no\":714,\"code\":\"U+1F337\",\"emoji\":\"🌷\",\"description\":\"TULIP\",\"flagged\":false,\"keywords\":[\"flower\",\"plant\",\"tulip\"]},{\"no\":715,\"code\":\"U+1F331\",\"emoji\":\"🌱\",\"description\":\"SEEDLING\",\"flagged\":false,\"keywords\":[\"plant\",\"seedling\",\"young\"]},{\"no\":716,\"code\":\"U+1F332\",\"emoji\":\"🌲\",\"description\":\"EVERGREEN TREE≊ evergreen\",\"flagged\":false,\"keywords\":[\"evergreen\",\"plant\",\"tree\"]},{\"no\":717,\"code\":\"U+1F333\",\"emoji\":\"🌳\",\"description\":\"DECIDUOUS TREE\",\"flagged\":false,\"keywords\":[\"deciduous\",\"plant\",\"shedding\",\"tree\"]},{\"no\":718,\"code\":\"U+1F334\",\"emoji\":\"🌴\",\"description\":\"PALM TREE\",\"flagged\":false,\"keywords\":[\"palm\",\"plant\",\"tree\"]},{\"no\":719,\"code\":\"U+1F335\",\"emoji\":\"🌵\",\"description\":\"CACTUS\",\"flagged\":false,\"keywords\":[\"cactus\",\"plant\"]},{\"no\":720,\"code\":\"U+1F33E\",\"emoji\":\"🌾\",\"description\":\"EAR OF RICE≊ sheaf of rice\",\"flagged\":false,\"keywords\":[\"ear\",\"plant\",\"rice\"]},{\"no\":721,\"code\":\"U+1F33F\",\"emoji\":\"🌿\",\"description\":\"HERB\",\"flagged\":false,\"keywords\":[\"herb\",\"leaf\",\"plant\"]},{\"no\":722,\"code\":\"U+2618\",\"emoji\":\"☘\",\"description\":\"SHAMROCK\",\"flagged\":false,\"keywords\":[\"plant\",\"shamrock\"]},{\"no\":723,\"code\":\"U+1F340\",\"emoji\":\"🍀\",\"description\":\"FOUR LEAF CLOVER\",\"flagged\":false,\"keywords\":[\"4\",\"clover\",\"four\",\"leaf\",\"plant\"]},{\"no\":724,\"code\":\"U+1F341\",\"emoji\":\"🍁\",\"description\":\"MAPLE LEAF\",\"flagged\":false,\"keywords\":[\"falling\",\"leaf\",\"maple\",\"plant\"]},{\"no\":725,\"code\":\"U+1F342\",\"emoji\":\"🍂\",\"description\":\"FALLEN LEAF\",\"flagged\":false,\"keywords\":[\"falling\",\"leaf\",\"plant\"]},{\"no\":726,\"code\":\"U+1F343\",\"emoji\":\"🍃\",\"description\":\"LEAF FLUTTERING IN WIND\",\"flagged\":false,\"keywords\":[\"blow\",\"flutter\",\"leaf\",\"plant\",\"wind\"]},{\"no\":727,\"code\":\"U+1F347\",\"emoji\":\"🍇\",\"description\":\"GRAPES\",\"flagged\":false,\"keywords\":[\"fruit\",\"grape\",\"plant\"]},{\"no\":728,\"code\":\"U+1F348\",\"emoji\":\"🍈\",\"description\":\"MELON\",\"flagged\":false,\"keywords\":[\"fruit\",\"melon\",\"plant\"]},{\"no\":729,\"code\":\"U+1F349\",\"emoji\":\"🍉\",\"description\":\"WATERMELON\",\"flagged\":false,\"keywords\":[\"fruit\",\"plant\",\"watermelon\"]},{\"no\":730,\"code\":\"U+1F34A\",\"emoji\":\"🍊\",\"description\":\"TANGERINE\",\"flagged\":false,\"keywords\":[\"fruit\",\"orange\",\"plant\",\"tangerine\"]},{\"no\":731,\"code\":\"U+1F34B\",\"emoji\":\"🍋\",\"description\":\"LEMON\",\"flagged\":false,\"keywords\":[\"citrus\",\"fruit\",\"lemon\",\"plant\"]},{\"no\":732,\"code\":\"U+1F34C\",\"emoji\":\"🍌\",\"description\":\"BANANA\",\"flagged\":false,\"keywords\":[\"banana\",\"fruit\",\"plant\"]},{\"no\":733,\"code\":\"U+1F34D\",\"emoji\":\"🍍\",\"description\":\"PINEAPPLE\",\"flagged\":false,\"keywords\":[\"fruit\",\"pineapple\",\"plant\"]},{\"no\":734,\"code\":\"U+1F34E\",\"emoji\":\"🍎\",\"description\":\"RED APPLE\",\"flagged\":false,\"keywords\":[\"apple\",\"fruit\",\"plant\",\"red\"]},{\"no\":735,\"code\":\"U+1F34F\",\"emoji\":\"🍏\",\"description\":\"GREEN APPLE\",\"flagged\":false,\"keywords\":[\"apple\",\"fruit\",\"green\",\"plant\"]},{\"no\":736,\"code\":\"U+1F350\",\"emoji\":\"🍐\",\"description\":\"PEAR\",\"flagged\":false,\"keywords\":[\"fruit\",\"pear\",\"plant\"]},{\"no\":737,\"code\":\"U+1F351\",\"emoji\":\"🍑\",\"description\":\"PEACH\",\"flagged\":false,\"keywords\":[\"fruit\",\"peach\",\"plant\"]},{\"no\":738,\"code\":\"U+1F352\",\"emoji\":\"🍒\",\"description\":\"CHERRIES\",\"flagged\":false,\"keywords\":[\"cherry\",\"fruit\",\"plant\"]},{\"no\":739,\"code\":\"U+1F353\",\"emoji\":\"🍓\",\"description\":\"STRAWBERRY\",\"flagged\":false,\"keywords\":[\"berry\",\"fruit\",\"plant\",\"strawberry\"]},{\"no\":740,\"code\":\"U+1F345\",\"emoji\":\"🍅\",\"description\":\"TOMATO\",\"flagged\":false,\"keywords\":[\"plant\",\"tomato\",\"vegetable\"]},{\"no\":741,\"code\":\"U+1F95D\",\"emoji\":\"🥝\",\"description\":\"KIWIFRUIT\",\"flagged\":true,\"keywords\":[\"fruit\",\"kiwi\"]},{\"no\":742,\"code\":\"U+1F951\",\"emoji\":\"🥑\",\"description\":\"AVOCADO\",\"flagged\":true,\"keywords\":[\"avocado\",\"fruit\"]},{\"no\":743,\"code\":\"U+1F346\",\"emoji\":\"🍆\",\"description\":\"AUBERGINE≊ eggplant\",\"flagged\":false,\"keywords\":[\"aubergine\",\"eggplant\",\"plant\",\"vegetable\"]},{\"no\":744,\"code\":\"U+1F954\",\"emoji\":\"🥔\",\"description\":\"POTATO\",\"flagged\":true,\"keywords\":[\"potato\",\"vegetable\"]},{\"no\":745,\"code\":\"U+1F955\",\"emoji\":\"🥕\",\"description\":\"CARROT\",\"flagged\":true,\"keywords\":[\"carrot\",\"vegetable\"]},{\"no\":746,\"code\":\"U+1F33D\",\"emoji\":\"🌽\",\"description\":\"EAR OF MAIZE≊ ear of corn\",\"flagged\":false,\"keywords\":[\"corn\",\"ear\",\"maize\",\"maze\",\"plant\"]},{\"no\":747,\"code\":\"U+1F336\",\"emoji\":\"🌶\",\"description\":\"HOT PEPPER\",\"flagged\":false,\"keywords\":[\"hot\",\"pepper\",\"plant\"]},{\"no\":748,\"code\":\"U+1F952\",\"emoji\":\"🥒\",\"description\":\"CUCUMBER\",\"flagged\":true,\"keywords\":[\"cucumber\",\"pickle\",\"vegetable\"]},{\"no\":749,\"code\":\"U+1F344\",\"emoji\":\"🍄\",\"description\":\"MUSHROOM\",\"flagged\":false,\"keywords\":[\"mushroom\",\"plant\"]},{\"no\":750,\"code\":\"U+1F95C\",\"emoji\":\"🥜\",\"description\":\"PEANUTS\",\"flagged\":false,\"keywords\":[\"nut\",\"peanut\",\"vegetable\"]},{\"no\":751,\"code\":\"U+1F330\",\"emoji\":\"🌰\",\"description\":\"CHESTNUT\",\"flagged\":false,\"keywords\":[\"chestnut\",\"plant\"]},{\"no\":752,\"code\":\"U+1F35E\",\"emoji\":\"🍞\",\"description\":\"BREAD\",\"flagged\":false,\"keywords\":[\"bread\",\"loaf\"]},{\"no\":753,\"code\":\"U+1F950\",\"emoji\":\"🥐\",\"description\":\"CROISSANT\",\"flagged\":true,\"keywords\":[\"bread\",\"crescent roll\",\"croissant\",\"french\"]},{\"no\":754,\"code\":\"U+1F956\",\"emoji\":\"🥖\",\"description\":\"BAGUETTE BREAD\",\"flagged\":true,\"keywords\":[\"baguette\",\"bread\",\"french\"]},{\"no\":755,\"code\":\"U+1F95E\",\"emoji\":\"🥞\",\"description\":\"PANCAKES\",\"flagged\":true,\"keywords\":[\"crêpe\",\"hotcake\",\"pancake\"]},{\"no\":756,\"code\":\"U+1F9C0\",\"emoji\":\"🧀\",\"description\":\"CHEESE WEDGE\",\"flagged\":false,\"keywords\":[\"cheese\"]},{\"no\":757,\"code\":\"U+1F356\",\"emoji\":\"🍖\",\"description\":\"MEAT ON BONE\",\"flagged\":false,\"keywords\":[\"bone\",\"meat\"]},{\"no\":758,\"code\":\"U+1F357\",\"emoji\":\"🍗\",\"description\":\"POULTRY LEG\",\"flagged\":false,\"keywords\":[\"bone\",\"chicken\",\"leg\",\"poultry\"]},{\"no\":759,\"code\":\"U+1F953\",\"emoji\":\"🥓\",\"description\":\"BACON\",\"flagged\":true,\"keywords\":[\"bacon\",\"meat\"]},{\"no\":760,\"code\":\"U+1F354\",\"emoji\":\"🍔\",\"description\":\"HAMBURGER\",\"flagged\":false,\"keywords\":[\"burger\",\"hamburger\"]},{\"no\":761,\"code\":\"U+1F35F\",\"emoji\":\"🍟\",\"description\":\"FRENCH FRIES\",\"flagged\":false,\"keywords\":[\"french\",\"fries\"]},{\"no\":762,\"code\":\"U+1F355\",\"emoji\":\"🍕\",\"description\":\"SLICE OF PIZZA≊ pizza\",\"flagged\":false,\"keywords\":[\"cheese\",\"pizza\",\"slice\"]},{\"no\":763,\"code\":\"U+1F32D\",\"emoji\":\"🌭\",\"description\":\"HOT DOG\",\"flagged\":false,\"keywords\":[\"frankfurter\",\"hot dog\",\"hotdog\",\"sausage\"]},{\"no\":764,\"code\":\"U+1F32E\",\"emoji\":\"🌮\",\"description\":\"TACO\",\"flagged\":false,\"keywords\":[\"mexican\",\"taco\"]},{\"no\":765,\"code\":\"U+1F32F\",\"emoji\":\"🌯\",\"description\":\"BURRITO\",\"flagged\":false,\"keywords\":[\"burrito\",\"mexican\"]},{\"no\":766,\"code\":\"U+1F959\",\"emoji\":\"🥙\",\"description\":\"STUFFED FLATBREAD\",\"flagged\":true,\"keywords\":[\"falafel\",\"flatbread\",\"gyro\",\"kebab\",\"stuffed\"]},{\"no\":767,\"code\":\"U+1F95A\",\"emoji\":\"🥚\",\"description\":\"EGG\",\"flagged\":true,\"keywords\":[\"egg\"]},{\"no\":768,\"code\":\"U+1F373\",\"emoji\":\"🍳\",\"description\":\"COOKING\",\"flagged\":false,\"keywords\":[\"cooking\",\"egg\",\"frying\",\"pan\"]},{\"no\":769,\"code\":\"U+1F958\",\"emoji\":\"🥘\",\"description\":\"SHALLOW PAN OF FOOD\",\"flagged\":true,\"keywords\":[\"casserole\",\"paella\",\"pan\",\"shallow\"]},{\"no\":770,\"code\":\"U+1F372\",\"emoji\":\"🍲\",\"description\":\"POT OF FOOD\",\"flagged\":false,\"keywords\":[\"pot\",\"stew\"]},{\"no\":771,\"code\":\"U+1F957\",\"emoji\":\"🥗\",\"description\":\"GREEN SALAD\",\"flagged\":true,\"keywords\":[\"green\",\"salad\"]},{\"no\":772,\"code\":\"U+1F37F\",\"emoji\":\"🍿\",\"description\":\"POPCORN\",\"flagged\":false,\"keywords\":[\"popcorn\"]},{\"no\":773,\"code\":\"U+1F371\",\"emoji\":\"🍱\",\"description\":\"BENTO BOX\",\"flagged\":false,\"keywords\":[\"bento\",\"box\"]},{\"no\":774,\"code\":\"U+1F358\",\"emoji\":\"🍘\",\"description\":\"RICE CRACKER\",\"flagged\":false,\"keywords\":[\"cracker\",\"rice\"]},{\"no\":775,\"code\":\"U+1F359\",\"emoji\":\"🍙\",\"description\":\"RICE BALL\",\"flagged\":false,\"keywords\":[\"ball\",\"japanese\",\"rice\"]},{\"no\":776,\"code\":\"U+1F35A\",\"emoji\":\"🍚\",\"description\":\"COOKED RICE\",\"flagged\":false,\"keywords\":[\"cooked\",\"rice\"]},{\"no\":777,\"code\":\"U+1F35B\",\"emoji\":\"🍛\",\"description\":\"CURRY AND RICE≊ curry rice\",\"flagged\":false,\"keywords\":[\"curry\",\"rice\"]},{\"no\":778,\"code\":\"U+1F35C\",\"emoji\":\"🍜\",\"description\":\"STEAMING BOWL\",\"flagged\":false,\"keywords\":[\"bowl\",\"noodle\",\"ramen\",\"steaming\"]},{\"no\":779,\"code\":\"U+1F35D\",\"emoji\":\"🍝\",\"description\":\"SPAGHETTI\",\"flagged\":false,\"keywords\":[\"pasta\",\"spaghetti\"]},{\"no\":780,\"code\":\"U+1F360\",\"emoji\":\"🍠\",\"description\":\"ROASTED SWEET POTATO\",\"flagged\":false,\"keywords\":[\"potato\",\"roasted\",\"sweet\"]},{\"no\":781,\"code\":\"U+1F362\",\"emoji\":\"🍢\",\"description\":\"ODEN\",\"flagged\":false,\"keywords\":[\"kebab\",\"oden\",\"seafood\",\"skewer\",\"stick\"]},{\"no\":782,\"code\":\"U+1F363\",\"emoji\":\"🍣\",\"description\":\"SUSHI\",\"flagged\":false,\"keywords\":[\"sushi\"]},{\"no\":783,\"code\":\"U+1F364\",\"emoji\":\"🍤\",\"description\":\"FRIED SHRIMP\",\"flagged\":false,\"keywords\":[\"fried\",\"prawn\",\"shrimp\",\"tempura\"]},{\"no\":784,\"code\":\"U+1F365\",\"emoji\":\"🍥\",\"description\":\"FISH CAKE WITH SWIRL DESIGN≊ fish cake with swirl\",\"flagged\":false,\"keywords\":[\"cake\",\"fish\",\"pastry\",\"swirl\"]},{\"no\":785,\"code\":\"U+1F361\",\"emoji\":\"🍡\",\"description\":\"DANGO\",\"flagged\":false,\"keywords\":[\"dango\",\"dessert\",\"japanese\",\"skewer\",\"stick\",\"sweet\"]},{\"no\":786,\"code\":\"U+1F366\",\"emoji\":\"🍦\",\"description\":\"SOFT ICE CREAM\",\"flagged\":false,\"keywords\":[\"cream\",\"dessert\",\"ice\",\"icecream\",\"soft\",\"sweet\"]},{\"no\":787,\"code\":\"U+1F367\",\"emoji\":\"🍧\",\"description\":\"SHAVED ICE\",\"flagged\":false,\"keywords\":[\"dessert\",\"ice\",\"shaved\",\"sweet\"]},{\"no\":788,\"code\":\"U+1F368\",\"emoji\":\"🍨\",\"description\":\"ICE CREAM\",\"flagged\":false,\"keywords\":[\"cream\",\"dessert\",\"ice\",\"sweet\"]},{\"no\":789,\"code\":\"U+1F369\",\"emoji\":\"🍩\",\"description\":\"DOUGHNUT\",\"flagged\":false,\"keywords\":[\"dessert\",\"donut\",\"doughnut\",\"sweet\"]},{\"no\":790,\"code\":\"U+1F36A\",\"emoji\":\"🍪\",\"description\":\"COOKIE\",\"flagged\":false,\"keywords\":[\"cookie\",\"dessert\",\"sweet\"]},{\"no\":791,\"code\":\"U+1F382\",\"emoji\":\"🎂\",\"description\":\"BIRTHDAY CAKE\",\"flagged\":false,\"keywords\":[\"birthday\",\"cake\",\"celebration\",\"dessert\",\"pastry\",\"sweet\"]},{\"no\":792,\"code\":\"U+1F370\",\"emoji\":\"🍰\",\"description\":\"SHORTCAKE\",\"flagged\":false,\"keywords\":[\"cake\",\"dessert\",\"pastry\",\"shortcake\",\"slice\",\"sweet\"]},{\"no\":793,\"code\":\"U+1F36B\",\"emoji\":\"🍫\",\"description\":\"CHOCOLATE BAR\",\"flagged\":false,\"keywords\":[\"bar\",\"chocolate\",\"dessert\",\"sweet\"]},{\"no\":794,\"code\":\"U+1F36C\",\"emoji\":\"🍬\",\"description\":\"CANDY\",\"flagged\":false,\"keywords\":[\"candy\",\"dessert\",\"sweet\"]},{\"no\":795,\"code\":\"U+1F36D\",\"emoji\":\"🍭\",\"description\":\"LOLLIPOP\",\"flagged\":false,\"keywords\":[\"candy\",\"dessert\",\"lollipop\",\"sweet\"]},{\"no\":796,\"code\":\"U+1F36E\",\"emoji\":\"🍮\",\"description\":\"CUSTARD\",\"flagged\":false,\"keywords\":[\"custard\",\"dessert\",\"pudding\",\"sweet\"]},{\"no\":797,\"code\":\"U+1F36F\",\"emoji\":\"🍯\",\"description\":\"HONEY POT\",\"flagged\":false,\"keywords\":[\"honey\",\"honeypot\",\"pot\",\"sweet\"]},{\"no\":798,\"code\":\"U+1F37C\",\"emoji\":\"🍼\",\"description\":\"BABY BOTTLE\",\"flagged\":false,\"keywords\":[\"baby\",\"bottle\",\"drink\",\"milk\"]},{\"no\":799,\"code\":\"U+1F95B\",\"emoji\":\"🥛\",\"description\":\"GLASS OF MILK\",\"flagged\":true,\"keywords\":[\"drink\",\"glass\",\"milk\"]},{\"no\":800,\"code\":\"U+2615\",\"emoji\":\"☕\",\"description\":\"HOT BEVERAGE\",\"flagged\":false,\"keywords\":[\"beverage\",\"coffee\",\"drink\",\"hot\",\"steaming\",\"tea\"]},{\"no\":801,\"code\":\"U+1F375\",\"emoji\":\"🍵\",\"description\":\"TEACUP WITHOUT HANDLE\",\"flagged\":false,\"keywords\":[\"beverage\",\"cup\",\"drink\",\"tea\",\"teacup\"]},{\"no\":802,\"code\":\"U+1F376\",\"emoji\":\"🍶\",\"description\":\"SAKE BOTTLE AND CUP≊ sake\",\"flagged\":false,\"keywords\":[\"bar\",\"beverage\",\"bottle\",\"cup\",\"drink\",\"sake\"]},{\"no\":803,\"code\":\"U+1F37E\",\"emoji\":\"🍾\",\"description\":\"BOTTLE WITH POPPING CORK\",\"flagged\":false,\"keywords\":[\"bar\",\"bottle\",\"cork\",\"drink\",\"popping\"]},{\"no\":804,\"code\":\"U+1F377\",\"emoji\":\"🍷\",\"description\":\"WINE GLASS\",\"flagged\":false,\"keywords\":[\"bar\",\"beverage\",\"drink\",\"glass\",\"wine\"]},{\"no\":805,\"code\":\"U+1F378\",\"emoji\":\"🍸\",\"description\":\"COCKTAIL GLASS\",\"flagged\":false,\"keywords\":[\"bar\",\"cocktail\",\"drink\",\"glass\"]},{\"no\":806,\"code\":\"U+1F379\",\"emoji\":\"🍹\",\"description\":\"TROPICAL DRINK\",\"flagged\":false,\"keywords\":[\"bar\",\"drink\",\"tropical\"]},{\"no\":807,\"code\":\"U+1F37A\",\"emoji\":\"🍺\",\"description\":\"BEER MUG\",\"flagged\":false,\"keywords\":[\"bar\",\"beer\",\"drink\",\"mug\"]},{\"no\":808,\"code\":\"U+1F37B\",\"emoji\":\"🍻\",\"description\":\"CLINKING BEER MUGS\",\"flagged\":false,\"keywords\":[\"bar\",\"beer\",\"clink\",\"drink\",\"mug\"]},{\"no\":809,\"code\":\"U+1F942\",\"emoji\":\"🥂\",\"description\":\"CLINKING GLASSES\",\"flagged\":true,\"keywords\":[\"celebrate\",\"clink\",\"drink\",\"glass\"]},{\"no\":810,\"code\":\"U+1F943\",\"emoji\":\"🥃\",\"description\":\"TUMBLER GLASS\",\"flagged\":true,\"keywords\":[\"glass\",\"liquor\",\"shot\",\"tumbler\",\"whisky\"]},{\"no\":811,\"code\":\"U+1F37D\",\"emoji\":\"🍽\",\"description\":\"FORK AND KNIFE WITH PLATE\",\"flagged\":false,\"keywords\":[\"cooking\",\"fork\",\"knife\",\"plate\"]},{\"no\":812,\"code\":\"U+1F374\",\"emoji\":\"🍴\",\"description\":\"FORK AND KNIFE\",\"flagged\":false,\"keywords\":[\"cooking\",\"fork\",\"knife\"]},{\"no\":813,\"code\":\"U+1F944\",\"emoji\":\"🥄\",\"description\":\"SPOON\",\"flagged\":true,\"keywords\":[\"spoon\",\"tableware\"]},{\"no\":814,\"code\":\"U+1F52A\",\"emoji\":\"🔪\",\"description\":\"HOCHO≊ kitchen knife\",\"flagged\":false,\"keywords\":[\"cooking\",\"hocho\",\"knife\",\"tool\",\"weapon\"]},{\"no\":815,\"code\":\"U+1F3FA\",\"emoji\":\"🏺\",\"description\":\"AMPHORA\",\"flagged\":false,\"keywords\":[\"amphora\",\"aquarius\",\"cooking\",\"drink\",\"jug\",\"tool\",\"weapon\",\"zodiac\"]}],\"Travel & Places\":[{\"no\":816,\"code\":\"U+1F30D\",\"emoji\":\"🌍\",\"description\":\"EARTH GLOBE EUROPE-AFRICA≊ globe showing europe-africa\",\"flagged\":false,\"keywords\":[\"africa\",\"earth\",\"europe\",\"globe\",\"world\"]},{\"no\":817,\"code\":\"U+1F30E\",\"emoji\":\"🌎\",\"description\":\"EARTH GLOBE AMERICAS≊ globe showing americas\",\"flagged\":false,\"keywords\":[\"americas\",\"earth\",\"globe\",\"world\"]},{\"no\":818,\"code\":\"U+1F30F\",\"emoji\":\"🌏\",\"description\":\"EARTH GLOBE ASIA-AUSTRALIA≊ globe showing asia-australia\",\"flagged\":false,\"keywords\":[\"asia\",\"australia\",\"earth\",\"globe\",\"world\"]},{\"no\":819,\"code\":\"U+1F310\",\"emoji\":\"🌐\",\"description\":\"GLOBE WITH MERIDIANS\",\"flagged\":false,\"keywords\":[\"earth\",\"globe\",\"meridians\",\"world\"]},{\"no\":820,\"code\":\"U+1F5FA\",\"emoji\":\"🗺\",\"description\":\"WORLD MAP\",\"flagged\":false,\"keywords\":[\"map\",\"world\"]},{\"no\":821,\"code\":\"U+1F5FE\",\"emoji\":\"🗾\",\"description\":\"SILHOUETTE OF JAPAN≊ map of japan\",\"flagged\":false,\"keywords\":[\"japan\",\"map\"]},{\"no\":822,\"code\":\"U+1F3D4\",\"emoji\":\"🏔\",\"description\":\"SNOW CAPPED MOUNTAIN≊ snow-capped mountain\",\"flagged\":false,\"keywords\":[\"cold\",\"mountain\",\"snow\"]},{\"no\":823,\"code\":\"U+26F0\",\"emoji\":\"⛰\",\"description\":\"MOUNTAIN\",\"flagged\":false,\"keywords\":[\"mountain\"]},{\"no\":824,\"code\":\"U+1F30B\",\"emoji\":\"🌋\",\"description\":\"VOLCANO\",\"flagged\":false,\"keywords\":[\"eruption\",\"mountain\",\"volcano\",\"weather\"]},{\"no\":825,\"code\":\"U+1F5FB\",\"emoji\":\"🗻\",\"description\":\"MOUNT FUJI\",\"flagged\":false,\"keywords\":[\"fuji\",\"mountain\"]},{\"no\":826,\"code\":\"U+1F3D5\",\"emoji\":\"🏕\",\"description\":\"CAMPING\",\"flagged\":false,\"keywords\":[\"camping\"]},{\"no\":827,\"code\":\"U+1F3D6\",\"emoji\":\"🏖\",\"description\":\"BEACH WITH UMBRELLA\",\"flagged\":false,\"keywords\":[\"beach\",\"umbrella\"]},{\"no\":828,\"code\":\"U+1F3DC\",\"emoji\":\"🏜\",\"description\":\"DESERT\",\"flagged\":false,\"keywords\":[\"desert\"]},{\"no\":829,\"code\":\"U+1F3DD\",\"emoji\":\"🏝\",\"description\":\"DESERT ISLAND\",\"flagged\":false,\"keywords\":[\"desert\",\"island\"]},{\"no\":830,\"code\":\"U+1F3DE\",\"emoji\":\"🏞\",\"description\":\"NATIONAL PARK\",\"flagged\":false,\"keywords\":[\"national park\",\"park\"]},{\"no\":831,\"code\":\"U+1F3DF\",\"emoji\":\"🏟\",\"description\":\"STADIUM\",\"flagged\":false,\"keywords\":[\"stadium\"]},{\"no\":832,\"code\":\"U+1F3DB\",\"emoji\":\"🏛\",\"description\":\"CLASSICAL BUILDING\",\"flagged\":false,\"keywords\":[\"building\",\"classical\"]},{\"no\":833,\"code\":\"U+1F3D7\",\"emoji\":\"🏗\",\"description\":\"BUILDING CONSTRUCTION\",\"flagged\":false,\"keywords\":[\"building\",\"construction\"]},{\"no\":834,\"code\":\"U+1F3D8\",\"emoji\":\"🏘\",\"description\":\"HOUSE BUILDINGS\",\"flagged\":false,\"keywords\":[\"building\",\"house\"]},{\"no\":835,\"code\":\"U+1F3D9\",\"emoji\":\"🏙\",\"description\":\"CITYSCAPE\",\"flagged\":false,\"keywords\":[\"building\",\"city\"]},{\"no\":836,\"code\":\"U+1F3DA\",\"emoji\":\"🏚\",\"description\":\"DERELICT HOUSE BUILDING\",\"flagged\":false,\"keywords\":[\"building\",\"derelict\",\"house\"]},{\"no\":837,\"code\":\"U+1F3E0\",\"emoji\":\"🏠\",\"description\":\"HOUSE BUILDING\",\"flagged\":false,\"keywords\":[\"building\",\"home\",\"house\"]},{\"no\":838,\"code\":\"U+1F3E1\",\"emoji\":\"🏡\",\"description\":\"HOUSE WITH GARDEN\",\"flagged\":false,\"keywords\":[\"building\",\"garden\",\"home\",\"house\"]},{\"no\":839,\"code\":\"U+1F3E2\",\"emoji\":\"🏢\",\"description\":\"OFFICE BUILDING\",\"flagged\":false,\"keywords\":[\"building\"]},{\"no\":840,\"code\":\"U+1F3E3\",\"emoji\":\"🏣\",\"description\":\"JAPANESE POST OFFICE\",\"flagged\":false,\"keywords\":[\"building\",\"japanese\",\"post\"]},{\"no\":841,\"code\":\"U+1F3E4\",\"emoji\":\"🏤\",\"description\":\"EUROPEAN POST OFFICE≊ post office\",\"flagged\":false,\"keywords\":[\"building\",\"european\",\"post\"]},{\"no\":842,\"code\":\"U+1F3E5\",\"emoji\":\"🏥\",\"description\":\"HOSPITAL\",\"flagged\":false,\"keywords\":[\"building\",\"doctor\",\"hospital\",\"medicine\"]},{\"no\":843,\"code\":\"U+1F3E6\",\"emoji\":\"🏦\",\"description\":\"BANK\",\"flagged\":false,\"keywords\":[\"bank\",\"building\"]},{\"no\":844,\"code\":\"U+1F3E8\",\"emoji\":\"🏨\",\"description\":\"HOTEL\",\"flagged\":false,\"keywords\":[\"building\",\"hotel\"]},{\"no\":845,\"code\":\"U+1F3E9\",\"emoji\":\"🏩\",\"description\":\"LOVE HOTEL\",\"flagged\":false,\"keywords\":[\"building\",\"hotel\",\"love\"]},{\"no\":846,\"code\":\"U+1F3EA\",\"emoji\":\"🏪\",\"description\":\"CONVENIENCE STORE\",\"flagged\":false,\"keywords\":[\"building\",\"convenience\",\"store\"]},{\"no\":847,\"code\":\"U+1F3EB\",\"emoji\":\"🏫\",\"description\":\"SCHOOL\",\"flagged\":false,\"keywords\":[\"building\",\"school\"]},{\"no\":848,\"code\":\"U+1F3EC\",\"emoji\":\"🏬\",\"description\":\"DEPARTMENT STORE\",\"flagged\":false,\"keywords\":[\"building\",\"department\",\"store\"]},{\"no\":849,\"code\":\"U+1F3ED\",\"emoji\":\"🏭\",\"description\":\"FACTORY\",\"flagged\":false,\"keywords\":[\"building\",\"factory\"]},{\"no\":850,\"code\":\"U+1F3EF\",\"emoji\":\"🏯\",\"description\":\"JAPANESE CASTLE\",\"flagged\":false,\"keywords\":[\"building\",\"castle\",\"japanese\"]},{\"no\":851,\"code\":\"U+1F3F0\",\"emoji\":\"🏰\",\"description\":\"EUROPEAN CASTLE≊ castle\",\"flagged\":false,\"keywords\":[\"building\",\"castle\",\"european\"]},{\"no\":852,\"code\":\"U+1F492\",\"emoji\":\"💒\",\"description\":\"WEDDING\",\"flagged\":false,\"keywords\":[\"activity\",\"chapel\",\"romance\",\"wedding\"]},{\"no\":853,\"code\":\"U+1F5FC\",\"emoji\":\"🗼\",\"description\":\"TOKYO TOWER\",\"flagged\":false,\"keywords\":[\"tokyo\",\"tower\"]},{\"no\":854,\"code\":\"U+1F5FD\",\"emoji\":\"🗽\",\"description\":\"STATUE OF LIBERTY\",\"flagged\":false,\"keywords\":[\"liberty\",\"statue\"]},{\"no\":855,\"code\":\"U+26EA\",\"emoji\":\"⛪\",\"description\":\"CHURCH\",\"flagged\":false,\"keywords\":[\"building\",\"christian\",\"church\",\"cross\",\"religion\"]},{\"no\":856,\"code\":\"U+1F54C\",\"emoji\":\"🕌\",\"description\":\"MOSQUE\",\"flagged\":false,\"keywords\":[\"islam\",\"mosque\",\"muslim\",\"religion\"]},{\"no\":857,\"code\":\"U+1F54D\",\"emoji\":\"🕍\",\"description\":\"SYNAGOGUE\",\"flagged\":false,\"keywords\":[\"jew\",\"jewish\",\"religion\",\"synagogue\",\"temple\"]},{\"no\":858,\"code\":\"U+26E9\",\"emoji\":\"⛩\",\"description\":\"SHINTO SHRINE\",\"flagged\":false,\"keywords\":[\"religion\",\"shinto\",\"shrine\"]},{\"no\":859,\"code\":\"U+1F54B\",\"emoji\":\"🕋\",\"description\":\"KAABA\",\"flagged\":false,\"keywords\":[\"islam\",\"kaaba\",\"muslim\",\"religion\"]},{\"no\":860,\"code\":\"U+26F2\",\"emoji\":\"⛲\",\"description\":\"FOUNTAIN\",\"flagged\":false,\"keywords\":[\"fountain\"]},{\"no\":861,\"code\":\"U+26FA\",\"emoji\":\"⛺\",\"description\":\"TENT\",\"flagged\":false,\"keywords\":[\"camping\",\"tent\"]},{\"no\":862,\"code\":\"U+1F301\",\"emoji\":\"🌁\",\"description\":\"FOGGY\",\"flagged\":false,\"keywords\":[\"fog\",\"weather\"]},{\"no\":863,\"code\":\"U+1F303\",\"emoji\":\"🌃\",\"description\":\"NIGHT WITH STARS\",\"flagged\":false,\"keywords\":[\"night\",\"star\",\"weather\"]},{\"no\":864,\"code\":\"U+1F304\",\"emoji\":\"🌄\",\"description\":\"SUNRISE OVER MOUNTAINS\",\"flagged\":false,\"keywords\":[\"morning\",\"mountain\",\"sun\",\"sunrise\",\"weather\"]},{\"no\":865,\"code\":\"U+1F305\",\"emoji\":\"🌅\",\"description\":\"SUNRISE\",\"flagged\":false,\"keywords\":[\"morning\",\"sun\",\"sunrise\",\"weather\"]},{\"no\":866,\"code\":\"U+1F306\",\"emoji\":\"🌆\",\"description\":\"CITYSCAPE AT DUSK\",\"flagged\":false,\"keywords\":[\"building\",\"city\",\"dusk\",\"evening\",\"landscape\",\"sun\",\"sunset\",\"weather\"]},{\"no\":867,\"code\":\"U+1F307\",\"emoji\":\"🌇\",\"description\":\"SUNSET OVER BUILDINGS≊ sunset\",\"flagged\":false,\"keywords\":[\"building\",\"dusk\",\"sun\",\"sunset\",\"weather\"]},{\"no\":868,\"code\":\"U+1F309\",\"emoji\":\"🌉\",\"description\":\"BRIDGE AT NIGHT\",\"flagged\":false,\"keywords\":[\"bridge\",\"night\",\"weather\"]},{\"no\":869,\"code\":\"U+2668\",\"emoji\":\"♨\",\"description\":\"HOT SPRINGS\",\"flagged\":false,\"keywords\":[\"hot\",\"hotsprings\",\"springs\",\"steaming\"]},{\"no\":870,\"code\":\"U+1F30C\",\"emoji\":\"🌌\",\"description\":\"MILKY WAY\",\"flagged\":false,\"keywords\":[\"milky way\",\"space\",\"weather\"]},{\"no\":871,\"code\":\"U+1F3A0\",\"emoji\":\"🎠\",\"description\":\"CAROUSEL HORSE\",\"flagged\":false,\"keywords\":[\"activity\",\"carousel\",\"entertainment\",\"horse\"]},{\"no\":872,\"code\":\"U+1F3A1\",\"emoji\":\"🎡\",\"description\":\"FERRIS WHEEL\",\"flagged\":false,\"keywords\":[\"activity\",\"amusement park\",\"entertainment\",\"ferris\",\"wheel\"]},{\"no\":873,\"code\":\"U+1F3A2\",\"emoji\":\"🎢\",\"description\":\"ROLLER COASTER\",\"flagged\":false,\"keywords\":[\"activity\",\"amusement park\",\"coaster\",\"entertainment\",\"roller\"]},{\"no\":874,\"code\":\"U+1F488\",\"emoji\":\"💈\",\"description\":\"BARBER POLE\",\"flagged\":false,\"keywords\":[\"barber\",\"haircut\",\"pole\"]},{\"no\":875,\"code\":\"U+1F3AA\",\"emoji\":\"🎪\",\"description\":\"CIRCUS TENT\",\"flagged\":false,\"keywords\":[\"activity\",\"circus\",\"entertainment\",\"tent\"]},{\"no\":876,\"code\":\"U+1F3AD\",\"emoji\":\"🎭\",\"description\":\"PERFORMING ARTS\",\"flagged\":false,\"keywords\":[\"activity\",\"art\",\"entertainment\",\"mask\",\"performing\",\"theater\",\"theatre\"]},{\"no\":877,\"code\":\"U+1F5BC\",\"emoji\":\"🖼\",\"description\":\"FRAME WITH PICTURE\",\"flagged\":false,\"keywords\":[\"art\",\"frame\",\"museum\",\"painting\",\"picture\"]},{\"no\":878,\"code\":\"U+1F3A8\",\"emoji\":\"🎨\",\"description\":\"ARTIST PALETTE\",\"flagged\":false,\"keywords\":[\"activity\",\"art\",\"entertainment\",\"museum\",\"painting\",\"palette\"]},{\"no\":879,\"code\":\"U+1F3B0\",\"emoji\":\"🎰\",\"description\":\"SLOT MACHINE\",\"flagged\":false,\"keywords\":[\"activity\",\"game\",\"slot\"]},{\"no\":880,\"code\":\"U+1F682\",\"emoji\":\"🚂\",\"description\":\"STEAM LOCOMOTIVE≊ locomotive\",\"flagged\":false,\"keywords\":[\"engine\",\"locomotive\",\"railway\",\"steam\",\"train\",\"vehicle\"]},{\"no\":881,\"code\":\"U+1F683\",\"emoji\":\"🚃\",\"description\":\"RAILWAY CAR\",\"flagged\":false,\"keywords\":[\"car\",\"electric\",\"railway\",\"train\",\"tram\",\"trolleybus\",\"vehicle\"]},{\"no\":882,\"code\":\"U+1F684\",\"emoji\":\"🚄\",\"description\":\"HIGH-SPEED TRAIN\",\"flagged\":false,\"keywords\":[\"railway\",\"shinkansen\",\"speed\",\"train\",\"vehicle\"]},{\"no\":883,\"code\":\"U+1F685\",\"emoji\":\"🚅\",\"description\":\"HIGH-SPEED TRAIN WITH BULLET NOSE\",\"flagged\":false,\"keywords\":[\"bullet\",\"railway\",\"shinkansen\",\"speed\",\"train\",\"vehicle\"]},{\"no\":884,\"code\":\"U+1F686\",\"emoji\":\"🚆\",\"description\":\"TRAIN\",\"flagged\":false,\"keywords\":[\"railway\",\"train\",\"vehicle\"]},{\"no\":885,\"code\":\"U+1F687\",\"emoji\":\"🚇\",\"description\":\"METRO\",\"flagged\":false,\"keywords\":[\"metro\",\"subway\",\"vehicle\"]},{\"no\":886,\"code\":\"U+1F688\",\"emoji\":\"🚈\",\"description\":\"LIGHT RAIL\",\"flagged\":false,\"keywords\":[\"railway\",\"vehicle\"]},{\"no\":887,\"code\":\"U+1F689\",\"emoji\":\"🚉\",\"description\":\"STATION\",\"flagged\":false,\"keywords\":[\"railway\",\"station\",\"train\",\"vehicle\"]},{\"no\":888,\"code\":\"U+1F68A\",\"emoji\":\"🚊\",\"description\":\"TRAM\",\"flagged\":false,\"keywords\":[\"tram\",\"trolleybus\",\"vehicle\"]},{\"no\":889,\"code\":\"U+1F69D\",\"emoji\":\"🚝\",\"description\":\"MONORAIL\",\"flagged\":false,\"keywords\":[\"monorail\",\"vehicle\"]},{\"no\":890,\"code\":\"U+1F69E\",\"emoji\":\"🚞\",\"description\":\"MOUNTAIN RAILWAY\",\"flagged\":false,\"keywords\":[\"car\",\"mountain\",\"railway\",\"vehicle\"]},{\"no\":891,\"code\":\"U+1F68B\",\"emoji\":\"🚋\",\"description\":\"TRAM CAR\",\"flagged\":false,\"keywords\":[\"car\",\"tram\",\"trolleybus\",\"vehicle\"]},{\"no\":892,\"code\":\"U+1F68C\",\"emoji\":\"🚌\",\"description\":\"BUS\",\"flagged\":false,\"keywords\":[\"bus\",\"vehicle\"]},{\"no\":893,\"code\":\"U+1F68D\",\"emoji\":\"🚍\",\"description\":\"ONCOMING BUS\",\"flagged\":false,\"keywords\":[\"bus\",\"oncoming\",\"vehicle\"]},{\"no\":894,\"code\":\"U+1F68E\",\"emoji\":\"🚎\",\"description\":\"TROLLEYBUS\",\"flagged\":false,\"keywords\":[\"bus\",\"tram\",\"trolley\",\"trolleybus\",\"vehicle\"]},{\"no\":895,\"code\":\"U+1F68F\",\"emoji\":\"🚏\",\"description\":\"BUS STOP\",\"flagged\":false,\"keywords\":[\"bus\",\"busstop\",\"stop\"]},{\"no\":896,\"code\":\"U+1F690\",\"emoji\":\"🚐\",\"description\":\"MINIBUS\",\"flagged\":false,\"keywords\":[\"bus\",\"minibus\",\"vehicle\"]},{\"no\":897,\"code\":\"U+1F691\",\"emoji\":\"🚑\",\"description\":\"AMBULANCE\",\"flagged\":false,\"keywords\":[\"ambulance\",\"vehicle\"]},{\"no\":898,\"code\":\"U+1F692\",\"emoji\":\"🚒\",\"description\":\"FIRE ENGINE\",\"flagged\":false,\"keywords\":[\"engine\",\"fire\",\"truck\",\"vehicle\"]},{\"no\":899,\"code\":\"U+1F693\",\"emoji\":\"🚓\",\"description\":\"POLICE CAR\",\"flagged\":false,\"keywords\":[\"car\",\"patrol\",\"police\",\"vehicle\"]},{\"no\":900,\"code\":\"U+1F694\",\"emoji\":\"🚔\",\"description\":\"ONCOMING POLICE CAR\",\"flagged\":false,\"keywords\":[\"car\",\"oncoming\",\"police\",\"vehicle\"]},{\"no\":901,\"code\":\"U+1F695\",\"emoji\":\"🚕\",\"description\":\"TAXI\",\"flagged\":false,\"keywords\":[\"taxi\",\"vehicle\"]},{\"no\":902,\"code\":\"U+1F696\",\"emoji\":\"🚖\",\"description\":\"ONCOMING TAXI\",\"flagged\":false,\"keywords\":[\"oncoming\",\"taxi\",\"vehicle\"]},{\"no\":903,\"code\":\"U+1F697\",\"emoji\":\"🚗\",\"description\":\"AUTOMOBILE\",\"flagged\":false,\"keywords\":[\"automobile\",\"car\",\"vehicle\"]},{\"no\":904,\"code\":\"U+1F698\",\"emoji\":\"🚘\",\"description\":\"ONCOMING AUTOMOBILE\",\"flagged\":false,\"keywords\":[\"automobile\",\"car\",\"oncoming\",\"vehicle\"]},{\"no\":905,\"code\":\"U+1F699\",\"emoji\":\"🚙\",\"description\":\"RECREATIONAL VEHICLE\",\"flagged\":false,\"keywords\":[\"recreational\",\"rv\",\"vehicle\"]},{\"no\":906,\"code\":\"U+1F69A\",\"emoji\":\"🚚\",\"description\":\"DELIVERY TRUCK\",\"flagged\":false,\"keywords\":[\"delivery\",\"truck\",\"vehicle\"]},{\"no\":907,\"code\":\"U+1F69B\",\"emoji\":\"🚛\",\"description\":\"ARTICULATED LORRY\",\"flagged\":false,\"keywords\":[\"lorry\",\"semi\",\"truck\",\"vehicle\"]},{\"no\":908,\"code\":\"U+1F69C\",\"emoji\":\"🚜\",\"description\":\"TRACTOR\",\"flagged\":false,\"keywords\":[\"tractor\",\"vehicle\"]},{\"no\":909,\"code\":\"U+1F6B2\",\"emoji\":\"🚲\",\"description\":\"BICYCLE\",\"flagged\":false,\"keywords\":[\"bicycle\",\"bike\",\"vehicle\"]},{\"no\":910,\"code\":\"U+26FD\",\"emoji\":\"⛽\",\"description\":\"FUEL PUMP\",\"flagged\":false,\"keywords\":[\"fuel\",\"fuelpump\",\"gas\",\"pump\",\"station\"]},{\"no\":911,\"code\":\"U+1F6E3\",\"emoji\":\"🛣\",\"description\":\"MOTORWAY\",\"flagged\":false,\"keywords\":[\"highway\",\"motorway\",\"road\"]},{\"no\":912,\"code\":\"U+1F6E4\",\"emoji\":\"🛤\",\"description\":\"RAILWAY TRACK\",\"flagged\":false,\"keywords\":[\"railway\",\"train\"]},{\"no\":913,\"code\":\"U+1F6A8\",\"emoji\":\"🚨\",\"description\":\"POLICE CARS REVOLVING LIGHT≊ police car’s light\",\"flagged\":false,\"keywords\":[\"beacon\",\"car\",\"light\",\"police\",\"revolving\",\"vehicle\"]},{\"no\":914,\"code\":\"U+1F6A5\",\"emoji\":\"🚥\",\"description\":\"HORIZONTAL TRAFFIC LIGHT\",\"flagged\":false,\"keywords\":[\"light\",\"signal\",\"traffic\"]},{\"no\":915,\"code\":\"U+1F6A6\",\"emoji\":\"🚦\",\"description\":\"VERTICAL TRAFFIC LIGHT\",\"flagged\":false,\"keywords\":[\"light\",\"signal\",\"traffic\"]},{\"no\":916,\"code\":\"U+1F6A7\",\"emoji\":\"🚧\",\"description\":\"CONSTRUCTION SIGN≊ construction\",\"flagged\":false,\"keywords\":[\"barrier\",\"construction\"]},{\"no\":917,\"code\":\"U+1F6D1\",\"emoji\":\"🛑\",\"description\":\"OCTAGONAL SIGN\",\"flagged\":true,\"keywords\":[\"octagonal\",\"stop\"]},{\"no\":918,\"code\":\"U+1F6F4\",\"emoji\":\"🛴\",\"description\":\"SCOOTER\",\"flagged\":true,\"keywords\":[\"kick\",\"scooter\"]},{\"no\":919,\"code\":\"U+1F6F5\",\"emoji\":\"🛵\",\"description\":\"MOTOR SCOOTER\",\"flagged\":true,\"keywords\":[\"motor\",\"scooter\"]},{\"no\":920,\"code\":\"U+2693\",\"emoji\":\"⚓\",\"description\":\"ANCHOR\",\"flagged\":false,\"keywords\":[\"anchor\",\"ship\",\"tool\"]},{\"no\":921,\"code\":\"U+26F5\",\"emoji\":\"⛵\",\"description\":\"SAILBOAT\",\"flagged\":false,\"keywords\":[\"boat\",\"resort\",\"sailboat\",\"sea\",\"vehicle\",\"yacht\"]},{\"no\":922,\"code\":\"U+1F6A3\",\"emoji\":\"🚣\",\"description\":\"ROWBOAT\",\"flagged\":false,\"keywords\":[\"boat\",\"rowboat\",\"vehicle\"],\"types\":[\"U+1F6A3 U+1F3FF\",\"U+1F6A3 U+1F3FE\",\"U+1F6A3 U+1F3FD\",\"U+1F6A3 U+1F3FC\",\"U+1F6A3 U+1F3FB\"]},{\"no\":928,\"code\":\"U+1F6F6\",\"emoji\":\"🛶\",\"description\":\"CANOE\",\"flagged\":true,\"keywords\":[\"boat\",\"canoe\"]},{\"no\":929,\"code\":\"U+1F6A4\",\"emoji\":\"🚤\",\"description\":\"SPEEDBOAT\",\"flagged\":false,\"keywords\":[\"boat\",\"speedboat\",\"vehicle\"]},{\"no\":930,\"code\":\"U+1F6F3\",\"emoji\":\"🛳\",\"description\":\"PASSENGER SHIP\",\"flagged\":false,\"keywords\":[\"passenger\",\"ship\",\"vehicle\"]},{\"no\":931,\"code\":\"U+26F4\",\"emoji\":\"⛴\",\"description\":\"FERRY\",\"flagged\":false,\"keywords\":[\"boat\",\"ferry\"]},{\"no\":932,\"code\":\"U+1F6E5\",\"emoji\":\"🛥\",\"description\":\"MOTOR BOAT\",\"flagged\":false,\"keywords\":[\"boat\",\"motorboat\",\"vehicle\"]},{\"no\":933,\"code\":\"U+1F6A2\",\"emoji\":\"🚢\",\"description\":\"SHIP\",\"flagged\":false,\"keywords\":[\"ship\",\"vehicle\"]},{\"no\":934,\"code\":\"U+2708\",\"emoji\":\"✈\",\"description\":\"AIRPLANE\",\"flagged\":false,\"keywords\":[\"airplane\",\"vehicle\"]},{\"no\":935,\"code\":\"U+1F6E9\",\"emoji\":\"🛩\",\"description\":\"SMALL AIRPLANE\",\"flagged\":false,\"keywords\":[\"airplane\",\"vehicle\"]},{\"no\":936,\"code\":\"U+1F6EB\",\"emoji\":\"🛫\",\"description\":\"AIRPLANE DEPARTURE\",\"flagged\":false,\"keywords\":[\"airplane\",\"check-in\",\"departure\",\"departures\",\"vehicle\"]},{\"no\":937,\"code\":\"U+1F6EC\",\"emoji\":\"🛬\",\"description\":\"AIRPLANE ARRIVING≊ airplane arrival\",\"flagged\":false,\"keywords\":[\"airplane\",\"arrivals\",\"arriving\",\"landing\",\"vehicle\"]},{\"no\":938,\"code\":\"U+1F4BA\",\"emoji\":\"💺\",\"description\":\"SEAT\",\"flagged\":false,\"keywords\":[\"chair\",\"seat\"]},{\"no\":939,\"code\":\"U+1F681\",\"emoji\":\"🚁\",\"description\":\"HELICOPTER\",\"flagged\":false,\"keywords\":[\"helicopter\",\"vehicle\"]},{\"no\":940,\"code\":\"U+1F69F\",\"emoji\":\"🚟\",\"description\":\"SUSPENSION RAILWAY\",\"flagged\":false,\"keywords\":[\"railway\",\"suspension\",\"vehicle\"]},{\"no\":941,\"code\":\"U+1F6A0\",\"emoji\":\"🚠\",\"description\":\"MOUNTAIN CABLEWAY\",\"flagged\":false,\"keywords\":[\"cable\",\"gondola\",\"mountain\",\"vehicle\"]},{\"no\":942,\"code\":\"U+1F6A1\",\"emoji\":\"🚡\",\"description\":\"AERIAL TRAMWAY\",\"flagged\":false,\"keywords\":[\"aerial\",\"cable\",\"car\",\"gondola\",\"ropeway\",\"tramway\",\"vehicle\"]},{\"no\":943,\"code\":\"U+1F680\",\"emoji\":\"🚀\",\"description\":\"ROCKET\",\"flagged\":false,\"keywords\":[\"rocket\",\"space\",\"vehicle\"]},{\"no\":944,\"code\":\"U+1F6F0\",\"emoji\":\"🛰\",\"description\":\"SATELLITE\",\"flagged\":false,\"keywords\":[\"satellite\",\"space\",\"vehicle\"]},{\"no\":945,\"code\":\"U+1F6CE\",\"emoji\":\"🛎\",\"description\":\"BELLHOP BELL\",\"flagged\":false,\"keywords\":[\"bell\",\"bellhop\",\"hotel\"]},{\"no\":946,\"code\":\"U+1F6AA\",\"emoji\":\"🚪\",\"description\":\"DOOR\",\"flagged\":false,\"keywords\":[\"door\"]},{\"no\":947,\"code\":\"U+1F6CC\",\"emoji\":\"🛌\",\"description\":\"SLEEPING ACCOMMODATION≊ person in bed\",\"flagged\":false,\"keywords\":[\"hotel\",\"sleep\"]},{\"no\":948,\"code\":\"U+1F6CF\",\"emoji\":\"🛏\",\"description\":\"BED\",\"flagged\":false,\"keywords\":[\"bed\",\"hotel\",\"sleep\"]},{\"no\":949,\"code\":\"U+1F6CB\",\"emoji\":\"🛋\",\"description\":\"COUCH AND LAMP\",\"flagged\":false,\"keywords\":[\"couch\",\"hotel\",\"lamp\"]},{\"no\":950,\"code\":\"U+1F6BD\",\"emoji\":\"🚽\",\"description\":\"TOILET\",\"flagged\":false,\"keywords\":[\"toilet\"]},{\"no\":951,\"code\":\"U+1F6BF\",\"emoji\":\"🚿\",\"description\":\"SHOWER\",\"flagged\":false,\"keywords\":[\"shower\",\"water\"]},{\"no\":952,\"code\":\"U+1F6C0\",\"emoji\":\"🛀\",\"description\":\"BATH≊ person taking bath\",\"flagged\":false,\"keywords\":[\"bath\",\"bathtub\"],\"types\":[\"U+1F6C0 U+1F3FF\",\"U+1F6C0 U+1F3FE\",\"U+1F6C0 U+1F3FD\",\"U+1F6C0 U+1F3FC\",\"U+1F6C0 U+1F3FB\"]},{\"no\":958,\"code\":\"U+1F6C1\",\"emoji\":\"🛁\",\"description\":\"BATHTUB\",\"flagged\":false,\"keywords\":[\"bath\",\"bathtub\"]},{\"no\":959,\"code\":\"U+231B\",\"emoji\":\"⌛\",\"description\":\"HOURGLASS\",\"flagged\":false,\"keywords\":[\"hourglass\",\"sand\",\"timer\"]},{\"no\":960,\"code\":\"U+23F3\",\"emoji\":\"⏳\",\"description\":\"HOURGLASS WITH FLOWING SAND\",\"flagged\":false,\"keywords\":[\"hourglass\",\"sand\",\"timer\"]},{\"no\":961,\"code\":\"U+231A\",\"emoji\":\"⌚\",\"description\":\"WATCH\",\"flagged\":false,\"keywords\":[\"clock\",\"watch\"]},{\"no\":962,\"code\":\"U+23F0\",\"emoji\":\"⏰\",\"description\":\"ALARM CLOCK\",\"flagged\":false,\"keywords\":[\"alarm\",\"clock\"]},{\"no\":963,\"code\":\"U+23F1\",\"emoji\":\"⏱\",\"description\":\"STOPWATCH\",\"flagged\":false,\"keywords\":[\"clock\",\"stopwatch\"]},{\"no\":964,\"code\":\"U+23F2\",\"emoji\":\"⏲\",\"description\":\"TIMER CLOCK\",\"flagged\":false,\"keywords\":[\"clock\",\"timer\"]},{\"no\":965,\"code\":\"U+1F570\",\"emoji\":\"🕰\",\"description\":\"MANTELPIECE CLOCK\",\"flagged\":false,\"keywords\":[\"clock\"]},{\"no\":966,\"code\":\"U+1F55B\",\"emoji\":\"🕛\",\"description\":\"CLOCK FACE TWELVE OCLOCK≊ twelve o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"12\",\"12:00\",\"clock\",\"o’clock\",\"twelve\"]},{\"no\":967,\"code\":\"U+1F567\",\"emoji\":\"🕧\",\"description\":\"CLOCK FACE TWELVE-THIRTY≊ twelve-thirty\",\"flagged\":false,\"keywords\":[\"12\",\"12:30\",\"30\",\"clock\",\"thirty\",\"twelve\"]},{\"no\":968,\"code\":\"U+1F550\",\"emoji\":\"🕐\",\"description\":\"CLOCK FACE ONE OCLOCK≊ one o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"1\",\"1:00\",\"clock\",\"o’clock\",\"one\"]},{\"no\":969,\"code\":\"U+1F55C\",\"emoji\":\"🕜\",\"description\":\"CLOCK FACE ONE-THIRTY≊ one-thirty\",\"flagged\":false,\"keywords\":[\"1\",\"1:30\",\"30\",\"clock\",\"one\",\"thirty\"]},{\"no\":970,\"code\":\"U+1F551\",\"emoji\":\"🕑\",\"description\":\"CLOCK FACE TWO OCLOCK≊ two o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"2\",\"2:00\",\"clock\",\"o’clock\",\"two\"]},{\"no\":971,\"code\":\"U+1F55D\",\"emoji\":\"🕝\",\"description\":\"CLOCK FACE TWO-THIRTY≊ two-thirty\",\"flagged\":false,\"keywords\":[\"2\",\"2:30\",\"30\",\"clock\",\"thirty\",\"two\"]},{\"no\":972,\"code\":\"U+1F552\",\"emoji\":\"🕒\",\"description\":\"CLOCK FACE THREE OCLOCK≊ three o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"3\",\"3:00\",\"clock\",\"o’clock\",\"three\"]},{\"no\":973,\"code\":\"U+1F55E\",\"emoji\":\"🕞\",\"description\":\"CLOCK FACE THREE-THIRTY≊ three-thirty\",\"flagged\":false,\"keywords\":[\"3\",\"3:30\",\"30\",\"clock\",\"thirty\",\"three\"]},{\"no\":974,\"code\":\"U+1F553\",\"emoji\":\"🕓\",\"description\":\"CLOCK FACE FOUR OCLOCK≊ four o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"4\",\"4:00\",\"clock\",\"four\",\"o’clock\"]},{\"no\":975,\"code\":\"U+1F55F\",\"emoji\":\"🕟\",\"description\":\"CLOCK FACE FOUR-THIRTY≊ four-thirty\",\"flagged\":false,\"keywords\":[\"30\",\"4\",\"4:30\",\"clock\",\"four\",\"thirty\"]},{\"no\":976,\"code\":\"U+1F554\",\"emoji\":\"🕔\",\"description\":\"CLOCK FACE FIVE OCLOCK≊ five o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"5\",\"5:00\",\"clock\",\"five\",\"o’clock\"]},{\"no\":977,\"code\":\"U+1F560\",\"emoji\":\"🕠\",\"description\":\"CLOCK FACE FIVE-THIRTY≊ five-thirty\",\"flagged\":false,\"keywords\":[\"30\",\"5\",\"5:30\",\"clock\",\"five\",\"thirty\"]},{\"no\":978,\"code\":\"U+1F555\",\"emoji\":\"🕕\",\"description\":\"CLOCK FACE SIX OCLOCK≊ six o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"6\",\"6:00\",\"clock\",\"o’clock\",\"six\"]},{\"no\":979,\"code\":\"U+1F561\",\"emoji\":\"🕡\",\"description\":\"CLOCK FACE SIX-THIRTY≊ six-thirty\",\"flagged\":false,\"keywords\":[\"30\",\"6\",\"6:30\",\"clock\",\"six\",\"thirty\"]},{\"no\":980,\"code\":\"U+1F556\",\"emoji\":\"🕖\",\"description\":\"CLOCK FACE SEVEN OCLOCK≊ seven o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"7\",\"7:00\",\"clock\",\"o’clock\",\"seven\"]},{\"no\":981,\"code\":\"U+1F562\",\"emoji\":\"🕢\",\"description\":\"CLOCK FACE SEVEN-THIRTY≊ seven-thirty\",\"flagged\":false,\"keywords\":[\"30\",\"7\",\"7:30\",\"clock\",\"seven\",\"thirty\"]},{\"no\":982,\"code\":\"U+1F557\",\"emoji\":\"🕗\",\"description\":\"CLOCK FACE EIGHT OCLOCK≊ eight o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"8\",\"8:00\",\"clock\",\"eight\",\"o’clock\"]},{\"no\":983,\"code\":\"U+1F563\",\"emoji\":\"🕣\",\"description\":\"CLOCK FACE EIGHT-THIRTY≊ eight-thirty\",\"flagged\":false,\"keywords\":[\"30\",\"8\",\"8:30\",\"clock\",\"eight\",\"thirty\"]},{\"no\":984,\"code\":\"U+1F558\",\"emoji\":\"🕘\",\"description\":\"CLOCK FACE NINE OCLOCK≊ nine o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"9\",\"9:00\",\"clock\",\"nine\",\"o’clock\"]},{\"no\":985,\"code\":\"U+1F564\",\"emoji\":\"🕤\",\"description\":\"CLOCK FACE NINE-THIRTY≊ nine-thirty\",\"flagged\":false,\"keywords\":[\"30\",\"9\",\"9:30\",\"clock\",\"nine\",\"thirty\"]},{\"no\":986,\"code\":\"U+1F559\",\"emoji\":\"🕙\",\"description\":\"CLOCK FACE TEN OCLOCK≊ ten o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"10\",\"10:00\",\"clock\",\"o’clock\",\"ten\"]},{\"no\":987,\"code\":\"U+1F565\",\"emoji\":\"🕥\",\"description\":\"CLOCK FACE TEN-THIRTY≊ ten-thirty\",\"flagged\":false,\"keywords\":[\"10\",\"10:30\",\"30\",\"clock\",\"ten\",\"thirty\"]},{\"no\":988,\"code\":\"U+1F55A\",\"emoji\":\"🕚\",\"description\":\"CLOCK FACE ELEVEN OCLOCK≊ eleven o’clock\",\"flagged\":false,\"keywords\":[\"00\",\"11\",\"11:00\",\"clock\",\"eleven\",\"o’clock\"]},{\"no\":989,\"code\":\"U+1F566\",\"emoji\":\"🕦\",\"description\":\"CLOCK FACE ELEVEN-THIRTY≊ eleven-thirty\",\"flagged\":false,\"keywords\":[\"11\",\"11:30\",\"30\",\"clock\",\"eleven\",\"thirty\"]},{\"no\":990,\"code\":\"U+1F311\",\"emoji\":\"🌑\",\"description\":\"NEW MOON SYMBOL≊ new moon\",\"flagged\":false,\"keywords\":[\"dark\",\"moon\",\"space\",\"weather\"]},{\"no\":991,\"code\":\"U+1F312\",\"emoji\":\"🌒\",\"description\":\"WAXING CRESCENT MOON SYMBOL≊ waxing crescent moon\",\"flagged\":false,\"keywords\":[\"crescent\",\"moon\",\"space\",\"waxing\",\"weather\"]},{\"no\":992,\"code\":\"U+1F313\",\"emoji\":\"🌓\",\"description\":\"FIRST QUARTER MOON SYMBOL≊ first quarter moon\",\"flagged\":false,\"keywords\":[\"moon\",\"quarter\",\"space\",\"weather\"]},{\"no\":993,\"code\":\"U+1F314\",\"emoji\":\"🌔\",\"description\":\"WAXING GIBBOUS MOON SYMBOL≊ waxing gibbous moon\",\"flagged\":false,\"keywords\":[\"gibbous\",\"moon\",\"space\",\"waxing\",\"weather\"]},{\"no\":994,\"code\":\"U+1F315\",\"emoji\":\"🌕\",\"description\":\"FULL MOON SYMBOL≊ full moon\",\"flagged\":false,\"keywords\":[\"full\",\"moon\",\"space\",\"weather\"]},{\"no\":995,\"code\":\"U+1F316\",\"emoji\":\"🌖\",\"description\":\"WANING GIBBOUS MOON SYMBOL≊ waning gibbous moon\",\"flagged\":false,\"keywords\":[\"gibbous\",\"moon\",\"space\",\"waning\",\"weather\"]},{\"no\":996,\"code\":\"U+1F317\",\"emoji\":\"🌗\",\"description\":\"LAST QUARTER MOON SYMBOL≊ last quarter moon\",\"flagged\":false,\"keywords\":[\"moon\",\"quarter\",\"space\",\"weather\"]},{\"no\":997,\"code\":\"U+1F318\",\"emoji\":\"🌘\",\"description\":\"WANING CRESCENT MOON SYMBOL≊ waning crescent moon\",\"flagged\":false,\"keywords\":[\"crescent\",\"moon\",\"space\",\"waning\",\"weather\"]},{\"no\":998,\"code\":\"U+1F319\",\"emoji\":\"🌙\",\"description\":\"CRESCENT MOON\",\"flagged\":false,\"keywords\":[\"crescent\",\"moon\",\"space\",\"weather\"]},{\"no\":999,\"code\":\"U+1F31A\",\"emoji\":\"🌚\",\"description\":\"NEW MOON WITH FACE≊ new moon face\",\"flagged\":false,\"keywords\":[\"face\",\"moon\",\"space\",\"weather\"]},{\"no\":1000,\"code\":\"U+1F31B\",\"emoji\":\"🌛\",\"description\":\"FIRST QUARTER MOON WITH FACE\",\"flagged\":false,\"keywords\":[\"face\",\"moon\",\"quarter\",\"space\",\"weather\"]},{\"no\":1001,\"code\":\"U+1F31C\",\"emoji\":\"🌜\",\"description\":\"LAST QUARTER MOON WITH FACE\",\"flagged\":false,\"keywords\":[\"face\",\"moon\",\"quarter\",\"space\",\"weather\"]},{\"no\":1002,\"code\":\"U+1F321\",\"emoji\":\"🌡\",\"description\":\"THERMOMETER\",\"flagged\":false,\"keywords\":[\"thermometer\",\"weather\"]},{\"no\":1003,\"code\":\"U+2600\",\"emoji\":\"☀\",\"description\":\"BLACK SUN WITH RAYS≊ sun\",\"flagged\":false,\"keywords\":[\"bright\",\"rays\",\"space\",\"sun\",\"sunny\",\"weather\"]},{\"no\":1004,\"code\":\"U+1F31D\",\"emoji\":\"🌝\",\"description\":\"FULL MOON WITH FACE\",\"flagged\":false,\"keywords\":[\"bright\",\"face\",\"full\",\"moon\",\"space\",\"weather\"]},{\"no\":1005,\"code\":\"U+1F31E\",\"emoji\":\"🌞\",\"description\":\"SUN WITH FACE\",\"flagged\":false,\"keywords\":[\"bright\",\"face\",\"space\",\"sun\",\"weather\"]},{\"no\":1006,\"code\":\"U+2B50\",\"emoji\":\"⭐\",\"description\":\"WHITE MEDIUM STAR\",\"flagged\":false,\"keywords\":[\"star\"]},{\"no\":1007,\"code\":\"U+1F31F\",\"emoji\":\"🌟\",\"description\":\"GLOWING STAR\",\"flagged\":false,\"keywords\":[\"glittery\",\"glow\",\"shining\",\"sparkle\",\"star\"]},{\"no\":1008,\"code\":\"U+1F320\",\"emoji\":\"🌠\",\"description\":\"SHOOTING STAR\",\"flagged\":false,\"keywords\":[\"activity\",\"falling\",\"shooting\",\"space\",\"star\"]},{\"no\":1009,\"code\":\"U+2601\",\"emoji\":\"☁\",\"description\":\"CLOUD\",\"flagged\":false,\"keywords\":[\"cloud\",\"weather\"]},{\"no\":1010,\"code\":\"U+26C5\",\"emoji\":\"⛅\",\"description\":\"SUN BEHIND CLOUD\",\"flagged\":false,\"keywords\":[\"cloud\",\"sun\",\"weather\"]},{\"no\":1011,\"code\":\"U+26C8\",\"emoji\":\"⛈\",\"description\":\"THUNDER CLOUD AND RAIN≊ cloud with lightning and rain\",\"flagged\":false,\"keywords\":[\"cloud\",\"rain\",\"thunder\",\"weather\"]},{\"no\":1012,\"code\":\"U+1F324\",\"emoji\":\"🌤\",\"description\":\"WHITE SUN WITH SMALL CLOUD≊ sun behind small cloud\",\"flagged\":false,\"keywords\":[\"cloud\",\"sun\",\"weather\"]},{\"no\":1013,\"code\":\"U+1F325\",\"emoji\":\"🌥\",\"description\":\"WHITE SUN BEHIND CLOUD≊ sun behind large cloud\",\"flagged\":false,\"keywords\":[\"cloud\",\"sun\",\"weather\"]},{\"no\":1014,\"code\":\"U+1F326\",\"emoji\":\"🌦\",\"description\":\"WHITE SUN BEHIND CLOUD WITH RAIN≊ sun behind cloud with rain\",\"flagged\":false,\"keywords\":[\"cloud\",\"rain\",\"sun\",\"weather\"]},{\"no\":1015,\"code\":\"U+1F327\",\"emoji\":\"🌧\",\"description\":\"CLOUD WITH RAIN\",\"flagged\":false,\"keywords\":[\"cloud\",\"rain\",\"weather\"]},{\"no\":1016,\"code\":\"U+1F328\",\"emoji\":\"🌨\",\"description\":\"CLOUD WITH SNOW\",\"flagged\":false,\"keywords\":[\"cloud\",\"cold\",\"snow\",\"weather\"]},{\"no\":1017,\"code\":\"U+1F329\",\"emoji\":\"🌩\",\"description\":\"CLOUD WITH LIGHTNING\",\"flagged\":false,\"keywords\":[\"cloud\",\"lightning\",\"weather\"]},{\"no\":1018,\"code\":\"U+1F32A\",\"emoji\":\"🌪\",\"description\":\"CLOUD WITH TORNADO≊ tornado\",\"flagged\":false,\"keywords\":[\"cloud\",\"tornado\",\"weather\",\"whirlwind\"]},{\"no\":1019,\"code\":\"U+1F32B\",\"emoji\":\"🌫\",\"description\":\"FOG\",\"flagged\":false,\"keywords\":[\"cloud\",\"fog\",\"weather\"]},{\"no\":1020,\"code\":\"U+1F32C\",\"emoji\":\"🌬\",\"description\":\"WIND BLOWING FACE≊ wind face\",\"flagged\":false,\"keywords\":[\"blow\",\"cloud\",\"face\",\"weather\",\"wind\"]},{\"no\":1021,\"code\":\"U+1F300\",\"emoji\":\"🌀\",\"description\":\"CYCLONE\",\"flagged\":false,\"keywords\":[\"cyclone\",\"dizzy\",\"twister\",\"typhoon\",\"weather\"]},{\"no\":1022,\"code\":\"U+1F308\",\"emoji\":\"🌈\",\"description\":\"RAINBOW\",\"flagged\":false,\"keywords\":[\"rain\",\"rainbow\",\"weather\"]},{\"no\":1023,\"code\":\"U+1F302\",\"emoji\":\"🌂\",\"description\":\"CLOSED UMBRELLA\",\"flagged\":false,\"keywords\":[\"clothing\",\"rain\",\"umbrella\",\"weather\"]},{\"no\":1024,\"code\":\"U+2602\",\"emoji\":\"☂\",\"description\":\"UMBRELLA\",\"flagged\":false,\"keywords\":[\"clothing\",\"rain\",\"umbrella\",\"weather\"]},{\"no\":1025,\"code\":\"U+2614\",\"emoji\":\"☔\",\"description\":\"UMBRELLA WITH RAIN DROPS\",\"flagged\":false,\"keywords\":[\"clothing\",\"drop\",\"rain\",\"umbrella\",\"weather\"]},{\"no\":1026,\"code\":\"U+26F1\",\"emoji\":\"⛱\",\"description\":\"UMBRELLA ON GROUND\",\"flagged\":false,\"keywords\":[\"rain\",\"sun\",\"umbrella\",\"weather\"]},{\"no\":1027,\"code\":\"U+26A1\",\"emoji\":\"⚡\",\"description\":\"HIGH VOLTAGE SIGN≊ high voltage\",\"flagged\":false,\"keywords\":[\"danger\",\"electric\",\"electricity\",\"lightning\",\"voltage\",\"zap\"]},{\"no\":1028,\"code\":\"U+2744\",\"emoji\":\"❄\",\"description\":\"SNOWFLAKE\",\"flagged\":false,\"keywords\":[\"cold\",\"snow\",\"snowflake\",\"weather\"]},{\"no\":1029,\"code\":\"U+2603\",\"emoji\":\"☃\",\"description\":\"SNOWMAN\",\"flagged\":false,\"keywords\":[\"cold\",\"snow\",\"snowman\",\"weather\"]},{\"no\":1030,\"code\":\"U+26C4\",\"emoji\":\"⛄\",\"description\":\"SNOWMAN WITHOUT SNOW\",\"flagged\":false,\"keywords\":[\"cold\",\"snow\",\"snowman\",\"weather\"]},{\"no\":1031,\"code\":\"U+2604\",\"emoji\":\"☄\",\"description\":\"COMET\",\"flagged\":false,\"keywords\":[\"comet\",\"space\"]},{\"no\":1032,\"code\":\"U+1F525\",\"emoji\":\"🔥\",\"description\":\"FIRE\",\"flagged\":false,\"keywords\":[\"fire\",\"flame\",\"tool\"]},{\"no\":1033,\"code\":\"U+1F4A7\",\"emoji\":\"💧\",\"description\":\"DROPLET\",\"flagged\":false,\"keywords\":[\"cold\",\"comic\",\"drop\",\"sweat\",\"weather\"]},{\"no\":1034,\"code\":\"U+1F30A\",\"emoji\":\"🌊\",\"description\":\"WATER WAVE\",\"flagged\":false,\"keywords\":[\"ocean\",\"water\",\"wave\",\"weather\"]}],\"Activities\":[{\"no\":1035,\"code\":\"U+1F383\",\"emoji\":\"🎃\",\"description\":\"JACK-O-LANTERN\",\"flagged\":false,\"keywords\":[\"activity\",\"celebration\",\"entertainment\",\"halloween\",\"jack\",\"lantern\"]},{\"no\":1036,\"code\":\"U+1F384\",\"emoji\":\"🎄\",\"description\":\"CHRISTMAS TREE\",\"flagged\":false,\"keywords\":[\"activity\",\"celebration\",\"christmas\",\"entertainment\",\"tree\"]},{\"no\":1037,\"code\":\"U+1F386\",\"emoji\":\"🎆\",\"description\":\"FIREWORKS\",\"flagged\":false,\"keywords\":[\"activity\",\"celebration\",\"entertainment\",\"fireworks\"]},{\"no\":1038,\"code\":\"U+1F387\",\"emoji\":\"🎇\",\"description\":\"FIREWORK SPARKLER≊ sparkler\",\"flagged\":false,\"keywords\":[\"activity\",\"celebration\",\"entertainment\",\"fireworks\",\"sparkle\"]},{\"no\":1039,\"code\":\"U+2728\",\"emoji\":\"✨\",\"description\":\"SPARKLES\",\"flagged\":false,\"keywords\":[\"entertainment\",\"sparkle\",\"star\"]},{\"no\":1040,\"code\":\"U+1F388\",\"emoji\":\"🎈\",\"description\":\"BALLOON\",\"flagged\":false,\"keywords\":[\"activity\",\"balloon\",\"celebration\",\"entertainment\"]},{\"no\":1041,\"code\":\"U+1F389\",\"emoji\":\"🎉\",\"description\":\"PARTY POPPER\",\"flagged\":false,\"keywords\":[\"activity\",\"celebration\",\"entertainment\",\"party\",\"popper\",\"tada\"]},{\"no\":1042,\"code\":\"U+1F38A\",\"emoji\":\"🎊\",\"description\":\"CONFETTI BALL\",\"flagged\":false,\"keywords\":[\"activity\",\"ball\",\"celebration\",\"confetti\",\"entertainment\"]},{\"no\":1043,\"code\":\"U+1F38B\",\"emoji\":\"🎋\",\"description\":\"TANABATA TREE\",\"flagged\":false,\"keywords\":[\"activity\",\"banner\",\"celebration\",\"entertainment\",\"japanese\",\"tree\"]},{\"no\":1044,\"code\":\"U+1F38D\",\"emoji\":\"🎍\",\"description\":\"PINE DECORATION\",\"flagged\":false,\"keywords\":[\"activity\",\"bamboo\",\"celebration\",\"japanese\",\"pine\",\"plant\"]},{\"no\":1045,\"code\":\"U+1F38E\",\"emoji\":\"🎎\",\"description\":\"JAPANESE DOLLS\",\"flagged\":false,\"keywords\":[\"activity\",\"celebration\",\"doll\",\"entertainment\",\"festival\",\"japanese\"]},{\"no\":1046,\"code\":\"U+1F38F\",\"emoji\":\"🎏\",\"description\":\"CARP STREAMER\",\"flagged\":false,\"keywords\":[\"activity\",\"carp\",\"celebration\",\"entertainment\",\"flag\",\"streamer\"]},{\"no\":1047,\"code\":\"U+1F390\",\"emoji\":\"🎐\",\"description\":\"WIND CHIME\",\"flagged\":false,\"keywords\":[\"activity\",\"bell\",\"celebration\",\"chime\",\"entertainment\",\"wind\"]},{\"no\":1048,\"code\":\"U+1F391\",\"emoji\":\"🎑\",\"description\":\"MOON VIEWING CEREMONY≊ moon ceremony\",\"flagged\":false,\"keywords\":[\"activity\",\"celebration\",\"ceremony\",\"entertainment\",\"moon\"]},{\"no\":1049,\"code\":\"U+1F380\",\"emoji\":\"🎀\",\"description\":\"RIBBON\",\"flagged\":false,\"keywords\":[\"celebration\",\"ribbon\"]},{\"no\":1050,\"code\":\"U+1F381\",\"emoji\":\"🎁\",\"description\":\"WRAPPED PRESENT\",\"flagged\":false,\"keywords\":[\"box\",\"celebration\",\"entertainment\",\"gift\",\"present\",\"wrapped\"]},{\"no\":1051,\"code\":\"U+1F397\",\"emoji\":\"🎗\",\"description\":\"REMINDER RIBBON\",\"flagged\":false,\"keywords\":[\"celebration\",\"reminder\",\"ribbon\"]},{\"no\":1052,\"code\":\"U+1F39F\",\"emoji\":\"🎟\",\"description\":\"ADMISSION TICKETS\",\"flagged\":false,\"keywords\":[\"admission\",\"entertainment\",\"ticket\"]},{\"no\":1053,\"code\":\"U+1F3AB\",\"emoji\":\"🎫\",\"description\":\"TICKET\",\"flagged\":false,\"keywords\":[\"activity\",\"admission\",\"entertainment\",\"ticket\"]},{\"no\":1054,\"code\":\"U+1F396\",\"emoji\":\"🎖\",\"description\":\"MILITARY MEDAL\",\"flagged\":false,\"keywords\":[\"celebration\",\"medal\",\"military\"]},{\"no\":1055,\"code\":\"U+1F3C6\",\"emoji\":\"🏆\",\"description\":\"TROPHY\",\"flagged\":false,\"keywords\":[\"prize\",\"trophy\"]},{\"no\":1056,\"code\":\"U+1F3C5\",\"emoji\":\"🏅\",\"description\":\"SPORTS MEDAL\",\"flagged\":false,\"keywords\":[\"medal\"]},{\"no\":1057,\"code\":\"U+1F947\",\"emoji\":\"🥇\",\"description\":\"FIRST PLACE MEDAL\",\"flagged\":true,\"keywords\":[\"first\",\"gold\",\"medal\"]},{\"no\":1058,\"code\":\"U+1F948\",\"emoji\":\"🥈\",\"description\":\"SECOND PLACE MEDAL\",\"flagged\":true,\"keywords\":[\"medal\",\"second\",\"silver\"]},{\"no\":1059,\"code\":\"U+1F949\",\"emoji\":\"🥉\",\"description\":\"THIRD PLACE MEDAL\",\"flagged\":true,\"keywords\":[\"bronze\",\"medal\",\"third\"]},{\"no\":1060,\"code\":\"U+26BD\",\"emoji\":\"⚽\",\"description\":\"SOCCER BALL\",\"flagged\":false,\"keywords\":[\"ball\",\"soccer\"]},{\"no\":1061,\"code\":\"U+26BE\",\"emoji\":\"⚾\",\"description\":\"BASEBALL\",\"flagged\":false,\"keywords\":[\"ball\",\"baseball\"]},{\"no\":1062,\"code\":\"U+1F3C0\",\"emoji\":\"🏀\",\"description\":\"BASKETBALL AND HOOP≊ basketball\",\"flagged\":false,\"keywords\":[\"ball\",\"basketball\",\"hoop\"]},{\"no\":1063,\"code\":\"U+1F3D0\",\"emoji\":\"🏐\",\"description\":\"VOLLEYBALL\",\"flagged\":false,\"keywords\":[\"ball\",\"game\",\"volleyball\"]},{\"no\":1064,\"code\":\"U+1F3C8\",\"emoji\":\"🏈\",\"description\":\"AMERICAN FOOTBALL\",\"flagged\":false,\"keywords\":[\"american\",\"ball\",\"football\"]},{\"no\":1065,\"code\":\"U+1F3C9\",\"emoji\":\"🏉\",\"description\":\"RUGBY FOOTBALL\",\"flagged\":false,\"keywords\":[\"ball\",\"football\",\"rugby\"]},{\"no\":1066,\"code\":\"U+1F3BE\",\"emoji\":\"🎾\",\"description\":\"TENNIS RACQUET AND BALL≊ tennis\",\"flagged\":false,\"keywords\":[\"ball\",\"racquet\",\"tennis\"]},{\"no\":1067,\"code\":\"U+1F3B1\",\"emoji\":\"🎱\",\"description\":\"BILLIARDS\",\"flagged\":false,\"keywords\":[\"8\",\"8 ball\",\"ball\",\"billiard\",\"eight\",\"game\"]},{\"no\":1068,\"code\":\"U+1F3B3\",\"emoji\":\"🎳\",\"description\":\"BOWLING\",\"flagged\":false,\"keywords\":[\"ball\",\"bowling\",\"game\"]},{\"no\":1069,\"code\":\"U+1F3CF\",\"emoji\":\"🏏\",\"description\":\"CRICKET BAT AND BALL≊ cricket\",\"flagged\":false,\"keywords\":[\"ball\",\"bat\",\"cricket\",\"game\"]},{\"no\":1070,\"code\":\"U+1F3D1\",\"emoji\":\"🏑\",\"description\":\"FIELD HOCKEY STICK AND BALL≊ field hockey\",\"flagged\":false,\"keywords\":[\"ball\",\"field\",\"game\",\"hockey\",\"stick\"]},{\"no\":1071,\"code\":\"U+1F3D2\",\"emoji\":\"🏒\",\"description\":\"ICE HOCKEY STICK AND PUCK\",\"flagged\":false,\"keywords\":[\"game\",\"hockey\",\"ice\",\"puck\",\"stick\"]},{\"no\":1072,\"code\":\"U+1F3D3\",\"emoji\":\"🏓\",\"description\":\"TABLE TENNIS PADDLE AND BALL≊ ping pong\",\"flagged\":false,\"keywords\":[\"ball\",\"bat\",\"game\",\"paddle\",\"table tennis\"]},{\"no\":1073,\"code\":\"U+1F3F8\",\"emoji\":\"🏸\",\"description\":\"BADMINTON RACQUET AND SHUTTLECOCK≊ badminton\",\"flagged\":false,\"keywords\":[\"badminton\",\"birdie\",\"game\",\"racquet\",\"shuttlecock\"]},{\"no\":1074,\"code\":\"U+1F94A\",\"emoji\":\"🥊\",\"description\":\"BOXING GLOVE\",\"flagged\":true,\"keywords\":[\"boxing\",\"glove\"]},{\"no\":1075,\"code\":\"U+1F94B\",\"emoji\":\"🥋\",\"description\":\"MARTIAL ARTS UNIFORM\",\"flagged\":true,\"keywords\":[\"judo\",\"karate\",\"martial arts\",\"taekwondo\",\"uniform\"]},{\"no\":1076,\"code\":\"U+26F3\",\"emoji\":\"⛳\",\"description\":\"FLAG IN HOLE\",\"flagged\":false,\"keywords\":[\"flag\",\"golf\",\"hole\"]},{\"no\":1077,\"code\":\"U+1F3CC\",\"emoji\":\"🏌\",\"description\":\"GOLFER\",\"flagged\":false,\"keywords\":[\"ball\",\"golf\"]},{\"no\":1078,\"code\":\"U+26F8\",\"emoji\":\"⛸\",\"description\":\"ICE SKATE\",\"flagged\":false,\"keywords\":[\"ice\",\"skate\"]},{\"no\":1079,\"code\":\"U+1F3A3\",\"emoji\":\"🎣\",\"description\":\"FISHING POLE AND FISH≊ fishing pole\",\"flagged\":false,\"keywords\":[\"entertainment\",\"fish\",\"pole\"]},{\"no\":1080,\"code\":\"U+1F3BD\",\"emoji\":\"🎽\",\"description\":\"RUNNING SHIRT WITH SASH≊ running shirt\",\"flagged\":false,\"keywords\":[\"running\",\"sash\",\"shirt\"]},{\"no\":1081,\"code\":\"U+1F3BF\",\"emoji\":\"🎿\",\"description\":\"SKI AND SKI BOOT≊ skis\",\"flagged\":false,\"keywords\":[\"ski\",\"snow\"]},{\"no\":1082,\"code\":\"U+26F7\",\"emoji\":\"⛷\",\"description\":\"SKIER\",\"flagged\":false,\"keywords\":[\"ski\",\"snow\"]},{\"no\":1083,\"code\":\"U+1F3C2\",\"emoji\":\"🏂\",\"description\":\"SNOWBOARDER\",\"flagged\":false,\"keywords\":[\"ski\",\"snow\",\"snowboard\"]},{\"no\":1084,\"code\":\"U+1F3C4\",\"emoji\":\"🏄\",\"description\":\"SURFER\",\"flagged\":false,\"keywords\":[\"surfer\",\"surfing\"],\"types\":[\"U+1F3C4 U+1F3FF\",\"U+1F3C4 U+1F3FE\",\"U+1F3C4 U+1F3FD\",\"U+1F3C4 U+1F3FC\",\"U+1F3C4 U+1F3FB\"]},{\"no\":1090,\"code\":\"U+1F3C7\",\"emoji\":\"🏇\",\"description\":\"HORSE RACING\",\"flagged\":false,\"keywords\":[\"horse\",\"jockey\",\"racehorse\",\"racing\"]},{\"no\":1091,\"code\":\"U+1F3CA\",\"emoji\":\"🏊\",\"description\":\"SWIMMER\",\"flagged\":false,\"keywords\":[\"swim\",\"swimmer\"],\"types\":[\"U+1F3CA U+1F3FF\",\"U+1F3CA U+1F3FE\",\"U+1F3CA U+1F3FD\",\"U+1F3CA U+1F3FC\",\"U+1F3CA U+1F3FB\"]},{\"no\":1097,\"code\":\"U+26F9\",\"emoji\":\"⛹\",\"description\":\"PERSON WITH BALL\",\"flagged\":false,\"keywords\":[\"ball\"],\"types\":[\"U+26F9 U+1F3FF\",\"U+26F9 U+1F3FE\",\"U+26F9 U+1F3FD\",\"U+26F9 U+1F3FC\",\"U+26F9 U+1F3FB\"]},{\"no\":1103,\"code\":\"U+1F3CB\",\"emoji\":\"🏋\",\"description\":\"WEIGHT LIFTER\",\"flagged\":false,\"keywords\":[\"lifter\",\"weight\"],\"types\":[\"U+1F3CB U+1F3FF\",\"U+1F3CB U+1F3FE\",\"U+1F3CB U+1F3FD\",\"U+1F3CB U+1F3FC\",\"U+1F3CB U+1F3FB\"]},{\"no\":1109,\"code\":\"U+1F6B4\",\"emoji\":\"🚴\",\"description\":\"BICYCLIST\",\"flagged\":false,\"keywords\":[\"bicycle\",\"bicyclist\",\"bike\",\"cyclist\"],\"types\":[\"U+1F6B4 U+1F3FF\",\"U+1F6B4 U+1F3FE\",\"U+1F6B4 U+1F3FD\",\"U+1F6B4 U+1F3FC\",\"U+1F6B4 U+1F3FB\"]},{\"no\":1115,\"code\":\"U+1F6B5\",\"emoji\":\"🚵\",\"description\":\"MOUNTAIN BICYCLIST≊ mountain biker\",\"flagged\":false,\"keywords\":[\"bicycle\",\"bicyclist\",\"bike\",\"cyclist\",\"mountain\"],\"types\":[\"U+1F6B5 U+1F3FF\",\"U+1F6B5 U+1F3FE\",\"U+1F6B5 U+1F3FD\",\"U+1F6B5 U+1F3FC\",\"U+1F6B5 U+1F3FB\"]},{\"no\":1121,\"code\":\"U+1F3CE\",\"emoji\":\"🏎\",\"description\":\"RACING CAR\",\"flagged\":false,\"keywords\":[\"car\",\"racing\"]},{\"no\":1122,\"code\":\"U+1F3CD\",\"emoji\":\"🏍\",\"description\":\"RACING MOTORCYCLE≊ motorcycle\",\"flagged\":false,\"keywords\":[\"motorcycle\",\"racing\"]},{\"no\":1123,\"code\":\"U+1F938\",\"emoji\":\"🤸\",\"description\":\"PERSON DOING CARTWHEEL\",\"flagged\":true,\"keywords\":[\"cartwheel\",\"gymnastics\"],\"types\":[\"U+1F938 U+1F3FF\",\"U+1F938 U+1F3FE\",\"U+1F938 U+1F3FD\",\"U+1F938 U+1F3FC\",\"U+1F938 U+1F3FB\"]},{\"no\":1129,\"code\":\"U+1F93C\",\"emoji\":\"🤼\",\"description\":\"WRESTLERS\",\"flagged\":true,\"keywords\":[\"wrestle\",\"wrestler\"],\"types\":[\"U+1F93C U+1F3FF\",\"U+1F93C U+1F3FE\",\"U+1F93C U+1F3FD\",\"U+1F93C U+1F3FC\",\"U+1F93C U+1F3FB\"]},{\"no\":1135,\"code\":\"U+1F93D\",\"emoji\":\"🤽\",\"description\":\"WATER POLO\",\"flagged\":true,\"keywords\":[\"polo\",\"water\"],\"types\":[\"U+1F93D U+1F3FF\",\"U+1F93D U+1F3FE\",\"U+1F93D U+1F3FD\",\"U+1F93D U+1F3FC\",\"U+1F93D U+1F3FB\"]},{\"no\":1141,\"code\":\"U+1F93E\",\"emoji\":\"🤾\",\"description\":\"HANDBALL\",\"flagged\":true,\"keywords\":[\"ball\",\"handball\"],\"types\":[\"U+1F93E U+1F3FF\",\"U+1F93E U+1F3FE\",\"U+1F93E U+1F3FD\",\"U+1F93E U+1F3FC\",\"U+1F93E U+1F3FB\"]},{\"no\":1147,\"code\":\"U+1F93A\",\"emoji\":\"🤺\",\"description\":\"FENCER\",\"flagged\":true,\"keywords\":[\"fencer\",\"fencing\",\"sword\"]},{\"no\":1148,\"code\":\"U+1F945\",\"emoji\":\"🥅\",\"description\":\"GOAL NET\",\"flagged\":true,\"keywords\":[\"goal\",\"net\"]},{\"no\":1149,\"code\":\"U+1F939\",\"emoji\":\"🤹\",\"description\":\"JUGGLING\",\"flagged\":true,\"keywords\":[\"balance\",\"juggle\",\"multitask\",\"skill\"],\"types\":[\"U+1F939 U+1F3FF\",\"U+1F939 U+1F3FE\",\"U+1F939 U+1F3FD\",\"U+1F939 U+1F3FC\",\"U+1F939 U+1F3FB\"]},{\"no\":1155,\"code\":\"U+1F3AF\",\"emoji\":\"🎯\",\"description\":\"DIRECT HIT\",\"flagged\":false,\"keywords\":[\"activity\",\"bull\",\"bullseye\",\"dart\",\"entertainment\",\"eye\",\"game\",\"hit\",\"target\"]},{\"no\":1156,\"code\":\"U+1F3AE\",\"emoji\":\"🎮\",\"description\":\"VIDEO GAME\",\"flagged\":false,\"keywords\":[\"controller\",\"entertainment\",\"game\",\"video game\"]},{\"no\":1157,\"code\":\"U+1F579\",\"emoji\":\"🕹\",\"description\":\"JOYSTICK\",\"flagged\":false,\"keywords\":[\"entertainment\",\"game\",\"joystick\",\"video game\"]},{\"no\":1158,\"code\":\"U+1F3B2\",\"emoji\":\"🎲\",\"description\":\"GAME DIE\",\"flagged\":false,\"keywords\":[\"dice\",\"die\",\"entertainment\",\"game\"]},{\"no\":1159,\"code\":\"U+2660\",\"emoji\":\"♠\",\"description\":\"BLACK SPADE SUIT≊ spade suit\",\"flagged\":false,\"keywords\":[\"card\",\"game\",\"spade\",\"suit\"]},{\"no\":1160,\"code\":\"U+2665\",\"emoji\":\"♥\",\"description\":\"BLACK HEART SUIT≊ heart suit\",\"flagged\":false,\"keywords\":[\"card\",\"game\",\"heart\",\"hearts\",\"suit\"]},{\"no\":1161,\"code\":\"U+2666\",\"emoji\":\"♦\",\"description\":\"BLACK DIAMOND SUIT≊ diamond suit\",\"flagged\":false,\"keywords\":[\"card\",\"diamond\",\"diamonds\",\"game\",\"suit\"]},{\"no\":1162,\"code\":\"U+2663\",\"emoji\":\"♣\",\"description\":\"BLACK CLUB SUIT≊ club suit\",\"flagged\":false,\"keywords\":[\"card\",\"club\",\"clubs\",\"game\",\"suit\"]},{\"no\":1163,\"code\":\"U+1F0CF\",\"emoji\":\"🃏\",\"description\":\"PLAYING CARD BLACK JOKER≊ joker\",\"flagged\":false,\"keywords\":[\"card\",\"entertainment\",\"game\",\"joker\",\"playing\"]},{\"no\":1164,\"code\":\"U+1F004\",\"emoji\":\"🀄\",\"description\":\"MAHJONG TILE RED DRAGON≊ mahjong red dragon\",\"flagged\":false,\"keywords\":[\"game\",\"mahjong\",\"red\"]},{\"no\":1165,\"code\":\"U+1F3B4\",\"emoji\":\"🎴\",\"description\":\"FLOWER PLAYING CARDS\",\"flagged\":false,\"keywords\":[\"activity\",\"card\",\"entertainment\",\"flower\",\"game\",\"japanese\",\"playing\"]}],\"Objects\":[{\"no\":1166,\"code\":\"U+1F507\",\"emoji\":\"🔇\",\"description\":\"SPEAKER WITH CANCELLATION STROKE≊ speaker off\",\"flagged\":false,\"keywords\":[\"mute\",\"quiet\",\"silent\",\"speaker\",\"volume\"]},{\"no\":1167,\"code\":\"U+1F508\",\"emoji\":\"🔈\",\"description\":\"SPEAKER\",\"flagged\":false,\"keywords\":[\"speaker\",\"volume\"]},{\"no\":1168,\"code\":\"U+1F509\",\"emoji\":\"🔉\",\"description\":\"SPEAKER WITH ONE SOUND WAVE≊ speaker on\",\"flagged\":false,\"keywords\":[\"low\",\"speaker\",\"volume\",\"wave\"]},{\"no\":1169,\"code\":\"U+1F50A\",\"emoji\":\"🔊\",\"description\":\"SPEAKER WITH THREE SOUND WAVES≊ speaker loud\",\"flagged\":false,\"keywords\":[\"3\",\"entertainment\",\"high\",\"loud\",\"speaker\",\"three\",\"volume\"]},{\"no\":1170,\"code\":\"U+1F4E2\",\"emoji\":\"📢\",\"description\":\"PUBLIC ADDRESS LOUDSPEAKER≊ loudspeaker\",\"flagged\":false,\"keywords\":[\"communication\",\"loud\",\"loudspeaker\",\"public address\"]},{\"no\":1171,\"code\":\"U+1F4E3\",\"emoji\":\"📣\",\"description\":\"CHEERING MEGAPHONE≊ megaphone\",\"flagged\":false,\"keywords\":[\"cheering\",\"communication\",\"megaphone\"]},{\"no\":1172,\"code\":\"U+1F4EF\",\"emoji\":\"📯\",\"description\":\"POSTAL HORN\",\"flagged\":false,\"keywords\":[\"communication\",\"entertainment\",\"horn\",\"post\",\"postal\"]},{\"no\":1173,\"code\":\"U+1F514\",\"emoji\":\"🔔\",\"description\":\"BELL\",\"flagged\":false,\"keywords\":[\"bell\"]},{\"no\":1174,\"code\":\"U+1F515\",\"emoji\":\"🔕\",\"description\":\"BELL WITH CANCELLATION STROKE≊ bell with slash\",\"flagged\":false,\"keywords\":[\"bell\",\"forbidden\",\"mute\",\"no\",\"not\",\"prohibited\",\"quiet\",\"silent\"]},{\"no\":1175,\"code\":\"U+1F3BC\",\"emoji\":\"🎼\",\"description\":\"MUSICAL SCORE\",\"flagged\":false,\"keywords\":[\"activity\",\"entertainment\",\"music\",\"score\"]},{\"no\":1176,\"code\":\"U+1F3B5\",\"emoji\":\"🎵\",\"description\":\"MUSICAL NOTE\",\"flagged\":false,\"keywords\":[\"activity\",\"entertainment\",\"music\",\"note\"]},{\"no\":1177,\"code\":\"U+1F3B6\",\"emoji\":\"🎶\",\"description\":\"MULTIPLE MUSICAL NOTES≊ musical notes\",\"flagged\":false,\"keywords\":[\"activity\",\"entertainment\",\"music\",\"note\",\"notes\"]},{\"no\":1178,\"code\":\"U+1F399\",\"emoji\":\"🎙\",\"description\":\"STUDIO MICROPHONE\",\"flagged\":false,\"keywords\":[\"mic\",\"microphone\",\"music\",\"studio\"]},{\"no\":1179,\"code\":\"U+1F39A\",\"emoji\":\"🎚\",\"description\":\"LEVEL SLIDER\",\"flagged\":false,\"keywords\":[\"level\",\"music\",\"slider\"]},{\"no\":1180,\"code\":\"U+1F39B\",\"emoji\":\"🎛\",\"description\":\"CONTROL KNOBS\",\"flagged\":false,\"keywords\":[\"control\",\"knobs\",\"music\"]},{\"no\":1181,\"code\":\"U+1F3A4\",\"emoji\":\"🎤\",\"description\":\"MICROPHONE\",\"flagged\":false,\"keywords\":[\"activity\",\"entertainment\",\"karaoke\",\"mic\",\"microphone\"]},{\"no\":1182,\"code\":\"U+1F3A7\",\"emoji\":\"🎧\",\"description\":\"HEADPHONE\",\"flagged\":false,\"keywords\":[\"activity\",\"earbud\",\"entertainment\",\"headphone\"]},{\"no\":1183,\"code\":\"U+1F4FB\",\"emoji\":\"📻\",\"description\":\"RADIO\",\"flagged\":false,\"keywords\":[\"entertainment\",\"radio\",\"video\"]},{\"no\":1184,\"code\":\"U+1F3B7\",\"emoji\":\"🎷\",\"description\":\"SAXOPHONE\",\"flagged\":false,\"keywords\":[\"activity\",\"entertainment\",\"instrument\",\"music\",\"sax\",\"saxophone\"]},{\"no\":1185,\"code\":\"U+1F3B8\",\"emoji\":\"🎸\",\"description\":\"GUITAR\",\"flagged\":false,\"keywords\":[\"activity\",\"entertainment\",\"guitar\",\"instrument\",\"music\"]},{\"no\":1186,\"code\":\"U+1F3B9\",\"emoji\":\"🎹\",\"description\":\"MUSICAL KEYBOARD\",\"flagged\":false,\"keywords\":[\"activity\",\"entertainment\",\"instrument\",\"keyboard\",\"music\",\"piano\"]},{\"no\":1187,\"code\":\"U+1F3BA\",\"emoji\":\"🎺\",\"description\":\"TRUMPET\",\"flagged\":false,\"keywords\":[\"activity\",\"entertainment\",\"instrument\",\"music\",\"trumpet\"]},{\"no\":1188,\"code\":\"U+1F3BB\",\"emoji\":\"🎻\",\"description\":\"VIOLIN\",\"flagged\":false,\"keywords\":[\"activity\",\"entertainment\",\"instrument\",\"music\",\"violin\"]},{\"no\":1189,\"code\":\"U+1F941\",\"emoji\":\"🥁\",\"description\":\"DRUM WITH DRUMSTICKS\",\"flagged\":true,\"keywords\":[\"drum\",\"drumsticks\",\"music\"]},{\"no\":1190,\"code\":\"U+1F4F1\",\"emoji\":\"📱\",\"description\":\"MOBILE PHONE\",\"flagged\":false,\"keywords\":[\"cell\",\"communication\",\"mobile\",\"phone\",\"telephone\"]},{\"no\":1191,\"code\":\"U+1F4F2\",\"emoji\":\"📲\",\"description\":\"MOBILE PHONE WITH RIGHTWARDS ARROW AT LEFT≊ mobile phone with arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"call\",\"cell\",\"communication\",\"mobile\",\"phone\",\"receive\",\"telephone\"]},{\"no\":1192,\"code\":\"U+260E\",\"emoji\":\"☎\",\"description\":\"BLACK TELEPHONE≊ telephone\",\"flagged\":false,\"keywords\":[\"phone\",\"telephone\"]},{\"no\":1193,\"code\":\"U+1F4DE\",\"emoji\":\"📞\",\"description\":\"TELEPHONE RECEIVER\",\"flagged\":false,\"keywords\":[\"communication\",\"phone\",\"receiver\",\"telephone\"]},{\"no\":1194,\"code\":\"U+1F4DF\",\"emoji\":\"📟\",\"description\":\"PAGER\",\"flagged\":false,\"keywords\":[\"communication\",\"pager\"]},{\"no\":1195,\"code\":\"U+1F4E0\",\"emoji\":\"📠\",\"description\":\"FAX MACHINE\",\"flagged\":false,\"keywords\":[\"communication\",\"fax\"]},{\"no\":1196,\"code\":\"U+1F50B\",\"emoji\":\"🔋\",\"description\":\"BATTERY\",\"flagged\":false,\"keywords\":[\"battery\"]},{\"no\":1197,\"code\":\"U+1F50C\",\"emoji\":\"🔌\",\"description\":\"ELECTRIC PLUG\",\"flagged\":false,\"keywords\":[\"electric\",\"electricity\",\"plug\"]},{\"no\":1198,\"code\":\"U+1F4BB\",\"emoji\":\"💻\",\"description\":\"PERSONAL COMPUTER≊ laptop computer\",\"flagged\":false,\"keywords\":[\"computer\",\"pc\",\"personal\"]},{\"no\":1199,\"code\":\"U+1F5A5\",\"emoji\":\"🖥\",\"description\":\"DESKTOP COMPUTER\",\"flagged\":false,\"keywords\":[\"computer\",\"desktop\"]},{\"no\":1200,\"code\":\"U+1F5A8\",\"emoji\":\"🖨\",\"description\":\"PRINTER\",\"flagged\":false,\"keywords\":[\"computer\",\"printer\"]},{\"no\":1201,\"code\":\"U+2328\",\"emoji\":\"⌨\",\"description\":\"KEYBOARD\",\"flagged\":false,\"keywords\":[\"computer\",\"keyboard\"]},{\"no\":1202,\"code\":\"U+1F5B1\",\"emoji\":\"🖱\",\"description\":\"THREE BUTTON MOUSE≊ computer mouse\",\"flagged\":false,\"keywords\":[\"3\",\"button\",\"computer\",\"mouse\",\"three\"]},{\"no\":1203,\"code\":\"U+1F5B2\",\"emoji\":\"🖲\",\"description\":\"TRACKBALL\",\"flagged\":false,\"keywords\":[\"computer\",\"trackball\"]},{\"no\":1204,\"code\":\"U+1F4BD\",\"emoji\":\"💽\",\"description\":\"MINIDISC\",\"flagged\":false,\"keywords\":[\"computer\",\"disk\",\"entertainment\",\"minidisk\",\"optical\"]},{\"no\":1205,\"code\":\"U+1F4BE\",\"emoji\":\"💾\",\"description\":\"FLOPPY DISK\",\"flagged\":false,\"keywords\":[\"computer\",\"disk\",\"floppy\"]},{\"no\":1206,\"code\":\"U+1F4BF\",\"emoji\":\"💿\",\"description\":\"OPTICAL DISC\",\"flagged\":false,\"keywords\":[\"blu-ray\",\"cd\",\"computer\",\"disk\",\"dvd\",\"optical\"]},{\"no\":1207,\"code\":\"U+1F4C0\",\"emoji\":\"📀\",\"description\":\"DVD\",\"flagged\":false,\"keywords\":[\"blu-ray\",\"cd\",\"computer\",\"disk\",\"dvd\",\"entertainment\",\"optical\"]},{\"no\":1208,\"code\":\"U+1F3A5\",\"emoji\":\"🎥\",\"description\":\"MOVIE CAMERA\",\"flagged\":false,\"keywords\":[\"activity\",\"camera\",\"cinema\",\"entertainment\",\"movie\"]},{\"no\":1209,\"code\":\"U+1F39E\",\"emoji\":\"🎞\",\"description\":\"FILM FRAMES\",\"flagged\":false,\"keywords\":[\"cinema\",\"entertainment\",\"film\",\"frames\",\"movie\"]},{\"no\":1210,\"code\":\"U+1F4FD\",\"emoji\":\"📽\",\"description\":\"FILM PROJECTOR\",\"flagged\":false,\"keywords\":[\"cinema\",\"entertainment\",\"film\",\"movie\",\"projector\",\"video\"]},{\"no\":1211,\"code\":\"U+1F3AC\",\"emoji\":\"🎬\",\"description\":\"CLAPPER BOARD\",\"flagged\":false,\"keywords\":[\"activity\",\"clapper\",\"entertainment\",\"movie\"]},{\"no\":1212,\"code\":\"U+1F4FA\",\"emoji\":\"📺\",\"description\":\"TELEVISION\",\"flagged\":false,\"keywords\":[\"entertainment\",\"television\",\"tv\",\"video\"]},{\"no\":1213,\"code\":\"U+1F4F7\",\"emoji\":\"📷\",\"description\":\"CAMERA\",\"flagged\":false,\"keywords\":[\"camera\",\"entertainment\",\"video\"]},{\"no\":1214,\"code\":\"U+1F4F8\",\"emoji\":\"📸\",\"description\":\"CAMERA WITH FLASH\",\"flagged\":false,\"keywords\":[\"camera\",\"flash\",\"video\"]},{\"no\":1215,\"code\":\"U+1F4F9\",\"emoji\":\"📹\",\"description\":\"VIDEO CAMERA\",\"flagged\":false,\"keywords\":[\"camera\",\"entertainment\",\"video\"]},{\"no\":1216,\"code\":\"U+1F4FC\",\"emoji\":\"📼\",\"description\":\"VIDEOCASSETTE\",\"flagged\":false,\"keywords\":[\"entertainment\",\"tape\",\"vhs\",\"video\",\"videocassette\"]},{\"no\":1217,\"code\":\"U+1F50D\",\"emoji\":\"🔍\",\"description\":\"LEFT-POINTING MAGNIFYING GLASS\",\"flagged\":false,\"keywords\":[\"glass\",\"magnifying\",\"search\",\"tool\"]},{\"no\":1218,\"code\":\"U+1F50E\",\"emoji\":\"🔎\",\"description\":\"RIGHT-POINTING MAGNIFYING GLASS\",\"flagged\":false,\"keywords\":[\"glass\",\"magnifying\",\"search\",\"tool\"]},{\"no\":1219,\"code\":\"U+1F52C\",\"emoji\":\"🔬\",\"description\":\"MICROSCOPE\",\"flagged\":false,\"keywords\":[\"microscope\",\"tool\"]},{\"no\":1220,\"code\":\"U+1F52D\",\"emoji\":\"🔭\",\"description\":\"TELESCOPE\",\"flagged\":false,\"keywords\":[\"telescope\",\"tool\"]},{\"no\":1221,\"code\":\"U+1F4E1\",\"emoji\":\"📡\",\"description\":\"SATELLITE ANTENNA\",\"flagged\":false,\"keywords\":[\"antenna\",\"communication\",\"dish\",\"satellite\"]},{\"no\":1222,\"code\":\"U+1F56F\",\"emoji\":\"🕯\",\"description\":\"CANDLE\",\"flagged\":false,\"keywords\":[\"candle\",\"light\"]},{\"no\":1223,\"code\":\"U+1F4A1\",\"emoji\":\"💡\",\"description\":\"ELECTRIC LIGHT BULB≊ light bulb\",\"flagged\":false,\"keywords\":[\"bulb\",\"comic\",\"electric\",\"idea\",\"light\"]},{\"no\":1224,\"code\":\"U+1F526\",\"emoji\":\"🔦\",\"description\":\"ELECTRIC TORCH≊ flashlight\",\"flagged\":false,\"keywords\":[\"electric\",\"flashlight\",\"light\",\"tool\",\"torch\"]},{\"no\":1225,\"code\":\"U+1F3EE\",\"emoji\":\"🏮\",\"description\":\"IZAKAYA LANTERN≊ red paper lantern\",\"flagged\":false,\"keywords\":[\"bar\",\"japanese\",\"lantern\",\"light\",\"red\"]},{\"no\":1226,\"code\":\"U+1F4D4\",\"emoji\":\"📔\",\"description\":\"NOTEBOOK WITH DECORATIVE COVER\",\"flagged\":false,\"keywords\":[\"book\",\"cover\",\"decorated\",\"notebook\"]},{\"no\":1227,\"code\":\"U+1F4D5\",\"emoji\":\"📕\",\"description\":\"CLOSED BOOK\",\"flagged\":false,\"keywords\":[\"book\",\"closed\"]},{\"no\":1228,\"code\":\"U+1F4D6\",\"emoji\":\"📖\",\"description\":\"OPEN BOOK\",\"flagged\":false,\"keywords\":[\"book\",\"open\"]},{\"no\":1229,\"code\":\"U+1F4D7\",\"emoji\":\"📗\",\"description\":\"GREEN BOOK\",\"flagged\":false,\"keywords\":[\"book\",\"green\"]},{\"no\":1230,\"code\":\"U+1F4D8\",\"emoji\":\"📘\",\"description\":\"BLUE BOOK\",\"flagged\":false,\"keywords\":[\"blue\",\"book\"]},{\"no\":1231,\"code\":\"U+1F4D9\",\"emoji\":\"📙\",\"description\":\"ORANGE BOOK\",\"flagged\":false,\"keywords\":[\"book\",\"orange\"]},{\"no\":1232,\"code\":\"U+1F4DA\",\"emoji\":\"📚\",\"description\":\"BOOKS\",\"flagged\":false,\"keywords\":[\"book\",\"books\"]},{\"no\":1233,\"code\":\"U+1F4D3\",\"emoji\":\"📓\",\"description\":\"NOTEBOOK\",\"flagged\":false,\"keywords\":[\"notebook\"]},{\"no\":1234,\"code\":\"U+1F4D2\",\"emoji\":\"📒\",\"description\":\"LEDGER\",\"flagged\":false,\"keywords\":[\"ledger\",\"notebook\"]},{\"no\":1235,\"code\":\"U+1F4C3\",\"emoji\":\"📃\",\"description\":\"PAGE WITH CURL\",\"flagged\":false,\"keywords\":[\"curl\",\"document\",\"page\"]},{\"no\":1236,\"code\":\"U+1F4DC\",\"emoji\":\"📜\",\"description\":\"SCROLL\",\"flagged\":false,\"keywords\":[\"paper\",\"scroll\"]},{\"no\":1237,\"code\":\"U+1F4C4\",\"emoji\":\"📄\",\"description\":\"PAGE FACING UP\",\"flagged\":false,\"keywords\":[\"document\",\"page\"]},{\"no\":1238,\"code\":\"U+1F4F0\",\"emoji\":\"📰\",\"description\":\"NEWSPAPER\",\"flagged\":false,\"keywords\":[\"communication\",\"news\",\"newspaper\",\"paper\"]},{\"no\":1239,\"code\":\"U+1F5DE\",\"emoji\":\"🗞\",\"description\":\"ROLLED-UP NEWSPAPER\",\"flagged\":false,\"keywords\":[\"news\",\"newspaper\",\"paper\",\"rolled\"]},{\"no\":1240,\"code\":\"U+1F4D1\",\"emoji\":\"📑\",\"description\":\"BOOKMARK TABS\",\"flagged\":false,\"keywords\":[\"bookmark\",\"mark\",\"marker\",\"tabs\"]},{\"no\":1241,\"code\":\"U+1F516\",\"emoji\":\"🔖\",\"description\":\"BOOKMARK\",\"flagged\":false,\"keywords\":[\"bookmark\",\"mark\"]},{\"no\":1242,\"code\":\"U+1F3F7\",\"emoji\":\"🏷\",\"description\":\"LABEL\",\"flagged\":false,\"keywords\":[\"label\"]},{\"no\":1243,\"code\":\"U+1F4B0\",\"emoji\":\"💰\",\"description\":\"MONEY BAG\",\"flagged\":false,\"keywords\":[\"bag\",\"dollar\",\"money\",\"moneybag\"]},{\"no\":1244,\"code\":\"U+1F4B4\",\"emoji\":\"💴\",\"description\":\"BANKNOTE WITH YEN SIGN≊ yen banknote\",\"flagged\":false,\"keywords\":[\"bank\",\"banknote\",\"bill\",\"currency\",\"money\",\"note\",\"yen\"]},{\"no\":1245,\"code\":\"U+1F4B5\",\"emoji\":\"💵\",\"description\":\"BANKNOTE WITH DOLLAR SIGN≊ dollar banknote\",\"flagged\":false,\"keywords\":[\"bank\",\"banknote\",\"bill\",\"currency\",\"dollar\",\"money\",\"note\"]},{\"no\":1246,\"code\":\"U+1F4B6\",\"emoji\":\"💶\",\"description\":\"BANKNOTE WITH EURO SIGN≊ euro banknote\",\"flagged\":false,\"keywords\":[\"bank\",\"banknote\",\"bill\",\"currency\",\"euro\",\"money\",\"note\"]},{\"no\":1247,\"code\":\"U+1F4B7\",\"emoji\":\"💷\",\"description\":\"BANKNOTE WITH POUND SIGN≊ pound banknote\",\"flagged\":false,\"keywords\":[\"bank\",\"banknote\",\"bill\",\"currency\",\"money\",\"note\",\"pound\"]},{\"no\":1248,\"code\":\"U+1F4B8\",\"emoji\":\"💸\",\"description\":\"MONEY WITH WINGS\",\"flagged\":false,\"keywords\":[\"bank\",\"banknote\",\"bill\",\"dollar\",\"fly\",\"money\",\"note\",\"wings\"]},{\"no\":1249,\"code\":\"U+1F4B3\",\"emoji\":\"💳\",\"description\":\"CREDIT CARD\",\"flagged\":false,\"keywords\":[\"bank\",\"card\",\"credit\",\"money\"]},{\"no\":1250,\"code\":\"U+1F4B9\",\"emoji\":\"💹\",\"description\":\"CHART WITH UPWARDS TREND AND YEN SIGN≊ chart increasing with yen\",\"flagged\":false,\"keywords\":[\"bank\",\"chart\",\"currency\",\"graph\",\"growth\",\"market\",\"money\",\"rise\",\"trend\",\"upward\",\"yen\"]},{\"no\":1251,\"code\":\"U+1F4B1\",\"emoji\":\"💱\",\"description\":\"CURRENCY EXCHANGE\",\"flagged\":false,\"keywords\":[\"bank\",\"currency\",\"exchange\",\"money\"]},{\"no\":1252,\"code\":\"U+1F4B2\",\"emoji\":\"💲\",\"description\":\"HEAVY DOLLAR SIGN\",\"flagged\":false,\"keywords\":[\"currency\",\"dollar\",\"money\"]},{\"no\":1253,\"code\":\"U+2709\",\"emoji\":\"✉\",\"description\":\"ENVELOPE\",\"flagged\":false,\"keywords\":[\"e-mail\",\"email\",\"envelope\"]},{\"no\":1254,\"code\":\"U+1F4E7\",\"emoji\":\"📧\",\"description\":\"E-MAIL SYMBOL≊ e-mail\",\"flagged\":false,\"keywords\":[\"communication\",\"e-mail\",\"email\",\"letter\",\"mail\"]},{\"no\":1255,\"code\":\"U+1F4E8\",\"emoji\":\"📨\",\"description\":\"INCOMING ENVELOPE\",\"flagged\":false,\"keywords\":[\"communication\",\"e-mail\",\"email\",\"envelope\",\"incoming\",\"letter\",\"mail\",\"receive\"]},{\"no\":1256,\"code\":\"U+1F4E9\",\"emoji\":\"📩\",\"description\":\"ENVELOPE WITH DOWNWARDS ARROW ABOVE≊ envelope with arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"communication\",\"down\",\"e-mail\",\"email\",\"envelope\",\"letter\",\"mail\",\"outgoing\",\"sent\"]},{\"no\":1257,\"code\":\"U+1F4E4\",\"emoji\":\"📤\",\"description\":\"OUTBOX TRAY\",\"flagged\":false,\"keywords\":[\"box\",\"communication\",\"letter\",\"mail\",\"outbox\",\"sent\",\"tray\"]},{\"no\":1258,\"code\":\"U+1F4E5\",\"emoji\":\"📥\",\"description\":\"INBOX TRAY\",\"flagged\":false,\"keywords\":[\"box\",\"communication\",\"inbox\",\"letter\",\"mail\",\"receive\",\"tray\"]},{\"no\":1259,\"code\":\"U+1F4E6\",\"emoji\":\"📦\",\"description\":\"PACKAGE\",\"flagged\":false,\"keywords\":[\"box\",\"communication\",\"package\",\"parcel\"]},{\"no\":1260,\"code\":\"U+1F4EB\",\"emoji\":\"📫\",\"description\":\"CLOSED MAILBOX WITH RAISED FLAG\",\"flagged\":false,\"keywords\":[\"closed\",\"communication\",\"flag\",\"mail\",\"mailbox\",\"postbox\"]},{\"no\":1261,\"code\":\"U+1F4EA\",\"emoji\":\"📪\",\"description\":\"CLOSED MAILBOX WITH LOWERED FLAG\",\"flagged\":false,\"keywords\":[\"closed\",\"communication\",\"flag\",\"lowered\",\"mail\",\"mailbox\",\"postbox\"]},{\"no\":1262,\"code\":\"U+1F4EC\",\"emoji\":\"📬\",\"description\":\"OPEN MAILBOX WITH RAISED FLAG\",\"flagged\":false,\"keywords\":[\"communication\",\"flag\",\"mail\",\"mailbox\",\"open\",\"postbox\"]},{\"no\":1263,\"code\":\"U+1F4ED\",\"emoji\":\"📭\",\"description\":\"OPEN MAILBOX WITH LOWERED FLAG\",\"flagged\":false,\"keywords\":[\"communication\",\"flag\",\"lowered\",\"mail\",\"mailbox\",\"open\",\"postbox\"]},{\"no\":1264,\"code\":\"U+1F4EE\",\"emoji\":\"📮\",\"description\":\"POSTBOX\",\"flagged\":false,\"keywords\":[\"communication\",\"mail\",\"mailbox\",\"postbox\"]},{\"no\":1265,\"code\":\"U+1F5F3\",\"emoji\":\"🗳\",\"description\":\"BALLOT BOX WITH BALLOT\",\"flagged\":false,\"keywords\":[\"ballot\",\"box\"]},{\"no\":1266,\"code\":\"U+270F\",\"emoji\":\"✏\",\"description\":\"PENCIL\",\"flagged\":false,\"keywords\":[\"pencil\"]},{\"no\":1267,\"code\":\"U+2712\",\"emoji\":\"✒\",\"description\":\"BLACK NIB\",\"flagged\":false,\"keywords\":[\"nib\",\"pen\"]},{\"no\":1268,\"code\":\"U+1F58B\",\"emoji\":\"🖋\",\"description\":\"LOWER LEFT FOUNTAIN PEN≊ fountain pen\",\"flagged\":false,\"keywords\":[\"communication\",\"fountain\",\"pen\"]},{\"no\":1269,\"code\":\"U+1F58A\",\"emoji\":\"🖊\",\"description\":\"LOWER LEFT BALLPOINT PEN≊ pen\",\"flagged\":false,\"keywords\":[\"ballpoint\",\"communication\",\"pen\"]},{\"no\":1270,\"code\":\"U+1F58C\",\"emoji\":\"🖌\",\"description\":\"LOWER LEFT PAINTBRUSH≊ paintbrush\",\"flagged\":false,\"keywords\":[\"communication\",\"paintbrush\",\"painting\"]},{\"no\":1271,\"code\":\"U+1F58D\",\"emoji\":\"🖍\",\"description\":\"LOWER LEFT CRAYON≊ crayon\",\"flagged\":false,\"keywords\":[\"communication\",\"crayon\"]},{\"no\":1272,\"code\":\"U+1F4DD\",\"emoji\":\"📝\",\"description\":\"MEMO\",\"flagged\":false,\"keywords\":[\"communication\",\"memo\",\"pencil\"]},{\"no\":1273,\"code\":\"U+1F4BC\",\"emoji\":\"💼\",\"description\":\"BRIEFCASE\",\"flagged\":false,\"keywords\":[\"briefcase\"]},{\"no\":1274,\"code\":\"U+1F4C1\",\"emoji\":\"📁\",\"description\":\"FILE FOLDER\",\"flagged\":false,\"keywords\":[\"file\",\"folder\"]},{\"no\":1275,\"code\":\"U+1F4C2\",\"emoji\":\"📂\",\"description\":\"OPEN FILE FOLDER\",\"flagged\":false,\"keywords\":[\"file\",\"folder\",\"open\"]},{\"no\":1276,\"code\":\"U+1F5C2\",\"emoji\":\"🗂\",\"description\":\"CARD INDEX DIVIDERS\",\"flagged\":false,\"keywords\":[\"card\",\"dividers\",\"index\"]},{\"no\":1277,\"code\":\"U+1F4C5\",\"emoji\":\"📅\",\"description\":\"CALENDAR\",\"flagged\":false,\"keywords\":[\"calendar\",\"date\"]},{\"no\":1278,\"code\":\"U+1F4C6\",\"emoji\":\"📆\",\"description\":\"TEAR-OFF CALENDAR\",\"flagged\":false,\"keywords\":[\"calendar\"]},{\"no\":1279,\"code\":\"U+1F5D2\",\"emoji\":\"🗒\",\"description\":\"SPIRAL NOTE PAD≊ spiral notepad\",\"flagged\":false,\"keywords\":[\"note\",\"pad\",\"spiral\"]},{\"no\":1280,\"code\":\"U+1F5D3\",\"emoji\":\"🗓\",\"description\":\"SPIRAL CALENDAR PAD≊ spiral calendar\",\"flagged\":false,\"keywords\":[\"calendar\",\"pad\",\"spiral\"]},{\"no\":1281,\"code\":\"U+1F4C7\",\"emoji\":\"📇\",\"description\":\"CARD INDEX\",\"flagged\":false,\"keywords\":[\"card\",\"index\",\"rolodex\"]},{\"no\":1282,\"code\":\"U+1F4C8\",\"emoji\":\"📈\",\"description\":\"CHART WITH UPWARDS TREND≊ chart increasing\",\"flagged\":false,\"keywords\":[\"chart\",\"graph\",\"growth\",\"trend\",\"upward\"]},{\"no\":1283,\"code\":\"U+1F4C9\",\"emoji\":\"📉\",\"description\":\"CHART WITH DOWNWARDS TREND≊ chart decreasing\",\"flagged\":false,\"keywords\":[\"chart\",\"down\",\"graph\",\"trend\"]},{\"no\":1284,\"code\":\"U+1F4CA\",\"emoji\":\"📊\",\"description\":\"BAR CHART\",\"flagged\":false,\"keywords\":[\"bar\",\"chart\",\"graph\"]},{\"no\":1285,\"code\":\"U+1F4CB\",\"emoji\":\"📋\",\"description\":\"CLIPBOARD\",\"flagged\":false,\"keywords\":[\"clipboard\"]},{\"no\":1286,\"code\":\"U+1F4CC\",\"emoji\":\"📌\",\"description\":\"PUSHPIN\",\"flagged\":false,\"keywords\":[\"pin\",\"pushpin\"]},{\"no\":1287,\"code\":\"U+1F4CD\",\"emoji\":\"📍\",\"description\":\"ROUND PUSHPIN\",\"flagged\":false,\"keywords\":[\"pin\",\"pushpin\"]},{\"no\":1288,\"code\":\"U+1F4CE\",\"emoji\":\"📎\",\"description\":\"PAPERCLIP\",\"flagged\":false,\"keywords\":[\"paperclip\"]},{\"no\":1289,\"code\":\"U+1F587\",\"emoji\":\"🖇\",\"description\":\"LINKED PAPERCLIPS\",\"flagged\":false,\"keywords\":[\"communication\",\"link\",\"paperclip\"]},{\"no\":1290,\"code\":\"U+1F4CF\",\"emoji\":\"📏\",\"description\":\"STRAIGHT RULER\",\"flagged\":false,\"keywords\":[\"ruler\",\"straight edge\"]},{\"no\":1291,\"code\":\"U+1F4D0\",\"emoji\":\"📐\",\"description\":\"TRIANGULAR RULER\",\"flagged\":false,\"keywords\":[\"ruler\",\"set\",\"triangle\"]},{\"no\":1292,\"code\":\"U+2702\",\"emoji\":\"✂\",\"description\":\"BLACK SCISSORS≊ scissors\",\"flagged\":false,\"keywords\":[\"scissors\",\"tool\"]},{\"no\":1293,\"code\":\"U+1F5C3\",\"emoji\":\"🗃\",\"description\":\"CARD FILE BOX\",\"flagged\":false,\"keywords\":[\"box\",\"card\",\"file\"]},{\"no\":1294,\"code\":\"U+1F5C4\",\"emoji\":\"🗄\",\"description\":\"FILE CABINET\",\"flagged\":false,\"keywords\":[\"cabinet\",\"file\"]},{\"no\":1295,\"code\":\"U+1F5D1\",\"emoji\":\"🗑\",\"description\":\"WASTEBASKET\",\"flagged\":false,\"keywords\":[\"wastebasket\"]},{\"no\":1296,\"code\":\"U+1F512\",\"emoji\":\"🔒\",\"description\":\"LOCK\",\"flagged\":false,\"keywords\":[\"closed\",\"lock\"]},{\"no\":1297,\"code\":\"U+1F513\",\"emoji\":\"🔓\",\"description\":\"OPEN LOCK\",\"flagged\":false,\"keywords\":[\"lock\",\"open\",\"unlock\"]},{\"no\":1298,\"code\":\"U+1F50F\",\"emoji\":\"🔏\",\"description\":\"LOCK WITH INK PEN≊ lock with pen\",\"flagged\":false,\"keywords\":[\"ink\",\"lock\",\"nib\",\"pen\",\"privacy\"]},{\"no\":1299,\"code\":\"U+1F510\",\"emoji\":\"🔐\",\"description\":\"CLOSED LOCK WITH KEY\",\"flagged\":false,\"keywords\":[\"closed\",\"key\",\"lock\",\"secure\"]},{\"no\":1300,\"code\":\"U+1F511\",\"emoji\":\"🔑\",\"description\":\"KEY\",\"flagged\":false,\"keywords\":[\"key\",\"lock\",\"password\"]},{\"no\":1301,\"code\":\"U+1F5DD\",\"emoji\":\"🗝\",\"description\":\"OLD KEY\",\"flagged\":false,\"keywords\":[\"clue\",\"key\",\"lock\",\"old\"]},{\"no\":1302,\"code\":\"U+1F528\",\"emoji\":\"🔨\",\"description\":\"HAMMER\",\"flagged\":false,\"keywords\":[\"hammer\",\"tool\"]},{\"no\":1303,\"code\":\"U+26CF\",\"emoji\":\"⛏\",\"description\":\"PICK\",\"flagged\":false,\"keywords\":[\"mining\",\"pick\",\"tool\"]},{\"no\":1304,\"code\":\"U+2692\",\"emoji\":\"⚒\",\"description\":\"HAMMER AND PICK\",\"flagged\":false,\"keywords\":[\"hammer\",\"pick\",\"tool\"]},{\"no\":1305,\"code\":\"U+1F6E0\",\"emoji\":\"🛠\",\"description\":\"HAMMER AND WRENCH\",\"flagged\":false,\"keywords\":[\"hammer\",\"tool\",\"wrench\"]},{\"no\":1306,\"code\":\"U+1F5E1\",\"emoji\":\"🗡\",\"description\":\"DAGGER KNIFE≊ dagger\",\"flagged\":false,\"keywords\":[\"dagger\",\"knife\",\"weapon\"]},{\"no\":1307,\"code\":\"U+2694\",\"emoji\":\"⚔\",\"description\":\"CROSSED SWORDS\",\"flagged\":false,\"keywords\":[\"crossed\",\"swords\",\"weapon\"]},{\"no\":1308,\"code\":\"U+1F52B\",\"emoji\":\"🔫\",\"description\":\"PISTOL\",\"flagged\":false,\"keywords\":[\"gun\",\"handgun\",\"pistol\",\"revolver\",\"tool\",\"weapon\"]},{\"no\":1309,\"code\":\"U+1F3F9\",\"emoji\":\"🏹\",\"description\":\"BOW AND ARROW\",\"flagged\":false,\"keywords\":[\"archer\",\"arrow\",\"bow\",\"sagittarius\",\"tool\",\"weapon\",\"zodiac\"]},{\"no\":1310,\"code\":\"U+1F6E1\",\"emoji\":\"🛡\",\"description\":\"SHIELD\",\"flagged\":false,\"keywords\":[\"shield\",\"weapon\"]},{\"no\":1311,\"code\":\"U+1F527\",\"emoji\":\"🔧\",\"description\":\"WRENCH\",\"flagged\":false,\"keywords\":[\"tool\",\"wrench\"]},{\"no\":1312,\"code\":\"U+1F529\",\"emoji\":\"🔩\",\"description\":\"NUT AND BOLT\",\"flagged\":false,\"keywords\":[\"bolt\",\"nut\",\"tool\"]},{\"no\":1313,\"code\":\"U+2699\",\"emoji\":\"⚙\",\"description\":\"GEAR\",\"flagged\":false,\"keywords\":[\"gear\",\"tool\"]},{\"no\":1314,\"code\":\"U+1F5DC\",\"emoji\":\"🗜\",\"description\":\"COMPRESSION\",\"flagged\":false,\"keywords\":[\"compression\",\"tool\",\"vice\"]},{\"no\":1315,\"code\":\"U+2697\",\"emoji\":\"⚗\",\"description\":\"ALEMBIC\",\"flagged\":false,\"keywords\":[\"alembic\",\"chemistry\",\"tool\"]},{\"no\":1316,\"code\":\"U+2696\",\"emoji\":\"⚖\",\"description\":\"SCALES≊ balance scale\",\"flagged\":false,\"keywords\":[\"balance\",\"justice\",\"libra\",\"scales\",\"tool\",\"weight\",\"zodiac\"]},{\"no\":1317,\"code\":\"U+1F517\",\"emoji\":\"🔗\",\"description\":\"LINK SYMBOL≊ link\",\"flagged\":false,\"keywords\":[\"link\"]},{\"no\":1318,\"code\":\"U+26D3\",\"emoji\":\"⛓\",\"description\":\"CHAINS\",\"flagged\":false,\"keywords\":[\"chain\"]},{\"no\":1319,\"code\":\"U+1F489\",\"emoji\":\"💉\",\"description\":\"SYRINGE\",\"flagged\":false,\"keywords\":[\"doctor\",\"medicine\",\"needle\",\"shot\",\"sick\",\"syringe\",\"tool\"]},{\"no\":1320,\"code\":\"U+1F48A\",\"emoji\":\"💊\",\"description\":\"PILL\",\"flagged\":false,\"keywords\":[\"doctor\",\"medicine\",\"pill\",\"sick\"]},{\"no\":1321,\"code\":\"U+1F6AC\",\"emoji\":\"🚬\",\"description\":\"SMOKING SYMBOL≊ smoking\",\"flagged\":false,\"keywords\":[\"activity\",\"smoking\"]},{\"no\":1322,\"code\":\"U+26B0\",\"emoji\":\"⚰\",\"description\":\"COFFIN\",\"flagged\":false,\"keywords\":[\"coffin\",\"death\"]},{\"no\":1323,\"code\":\"U+26B1\",\"emoji\":\"⚱\",\"description\":\"FUNERAL URN\",\"flagged\":false,\"keywords\":[\"death\",\"funeral\",\"urn\"]},{\"no\":1324,\"code\":\"U+1F5FF\",\"emoji\":\"🗿\",\"description\":\"MOYAI≊ moai\",\"flagged\":false,\"keywords\":[\"face\",\"moyai\",\"statue\"]},{\"no\":1325,\"code\":\"U+1F6E2\",\"emoji\":\"🛢\",\"description\":\"OIL DRUM\",\"flagged\":false,\"keywords\":[\"drum\",\"oil\"]},{\"no\":1326,\"code\":\"U+1F52E\",\"emoji\":\"🔮\",\"description\":\"CRYSTAL BALL\",\"flagged\":false,\"keywords\":[\"ball\",\"crystal\",\"fairy tale\",\"fantasy\",\"fortune\",\"tool\"]},{\"no\":1327,\"code\":\"U+1F6D2\",\"emoji\":\"🛒\",\"description\":\"SHOPPING TROLLEY\",\"flagged\":true,\"keywords\":[\"cart\",\"shopping\",\"trolley\"]}],\"Symbols\":[{\"no\":1328,\"code\":\"U+1F3E7\",\"emoji\":\"🏧\",\"description\":\"AUTOMATED TELLER MACHINE≊ ATM sign\",\"flagged\":false,\"keywords\":[\"atm\",\"automated\",\"bank\",\"teller\"]},{\"no\":1329,\"code\":\"U+1F6AE\",\"emoji\":\"🚮\",\"description\":\"PUT LITTER IN ITS PLACE SYMBOL≊ litter in bin sign\",\"flagged\":false,\"keywords\":[\"litter\",\"litterbox\"]},{\"no\":1330,\"code\":\"U+1F6B0\",\"emoji\":\"🚰\",\"description\":\"POTABLE WATER SYMBOL≊ potable water\",\"flagged\":false,\"keywords\":[\"drink\",\"potable\",\"water\"]},{\"no\":1331,\"code\":\"U+267F\",\"emoji\":\"♿\",\"description\":\"WHEELCHAIR SYMBOL≊ wheelchair\",\"flagged\":false,\"keywords\":[\"access\",\"wheelchair\"]},{\"no\":1332,\"code\":\"U+1F6B9\",\"emoji\":\"🚹\",\"description\":\"MENS SYMBOL≊ men’s room\",\"flagged\":false,\"keywords\":[\"lavatory\",\"man\",\"restroom\",\"wc\"]},{\"no\":1333,\"code\":\"U+1F6BA\",\"emoji\":\"🚺\",\"description\":\"WOMENS SYMBOL≊ women’s room\",\"flagged\":false,\"keywords\":[\"lavatory\",\"restroom\",\"wc\",\"woman\"]},{\"no\":1334,\"code\":\"U+1F6BB\",\"emoji\":\"🚻\",\"description\":\"RESTROOM\",\"flagged\":false,\"keywords\":[\"lavatory\",\"restroom\",\"wc\"]},{\"no\":1335,\"code\":\"U+1F6BC\",\"emoji\":\"🚼\",\"description\":\"BABY SYMBOL\",\"flagged\":false,\"keywords\":[\"baby\",\"changing\"]},{\"no\":1336,\"code\":\"U+1F6BE\",\"emoji\":\"🚾\",\"description\":\"WATER CLOSET\",\"flagged\":false,\"keywords\":[\"closet\",\"lavatory\",\"restroom\",\"water\",\"wc\"]},{\"no\":1337,\"code\":\"U+1F6C2\",\"emoji\":\"🛂\",\"description\":\"PASSPORT CONTROL\",\"flagged\":false,\"keywords\":[\"control\",\"passport\"]},{\"no\":1338,\"code\":\"U+1F6C3\",\"emoji\":\"🛃\",\"description\":\"CUSTOMS\",\"flagged\":false,\"keywords\":[\"customs\"]},{\"no\":1339,\"code\":\"U+1F6C4\",\"emoji\":\"🛄\",\"description\":\"BAGGAGE CLAIM\",\"flagged\":false,\"keywords\":[\"baggage\",\"claim\"]},{\"no\":1340,\"code\":\"U+1F6C5\",\"emoji\":\"🛅\",\"description\":\"LEFT LUGGAGE\",\"flagged\":false,\"keywords\":[\"baggage\",\"left luggage\",\"locker\",\"luggage\"]},{\"no\":1341,\"code\":\"U+26A0\",\"emoji\":\"⚠\",\"description\":\"WARNING SIGN≊ warning\",\"flagged\":false,\"keywords\":[\"warning\"]},{\"no\":1342,\"code\":\"U+1F6B8\",\"emoji\":\"🚸\",\"description\":\"CHILDREN CROSSING\",\"flagged\":false,\"keywords\":[\"child\",\"crossing\",\"pedestrian\",\"traffic\"]},{\"no\":1343,\"code\":\"U+26D4\",\"emoji\":\"⛔\",\"description\":\"NO ENTRY\",\"flagged\":false,\"keywords\":[\"entry\",\"forbidden\",\"no\",\"not\",\"prohibited\",\"traffic\"]},{\"no\":1344,\"code\":\"U+1F6AB\",\"emoji\":\"🚫\",\"description\":\"NO ENTRY SIGN≊ prohibited\",\"flagged\":false,\"keywords\":[\"entry\",\"forbidden\",\"no\",\"not\",\"prohibited\"]},{\"no\":1345,\"code\":\"U+1F6B3\",\"emoji\":\"🚳\",\"description\":\"NO BICYCLES\",\"flagged\":false,\"keywords\":[\"bicycle\",\"bike\",\"forbidden\",\"no\",\"not\",\"prohibited\",\"vehicle\"]},{\"no\":1346,\"code\":\"U+1F6AD\",\"emoji\":\"🚭\",\"description\":\"NO SMOKING SYMBOL≊ no smoking\",\"flagged\":false,\"keywords\":[\"forbidden\",\"no\",\"not\",\"prohibited\",\"smoking\"]},{\"no\":1347,\"code\":\"U+1F6AF\",\"emoji\":\"🚯\",\"description\":\"DO NOT LITTER SYMBOL≊ no littering\",\"flagged\":false,\"keywords\":[\"forbidden\",\"litter\",\"no\",\"not\",\"prohibited\"]},{\"no\":1348,\"code\":\"U+1F6B1\",\"emoji\":\"🚱\",\"description\":\"NON-POTABLE WATER SYMBOL≊ non-potable water\",\"flagged\":false,\"keywords\":[\"drink\",\"forbidden\",\"no\",\"not\",\"potable\",\"prohibited\",\"water\"]},{\"no\":1349,\"code\":\"U+1F6B7\",\"emoji\":\"🚷\",\"description\":\"NO PEDESTRIANS\",\"flagged\":false,\"keywords\":[\"forbidden\",\"no\",\"not\",\"pedestrian\",\"prohibited\"]},{\"no\":1350,\"code\":\"U+1F4F5\",\"emoji\":\"📵\",\"description\":\"NO MOBILE PHONES\",\"flagged\":false,\"keywords\":[\"cell\",\"communication\",\"forbidden\",\"mobile\",\"no\",\"not\",\"phone\",\"prohibited\",\"telephone\"]},{\"no\":1351,\"code\":\"U+1F51E\",\"emoji\":\"🔞\",\"description\":\"NO ONE UNDER EIGHTEEN SYMBOL≊ no one under eighteen\",\"flagged\":false,\"keywords\":[\"18\",\"age restriction\",\"eighteen\",\"forbidden\",\"no\",\"not\",\"prohibited\",\"underage\"]},{\"no\":1352,\"code\":\"U+2622\",\"emoji\":\"☢\",\"description\":\"RADIOACTIVE SIGN≊ radioactive\",\"flagged\":false,\"keywords\":[\"radioactive\"]},{\"no\":1353,\"code\":\"U+2623\",\"emoji\":\"☣\",\"description\":\"BIOHAZARD SIGN≊ biohazard\",\"flagged\":false,\"keywords\":[\"biohazard\"]},{\"no\":1354,\"code\":\"U+2B06\",\"emoji\":\"⬆\",\"description\":\"UPWARDS BLACK ARROW≊ up arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"cardinal\",\"direction\",\"north\"]},{\"no\":1355,\"code\":\"U+2197\",\"emoji\":\"↗\",\"description\":\"NORTH EAST ARROW≊ up-right arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"direction\",\"intercardinal\",\"northeast\"]},{\"no\":1356,\"code\":\"U+27A1\",\"emoji\":\"➡\",\"description\":\"BLACK RIGHTWARDS ARROW≊ right arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"cardinal\",\"direction\",\"east\"]},{\"no\":1357,\"code\":\"U+2198\",\"emoji\":\"↘\",\"description\":\"SOUTH EAST ARROW≊ down-right arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"direction\",\"intercardinal\",\"southeast\"]},{\"no\":1358,\"code\":\"U+2B07\",\"emoji\":\"⬇\",\"description\":\"DOWNWARDS BLACK ARROW≊ down arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"cardinal\",\"direction\",\"down\",\"south\"]},{\"no\":1359,\"code\":\"U+2199\",\"emoji\":\"↙\",\"description\":\"SOUTH WEST ARROW≊ down-left arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"direction\",\"intercardinal\",\"southwest\"]},{\"no\":1360,\"code\":\"U+2B05\",\"emoji\":\"⬅\",\"description\":\"LEFTWARDS BLACK ARROW≊ left arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"cardinal\",\"direction\",\"west\"]},{\"no\":1361,\"code\":\"U+2196\",\"emoji\":\"↖\",\"description\":\"NORTH WEST ARROW≊ up-left arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"direction\",\"intercardinal\",\"northwest\"]},{\"no\":1362,\"code\":\"U+2195\",\"emoji\":\"↕\",\"description\":\"UP DOWN ARROW≊ up-down arrow\",\"flagged\":false,\"keywords\":[\"arrow\"]},{\"no\":1363,\"code\":\"U+2194\",\"emoji\":\"↔\",\"description\":\"LEFT RIGHT ARROW≊ left-right arrow\",\"flagged\":false,\"keywords\":[\"arrow\"]},{\"no\":1364,\"code\":\"U+21A9\",\"emoji\":\"↩\",\"description\":\"LEFTWARDS ARROW WITH HOOK≊ right arrow curving left\",\"flagged\":false,\"keywords\":[\"arrow\"]},{\"no\":1365,\"code\":\"U+21AA\",\"emoji\":\"↪\",\"description\":\"RIGHTWARDS ARROW WITH HOOK≊ left arrow curving right\",\"flagged\":false,\"keywords\":[\"arrow\"]},{\"no\":1366,\"code\":\"U+2934\",\"emoji\":\"⤴\",\"description\":\"ARROW POINTING RIGHTWARDS THEN CURVING UPWARDS≊ right arrow curving up\",\"flagged\":false,\"keywords\":[\"arrow\"]},{\"no\":1367,\"code\":\"U+2935\",\"emoji\":\"⤵\",\"description\":\"ARROW POINTING RIGHTWARDS THEN CURVING DOWNWARDS≊ right arrow curving down\",\"flagged\":false,\"keywords\":[\"arrow\",\"down\"]},{\"no\":1368,\"code\":\"U+1F503\",\"emoji\":\"🔃\",\"description\":\"CLOCKWISE DOWNWARDS AND UPWARDS OPEN CIRCLE ARROWS≊ clockwise vertical arrows\",\"flagged\":false,\"keywords\":[\"arrow\",\"clockwise\",\"reload\"]},{\"no\":1369,\"code\":\"U+1F504\",\"emoji\":\"🔄\",\"description\":\"ANTICLOCKWISE DOWNWARDS AND UPWARDS OPEN CIRCLE ARROWS≊ anticlockwise arrows button\",\"flagged\":false,\"keywords\":[\"anticlockwise\",\"arrow\",\"counterclockwise\",\"withershins\"]},{\"no\":1370,\"code\":\"U+1F519\",\"emoji\":\"🔙\",\"description\":\"BACK WITH LEFTWARDS ARROW ABOVE≊ back arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"back\"]},{\"no\":1371,\"code\":\"U+1F51A\",\"emoji\":\"🔚\",\"description\":\"END WITH LEFTWARDS ARROW ABOVE≊ end arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"end\"]},{\"no\":1372,\"code\":\"U+1F51B\",\"emoji\":\"🔛\",\"description\":\"ON WITH EXCLAMATION MARK WITH LEFT RIGHT ARROW ABOVE≊ on! arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"mark\",\"on\"]},{\"no\":1373,\"code\":\"U+1F51C\",\"emoji\":\"🔜\",\"description\":\"SOON WITH RIGHTWARDS ARROW ABOVE≊ soon arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"soon\"]},{\"no\":1374,\"code\":\"U+1F51D\",\"emoji\":\"🔝\",\"description\":\"TOP WITH UPWARDS ARROW ABOVE≊ top arrow\",\"flagged\":false,\"keywords\":[\"arrow\",\"top\",\"up\"]},{\"no\":1375,\"code\":\"U+1F6D0\",\"emoji\":\"🛐\",\"description\":\"PLACE OF WORSHIP\",\"flagged\":false,\"keywords\":[\"religion\",\"worship\"]},{\"no\":1376,\"code\":\"U+269B\",\"emoji\":\"⚛\",\"description\":\"ATOM SYMBOL\",\"flagged\":false,\"keywords\":[\"atheist\",\"atom\"]},{\"no\":1377,\"code\":\"U+1F549\",\"emoji\":\"🕉\",\"description\":\"OM SYMBOL≊ om\",\"flagged\":false,\"keywords\":[\"hindu\",\"om\",\"religion\"]},{\"no\":1378,\"code\":\"U+2721\",\"emoji\":\"✡\",\"description\":\"STAR OF DAVID\",\"flagged\":false,\"keywords\":[\"david\",\"jew\",\"jewish\",\"religion\",\"star\"]},{\"no\":1379,\"code\":\"U+2638\",\"emoji\":\"☸\",\"description\":\"WHEEL OF DHARMA\",\"flagged\":false,\"keywords\":[\"buddhist\",\"dharma\",\"religion\",\"wheel\"]},{\"no\":1380,\"code\":\"U+262F\",\"emoji\":\"☯\",\"description\":\"YIN YANG\",\"flagged\":false,\"keywords\":[\"religion\",\"tao\",\"taoist\",\"yang\",\"yin\"]},{\"no\":1381,\"code\":\"U+271D\",\"emoji\":\"✝\",\"description\":\"LATIN CROSS\",\"flagged\":false,\"keywords\":[\"christian\",\"cross\",\"religion\"]},{\"no\":1382,\"code\":\"U+2626\",\"emoji\":\"☦\",\"description\":\"ORTHODOX CROSS\",\"flagged\":false,\"keywords\":[\"christian\",\"cross\",\"religion\"]},{\"no\":1383,\"code\":\"U+262A\",\"emoji\":\"☪\",\"description\":\"STAR AND CRESCENT\",\"flagged\":false,\"keywords\":[\"islam\",\"muslim\",\"religion\"]},{\"no\":1384,\"code\":\"U+262E\",\"emoji\":\"☮\",\"description\":\"PEACE SYMBOL\",\"flagged\":false,\"keywords\":[\"peace\"]},{\"no\":1385,\"code\":\"U+1F54E\",\"emoji\":\"🕎\",\"description\":\"MENORAH WITH NINE BRANCHES≊ menorah\",\"flagged\":false,\"keywords\":[\"candelabrum\",\"candlestick\",\"menorah\",\"religion\"]},{\"no\":1386,\"code\":\"U+1F52F\",\"emoji\":\"🔯\",\"description\":\"SIX POINTED STAR WITH MIDDLE DOT≊ dotted six-pointed star\",\"flagged\":false,\"keywords\":[\"fortune\",\"star\"]},{\"no\":1387,\"code\":\"U+267B\",\"emoji\":\"♻\",\"description\":\"BLACK UNIVERSAL RECYCLING SYMBOL≊ recycling symbol\",\"flagged\":false,\"keywords\":[\"recycle\"]},{\"no\":1388,\"code\":\"U+1F4DB\",\"emoji\":\"📛\",\"description\":\"NAME BADGE\",\"flagged\":false,\"keywords\":[\"badge\",\"name\"]},{\"no\":1389,\"code\":\"U+269C\",\"emoji\":\"⚜\",\"description\":\"FLEUR-DE-LIS\",\"flagged\":false,\"keywords\":[\"fleur-de-lis\"]},{\"no\":1390,\"code\":\"U+1F530\",\"emoji\":\"🔰\",\"description\":\"JAPANESE SYMBOL FOR BEGINNER\",\"flagged\":false,\"keywords\":[\"beginner\",\"chevron\",\"green\",\"japanese\",\"leaf\",\"tool\",\"yellow\"]},{\"no\":1391,\"code\":\"U+1F531\",\"emoji\":\"🔱\",\"description\":\"TRIDENT EMBLEM\",\"flagged\":false,\"keywords\":[\"anchor\",\"emblem\",\"ship\",\"tool\",\"trident\"]},{\"no\":1392,\"code\":\"U+2B55\",\"emoji\":\"⭕\",\"description\":\"HEAVY LARGE CIRCLE\",\"flagged\":false,\"keywords\":[\"circle\",\"o\"]},{\"no\":1393,\"code\":\"U+2705\",\"emoji\":\"✅\",\"description\":\"WHITE HEAVY CHECK MARK\",\"flagged\":false,\"keywords\":[\"check\",\"mark\"]},{\"no\":1394,\"code\":\"U+2611\",\"emoji\":\"☑\",\"description\":\"BALLOT BOX WITH CHECK\",\"flagged\":false,\"keywords\":[\"ballot\",\"box\",\"check\"]},{\"no\":1395,\"code\":\"U+2714\",\"emoji\":\"✔\",\"description\":\"HEAVY CHECK MARK\",\"flagged\":false,\"keywords\":[\"check\",\"mark\"]},{\"no\":1396,\"code\":\"U+2716\",\"emoji\":\"✖\",\"description\":\"HEAVY MULTIPLICATION X\",\"flagged\":false,\"keywords\":[\"cancel\",\"multiplication\",\"multiply\",\"x\"]},{\"no\":1397,\"code\":\"U+274C\",\"emoji\":\"❌\",\"description\":\"CROSS MARK\",\"flagged\":false,\"keywords\":[\"cancel\",\"mark\",\"multiplication\",\"multiply\",\"x\"]},{\"no\":1398,\"code\":\"U+274E\",\"emoji\":\"❎\",\"description\":\"NEGATIVE SQUARED CROSS MARK≊ cross mark button\",\"flagged\":false,\"keywords\":[\"mark\",\"square\"]},{\"no\":1399,\"code\":\"U+2795\",\"emoji\":\"➕\",\"description\":\"HEAVY PLUS SIGN\",\"flagged\":false,\"keywords\":[\"math\",\"plus\"]},{\"no\":1400,\"code\":\"U+2796\",\"emoji\":\"➖\",\"description\":\"HEAVY MINUS SIGN\",\"flagged\":false,\"keywords\":[\"math\",\"minus\"]},{\"no\":1401,\"code\":\"U+2797\",\"emoji\":\"➗\",\"description\":\"HEAVY DIVISION SIGN\",\"flagged\":false,\"keywords\":[\"division\",\"math\"]},{\"no\":1402,\"code\":\"U+27B0\",\"emoji\":\"➰\",\"description\":\"CURLY LOOP\",\"flagged\":false,\"keywords\":[\"curl\",\"loop\"]},{\"no\":1403,\"code\":\"U+27BF\",\"emoji\":\"➿\",\"description\":\"DOUBLE CURLY LOOP\",\"flagged\":false,\"keywords\":[\"curl\",\"double\",\"loop\"]},{\"no\":1404,\"code\":\"U+303D\",\"emoji\":\"〽\",\"description\":\"PART ALTERNATION MARK\",\"flagged\":false,\"keywords\":[\"mark\",\"part\"]},{\"no\":1405,\"code\":\"U+2733\",\"emoji\":\"✳\",\"description\":\"EIGHT SPOKED ASTERISK≊ eight-spoked asterisk\",\"flagged\":false,\"keywords\":[\"asterisk\"]},{\"no\":1406,\"code\":\"U+2734\",\"emoji\":\"✴\",\"description\":\"EIGHT POINTED BLACK STAR≊ eight-pointed star\",\"flagged\":false,\"keywords\":[\"star\"]},{\"no\":1407,\"code\":\"U+2747\",\"emoji\":\"❇\",\"description\":\"SPARKLE\",\"flagged\":false,\"keywords\":[\"sparkle\"]},{\"no\":1408,\"code\":\"U+203C\",\"emoji\":\"‼\",\"description\":\"DOUBLE EXCLAMATION MARK\",\"flagged\":false,\"keywords\":[\"bangbang\",\"exclamation\",\"mark\",\"punctuation\"]},{\"no\":1409,\"code\":\"U+2049\",\"emoji\":\"⁉\",\"description\":\"EXCLAMATION QUESTION MARK\",\"flagged\":false,\"keywords\":[\"exclamation\",\"interrobang\",\"mark\",\"punctuation\",\"question\"]},{\"no\":1410,\"code\":\"U+2753\",\"emoji\":\"❓\",\"description\":\"BLACK QUESTION MARK ORNAMENT≊ question mark\",\"flagged\":false,\"keywords\":[\"mark\",\"punctuation\",\"question\"]},{\"no\":1411,\"code\":\"U+2754\",\"emoji\":\"❔\",\"description\":\"WHITE QUESTION MARK ORNAMENT≊ white question mark\",\"flagged\":false,\"keywords\":[\"mark\",\"outlined\",\"punctuation\",\"question\"]},{\"no\":1412,\"code\":\"U+2755\",\"emoji\":\"❕\",\"description\":\"WHITE EXCLAMATION MARK ORNAMENT≊ white exclamation mark\",\"flagged\":false,\"keywords\":[\"exclamation\",\"mark\",\"outlined\",\"punctuation\"]},{\"no\":1413,\"code\":\"U+2757\",\"emoji\":\"❗\",\"description\":\"HEAVY EXCLAMATION MARK SYMBOL≊ exclamation mark\",\"flagged\":false,\"keywords\":[\"exclamation\",\"mark\",\"punctuation\"]},{\"no\":1414,\"code\":\"U+3030\",\"emoji\":\"〰\",\"description\":\"WAVY DASH\",\"flagged\":false,\"keywords\":[\"dash\",\"punctuation\",\"wavy\"]},{\"no\":1415,\"code\":\"U+00A9\",\"emoji\":\"©\",\"description\":\"COPYRIGHT SIGN≊ copyright\",\"flagged\":false,\"keywords\":[\"copyright\"]},{\"no\":1416,\"code\":\"U+00AE\",\"emoji\":\"®\",\"description\":\"REGISTERED SIGN≊ registered\",\"flagged\":false,\"keywords\":[\"registered\"]},{\"no\":1417,\"code\":\"U+2122\",\"emoji\":\"™\",\"description\":\"TRADE MARK SIGN≊ trade mark\",\"flagged\":false,\"keywords\":[\"mark\",\"tm\",\"trademark\"]},{\"no\":1418,\"code\":\"U+2648\",\"emoji\":\"♈\",\"description\":\"ARIES\",\"flagged\":false,\"keywords\":[\"aries\",\"ram\",\"zodiac\"]},{\"no\":1419,\"code\":\"U+2649\",\"emoji\":\"♉\",\"description\":\"TAURUS\",\"flagged\":false,\"keywords\":[\"bull\",\"ox\",\"taurus\",\"zodiac\"]},{\"no\":1420,\"code\":\"U+264A\",\"emoji\":\"♊\",\"description\":\"GEMINI\",\"flagged\":false,\"keywords\":[\"gemini\",\"twins\",\"zodiac\"]},{\"no\":1421,\"code\":\"U+264B\",\"emoji\":\"♋\",\"description\":\"CANCER\",\"flagged\":false,\"keywords\":[\"cancer\",\"crab\",\"zodiac\"]},{\"no\":1422,\"code\":\"U+264C\",\"emoji\":\"♌\",\"description\":\"LEO\",\"flagged\":false,\"keywords\":[\"leo\",\"lion\",\"zodiac\"]},{\"no\":1423,\"code\":\"U+264D\",\"emoji\":\"♍\",\"description\":\"VIRGO\",\"flagged\":false,\"keywords\":[\"maiden\",\"virgin\",\"virgo\",\"zodiac\"]},{\"no\":1424,\"code\":\"U+264E\",\"emoji\":\"♎\",\"description\":\"LIBRA\",\"flagged\":false,\"keywords\":[\"balance\",\"justice\",\"libra\",\"scales\",\"zodiac\"]},{\"no\":1425,\"code\":\"U+264F\",\"emoji\":\"♏\",\"description\":\"SCORPIUS\",\"flagged\":false,\"keywords\":[\"scorpio\",\"scorpion\",\"scorpius\",\"zodiac\"]},{\"no\":1426,\"code\":\"U+2650\",\"emoji\":\"♐\",\"description\":\"SAGITTARIUS\",\"flagged\":false,\"keywords\":[\"archer\",\"sagittarius\",\"zodiac\"]},{\"no\":1427,\"code\":\"U+2651\",\"emoji\":\"♑\",\"description\":\"CAPRICORN\",\"flagged\":false,\"keywords\":[\"capricorn\",\"goat\",\"zodiac\"]},{\"no\":1428,\"code\":\"U+2652\",\"emoji\":\"♒\",\"description\":\"AQUARIUS\",\"flagged\":false,\"keywords\":[\"aquarius\",\"bearer\",\"water\",\"zodiac\"]},{\"no\":1429,\"code\":\"U+2653\",\"emoji\":\"♓\",\"description\":\"PISCES\",\"flagged\":false,\"keywords\":[\"fish\",\"pisces\",\"zodiac\"]},{\"no\":1430,\"code\":\"U+26CE\",\"emoji\":\"⛎\",\"description\":\"OPHIUCHUS\",\"flagged\":false,\"keywords\":[\"bearer\",\"ophiuchus\",\"serpent\",\"snake\",\"zodiac\"]},{\"no\":1431,\"code\":\"U+1F500\",\"emoji\":\"🔀\",\"description\":\"TWISTED RIGHTWARDS ARROWS≊ shuffle tracks button\",\"flagged\":false,\"keywords\":[\"arrow\",\"crossed\"]},{\"no\":1432,\"code\":\"U+1F501\",\"emoji\":\"🔁\",\"description\":\"CLOCKWISE RIGHTWARDS AND LEFTWARDS OPEN CIRCLE ARROWS≊ repeat button\",\"flagged\":false,\"keywords\":[\"arrow\",\"clockwise\",\"repeat\"]},{\"no\":1433,\"code\":\"U+1F502\",\"emoji\":\"🔂\",\"description\":\"CLOCKWISE RIGHTWARDS AND LEFTWARDS OPEN CIRCLE ARROWS WITH CIRCLED ONE OVERLAY≊ repeat single button\",\"flagged\":false,\"keywords\":[\"arrow\",\"clockwise\",\"once\"]},{\"no\":1434,\"code\":\"U+25B6\",\"emoji\":\"▶\",\"description\":\"BLACK RIGHT-POINTING TRIANGLE≊ play button\",\"flagged\":false,\"keywords\":[\"arrow\",\"play\",\"right\",\"triangle\"]},{\"no\":1435,\"code\":\"U+23E9\",\"emoji\":\"⏩\",\"description\":\"BLACK RIGHT-POINTING DOUBLE TRIANGLE≊ fast-forword button\",\"flagged\":false,\"keywords\":[\"arrow\",\"double\",\"fast\",\"forward\"]},{\"no\":1436,\"code\":\"U+23ED\",\"emoji\":\"⏭\",\"description\":\"BLACK RIGHT-POINTING DOUBLE TRIANGLE WITH VERTICAL BAR≊ next track button\",\"flagged\":false,\"keywords\":[\"arrow\",\"next scene\",\"next track\",\"triangle\"]},{\"no\":1437,\"code\":\"U+23EF\",\"emoji\":\"⏯\",\"description\":\"BLACK RIGHT-POINTING TRIANGLE WITH DOUBLE VERTICAL BAR≊ play or pause button\",\"flagged\":false,\"keywords\":[\"arrow\",\"pause\",\"play\",\"right\",\"triangle\"]},{\"no\":1438,\"code\":\"U+25C0\",\"emoji\":\"◀\",\"description\":\"BLACK LEFT-POINTING TRIANGLE≊ reverse button\",\"flagged\":false,\"keywords\":[\"arrow\",\"left\",\"reverse\",\"triangle\"]},{\"no\":1439,\"code\":\"U+23EA\",\"emoji\":\"⏪\",\"description\":\"BLACK LEFT-POINTING DOUBLE TRIANGLE≊ fast reverse button\",\"flagged\":false,\"keywords\":[\"arrow\",\"double\",\"rewind\"]},{\"no\":1440,\"code\":\"U+23EE\",\"emoji\":\"⏮\",\"description\":\"BLACK LEFT-POINTING DOUBLE TRIANGLE WITH VERTICAL BAR≊ last track button\",\"flagged\":false,\"keywords\":[\"arrow\",\"previous scene\",\"previous track\",\"triangle\"]},{\"no\":1441,\"code\":\"U+1F53C\",\"emoji\":\"🔼\",\"description\":\"UP-POINTING SMALL RED TRIANGLE≊ up button\",\"flagged\":false,\"keywords\":[\"arrow\",\"button\",\"red\"]},{\"no\":1442,\"code\":\"U+23EB\",\"emoji\":\"⏫\",\"description\":\"BLACK UP-POINTING DOUBLE TRIANGLE≊ fast up button\",\"flagged\":false,\"keywords\":[\"arrow\",\"double\"]},{\"no\":1443,\"code\":\"U+1F53D\",\"emoji\":\"🔽\",\"description\":\"DOWN-POINTING SMALL RED TRIANGLE≊ down button\",\"flagged\":false,\"keywords\":[\"arrow\",\"button\",\"down\",\"red\"]},{\"no\":1444,\"code\":\"U+23EC\",\"emoji\":\"⏬\",\"description\":\"BLACK DOWN-POINTING DOUBLE TRIANGLE≊ fast down button\",\"flagged\":false,\"keywords\":[\"arrow\",\"double\",\"down\"]},{\"no\":1445,\"code\":\"U+23F8\",\"emoji\":\"⏸\",\"description\":\"DOUBLE VERTICAL BAR≊ pause button\",\"flagged\":false,\"keywords\":[\"bar\",\"double\",\"pause\",\"vertical\"]},{\"no\":1446,\"code\":\"U+23F9\",\"emoji\":\"⏹\",\"description\":\"BLACK SQUARE FOR STOP≊ stop button\",\"flagged\":false,\"keywords\":[\"square\",\"stop\"]},{\"no\":1447,\"code\":\"U+23FA\",\"emoji\":\"⏺\",\"description\":\"BLACK CIRCLE FOR RECORD≊ record button\",\"flagged\":false,\"keywords\":[\"circle\",\"record\"]},{\"no\":1448,\"code\":\"U+23CF\",\"emoji\":\"⏏\",\"description\":\"EJECT SYMBOL≊ eject button\",\"flagged\":true,\"keywords\":[\"eject\"]},{\"no\":1449,\"code\":\"U+1F3A6\",\"emoji\":\"🎦\",\"description\":\"CINEMA\",\"flagged\":false,\"keywords\":[\"activity\",\"camera\",\"cinema\",\"entertainment\",\"film\",\"movie\"]},{\"no\":1450,\"code\":\"U+1F505\",\"emoji\":\"🔅\",\"description\":\"LOW BRIGHTNESS SYMBOL≊ dim button\",\"flagged\":false,\"keywords\":[\"brightness\",\"dim\",\"low\"]},{\"no\":1451,\"code\":\"U+1F506\",\"emoji\":\"🔆\",\"description\":\"HIGH BRIGHTNESS SYMBOL≊ bright button\",\"flagged\":false,\"keywords\":[\"bright\",\"brightness\"]},{\"no\":1452,\"code\":\"U+1F4F6\",\"emoji\":\"📶\",\"description\":\"ANTENNA WITH BARS≊ antenna bars\",\"flagged\":false,\"keywords\":[\"antenna\",\"bar\",\"cell\",\"communication\",\"mobile\",\"phone\",\"signal\",\"telephone\"]},{\"no\":1453,\"code\":\"U+1F4F3\",\"emoji\":\"📳\",\"description\":\"VIBRATION MODE\",\"flagged\":false,\"keywords\":[\"cell\",\"communication\",\"mobile\",\"mode\",\"phone\",\"telephone\",\"vibration\"]},{\"no\":1454,\"code\":\"U+1F4F4\",\"emoji\":\"📴\",\"description\":\"MOBILE PHONE OFF\",\"flagged\":false,\"keywords\":[\"cell\",\"communication\",\"mobile\",\"off\",\"phone\",\"telephone\"]},{\"no\":1455,\"code\":\"U+0023 U+FE0F U+20E3\",\"emoji\":\"#️⃣\",\"description\":\"Keycap NUMBER SIGN\",\"flagged\":false,\"keywords\":[\"hash\",\"keycap\",\"pound\"]},{\"no\":1456,\"code\":\"U+002A U+FE0F U+20E3\",\"emoji\":\"*️⃣\",\"description\":\"Keycap ASTERISK\",\"flagged\":false,\"keywords\":[\"asterisk\",\"keycap\",\"star\"]},{\"no\":1457,\"code\":\"U+0030 U+FE0F U+20E3\",\"emoji\":\"0️⃣\",\"description\":\"Keycap DIGIT ZERO\",\"flagged\":false,\"keywords\":[\"0\",\"keycap\",\"zero\"]},{\"no\":1458,\"code\":\"U+0031 U+FE0F U+20E3\",\"emoji\":\"1️⃣\",\"description\":\"Keycap DIGIT ONE\",\"flagged\":false,\"keywords\":[\"1\",\"keycap\",\"one\"]},{\"no\":1459,\"code\":\"U+0032 U+FE0F U+20E3\",\"emoji\":\"2️⃣\",\"description\":\"Keycap DIGIT TWO\",\"flagged\":false,\"keywords\":[\"2\",\"keycap\",\"two\"]},{\"no\":1460,\"code\":\"U+0033 U+FE0F U+20E3\",\"emoji\":\"3️⃣\",\"description\":\"Keycap DIGIT THREE\",\"flagged\":false,\"keywords\":[\"3\",\"keycap\",\"three\"]},{\"no\":1461,\"code\":\"U+0034 U+FE0F U+20E3\",\"emoji\":\"4️⃣\",\"description\":\"Keycap DIGIT FOUR\",\"flagged\":false,\"keywords\":[\"4\",\"four\",\"keycap\"]},{\"no\":1462,\"code\":\"U+0035 U+FE0F U+20E3\",\"emoji\":\"5️⃣\",\"description\":\"Keycap DIGIT FIVE\",\"flagged\":false,\"keywords\":[\"5\",\"five\",\"keycap\"]},{\"no\":1463,\"code\":\"U+0036 U+FE0F U+20E3\",\"emoji\":\"6️⃣\",\"description\":\"Keycap DIGIT SIX\",\"flagged\":false,\"keywords\":[\"6\",\"keycap\",\"six\"]},{\"no\":1464,\"code\":\"U+0037 U+FE0F U+20E3\",\"emoji\":\"7️⃣\",\"description\":\"Keycap DIGIT SEVEN\",\"flagged\":false,\"keywords\":[\"7\",\"keycap\",\"seven\"]},{\"no\":1465,\"code\":\"U+0038 U+FE0F U+20E3\",\"emoji\":\"8️⃣\",\"description\":\"Keycap DIGIT EIGHT\",\"flagged\":false,\"keywords\":[\"8\",\"eight\",\"keycap\"]},{\"no\":1466,\"code\":\"U+0039 U+FE0F U+20E3\",\"emoji\":\"9️⃣\",\"description\":\"Keycap DIGIT NINE\",\"flagged\":false,\"keywords\":[\"9\",\"keycap\",\"nine\"]},{\"no\":1467,\"code\":\"U+1F51F\",\"emoji\":\"🔟\",\"description\":\"KEYCAP TEN\",\"flagged\":false,\"keywords\":[\"10\",\"keycap\",\"ten\"]},{\"no\":1468,\"code\":\"U+1F4AF\",\"emoji\":\"💯\",\"description\":\"HUNDRED POINTS SYMBOL≊ hundred points\",\"flagged\":false,\"keywords\":[\"100\",\"full\",\"hundred\",\"score\"]},{\"no\":1469,\"code\":\"U+1F520\",\"emoji\":\"🔠\",\"description\":\"INPUT SYMBOL FOR LATIN CAPITAL LETTERS≊ input latin uppercase\",\"flagged\":false,\"keywords\":[\"input\",\"latin\",\"letters\",\"uppercase\"]},{\"no\":1470,\"code\":\"U+1F521\",\"emoji\":\"🔡\",\"description\":\"INPUT SYMBOL FOR LATIN SMALL LETTERS≊ input latin lowercase\",\"flagged\":false,\"keywords\":[\"abcd\",\"input\",\"latin\",\"letters\",\"lowercase\"]},{\"no\":1471,\"code\":\"U+1F522\",\"emoji\":\"🔢\",\"description\":\"INPUT SYMBOL FOR NUMBERS≊ input numbers\",\"flagged\":false,\"keywords\":[\"1234\",\"input\",\"numbers\"]},{\"no\":1472,\"code\":\"U+1F523\",\"emoji\":\"🔣\",\"description\":\"INPUT SYMBOL FOR SYMBOLS≊ input symbols\",\"flagged\":false,\"keywords\":[\"input\"]},{\"no\":1473,\"code\":\"U+1F524\",\"emoji\":\"🔤\",\"description\":\"INPUT SYMBOL FOR LATIN LETTERS≊ input latin letters\",\"flagged\":false,\"keywords\":[\"abc\",\"alphabet\",\"input\",\"latin\",\"letters\"]},{\"no\":1474,\"code\":\"U+1F170\",\"emoji\":\"🅰\",\"description\":\"NEGATIVE SQUARED LATIN CAPITAL LETTER A≊ a button\",\"flagged\":false,\"keywords\":[\"a\",\"blood\"]},{\"no\":1475,\"code\":\"U+1F18E\",\"emoji\":\"🆎\",\"description\":\"NEGATIVE SQUARED AB≊ ab button\",\"flagged\":false,\"keywords\":[\"ab\",\"blood\"]},{\"no\":1476,\"code\":\"U+1F171\",\"emoji\":\"🅱\",\"description\":\"NEGATIVE SQUARED LATIN CAPITAL LETTER B≊ b button\",\"flagged\":false,\"keywords\":[\"b\",\"blood\"]},{\"no\":1477,\"code\":\"U+1F191\",\"emoji\":\"🆑\",\"description\":\"SQUARED CL\",\"flagged\":false,\"keywords\":[\"cl\"]},{\"no\":1478,\"code\":\"U+1F192\",\"emoji\":\"🆒\",\"description\":\"SQUARED COOL\",\"flagged\":false,\"keywords\":[\"cool\"]},{\"no\":1479,\"code\":\"U+1F193\",\"emoji\":\"🆓\",\"description\":\"SQUARED FREE\",\"flagged\":false,\"keywords\":[\"free\"]},{\"no\":1480,\"code\":\"U+2139\",\"emoji\":\"ℹ\",\"description\":\"INFORMATION SOURCE\",\"flagged\":false,\"keywords\":[\"i\",\"information\"]},{\"no\":1481,\"code\":\"U+1F194\",\"emoji\":\"🆔\",\"description\":\"SQUARED ID\",\"flagged\":false,\"keywords\":[\"id\",\"identity\"]},{\"no\":1482,\"code\":\"U+24C2\",\"emoji\":\"Ⓜ\",\"description\":\"CIRCLED LATIN CAPITAL LETTER M≊ circled letter m\",\"flagged\":false,\"keywords\":[\"circle\",\"m\"]},{\"no\":1483,\"code\":\"U+1F195\",\"emoji\":\"🆕\",\"description\":\"SQUARED NEW\",\"flagged\":false,\"keywords\":[\"new\"]},{\"no\":1484,\"code\":\"U+1F196\",\"emoji\":\"🆖\",\"description\":\"SQUARED NG\",\"flagged\":false,\"keywords\":[\"ng\"]},{\"no\":1485,\"code\":\"U+1F17E\",\"emoji\":\"🅾\",\"description\":\"NEGATIVE SQUARED LATIN CAPITAL LETTER O≊ o button\",\"flagged\":false,\"keywords\":[\"blood\",\"o\"]},{\"no\":1486,\"code\":\"U+1F197\",\"emoji\":\"🆗\",\"description\":\"SQUARED OK\",\"flagged\":false,\"keywords\":[\"ok\"]},{\"no\":1487,\"code\":\"U+1F17F\",\"emoji\":\"🅿\",\"description\":\"NEGATIVE SQUARED LATIN CAPITAL LETTER P≊ p button\",\"flagged\":false,\"keywords\":[\"parking\"]},{\"no\":1488,\"code\":\"U+1F198\",\"emoji\":\"🆘\",\"description\":\"SQUARED SOS\",\"flagged\":false,\"keywords\":[\"help\",\"sos\"]},{\"no\":1489,\"code\":\"U+1F199\",\"emoji\":\"🆙\",\"description\":\"SQUARED UP WITH EXCLAMATION MARK≊ up! button\",\"flagged\":false,\"keywords\":[\"mark\",\"up\"]},{\"no\":1490,\"code\":\"U+1F19A\",\"emoji\":\"🆚\",\"description\":\"SQUARED VS\",\"flagged\":false,\"keywords\":[\"versus\",\"vs\"]},{\"no\":1491,\"code\":\"U+1F201\",\"emoji\":\"🈁\",\"description\":\"SQUARED KATAKANA KOKO\",\"flagged\":false,\"keywords\":[\"japanese\"]},{\"no\":1492,\"code\":\"U+1F202\",\"emoji\":\"🈂\",\"description\":\"SQUARED KATAKANA SA\",\"flagged\":false,\"keywords\":[\"japanese\"]},{\"no\":1493,\"code\":\"U+1F237\",\"emoji\":\"🈷\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-6708≊ squared moon ideograph\",\"flagged\":false,\"keywords\":[\"japanese\"]},{\"no\":1494,\"code\":\"U+1F236\",\"emoji\":\"🈶\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-6709≊ squared exist ideograph\",\"flagged\":false,\"keywords\":[\"japanese\"]},{\"no\":1495,\"code\":\"U+1F22F\",\"emoji\":\"🈯\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-6307≊ squared finger ideograph\",\"flagged\":false,\"keywords\":[\"japanese\"]},{\"no\":1496,\"code\":\"U+1F250\",\"emoji\":\"🉐\",\"description\":\"CIRCLED IDEOGRAPH ADVANTAGE≊ circled advantage ideograph\",\"flagged\":false,\"keywords\":[\"japanese\"]},{\"no\":1497,\"code\":\"U+1F239\",\"emoji\":\"🈹\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-5272≊ squared divide ideograph\",\"flagged\":false,\"keywords\":[\"japanese\"]},{\"no\":1498,\"code\":\"U+1F21A\",\"emoji\":\"🈚\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-7121≊ squared negation ideograph\",\"flagged\":false,\"keywords\":[\"japanese\"]},{\"no\":1499,\"code\":\"U+1F232\",\"emoji\":\"🈲\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-7981≊ squared prohibit ideograph\",\"flagged\":false,\"keywords\":[\"japanese\"]},{\"no\":1500,\"code\":\"U+1F251\",\"emoji\":\"🉑\",\"description\":\"CIRCLED IDEOGRAPH ACCEPT≊ circled accept ideograph\",\"flagged\":false,\"keywords\":[\"chinese\"]},{\"no\":1501,\"code\":\"U+1F238\",\"emoji\":\"🈸\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-7533≊ squared apply ideograph\",\"flagged\":false,\"keywords\":[\"chinese\"]},{\"no\":1502,\"code\":\"U+1F234\",\"emoji\":\"🈴\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-5408≊ squared together ideograph\",\"flagged\":false,\"keywords\":[\"chinese\"]},{\"no\":1503,\"code\":\"U+1F233\",\"emoji\":\"🈳\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-7A7A≊ squared empty ideograph\",\"flagged\":false,\"keywords\":[\"chinese\"]},{\"no\":1504,\"code\":\"U+3297\",\"emoji\":\"㊗\",\"description\":\"CIRCLED IDEOGRAPH CONGRATULATION≊ circled congratulate ideograph\",\"flagged\":false,\"keywords\":[\"chinese\",\"congratulation\",\"congratulations\",\"ideograph\"]},{\"no\":1505,\"code\":\"U+3299\",\"emoji\":\"㊙\",\"description\":\"CIRCLED IDEOGRAPH SECRET≊ circled secret ideograph\",\"flagged\":false,\"keywords\":[\"chinese\",\"ideograph\",\"secret\"]},{\"no\":1506,\"code\":\"U+1F23A\",\"emoji\":\"🈺\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-55B6≊ squared operating ideograph\",\"flagged\":false,\"keywords\":[\"chinese\"]},{\"no\":1507,\"code\":\"U+1F235\",\"emoji\":\"🈵\",\"description\":\"SQUARED CJK UNIFIED IDEOGRAPH-6E80≊ squared fullness ideograph\",\"flagged\":false,\"keywords\":[\"chinese\"]},{\"no\":1508,\"code\":\"U+25AA\",\"emoji\":\"▪\",\"description\":\"BLACK SMALL SQUARE\",\"flagged\":false,\"keywords\":[\"geometric\",\"square\"]},{\"no\":1509,\"code\":\"U+25AB\",\"emoji\":\"▫\",\"description\":\"WHITE SMALL SQUARE\",\"flagged\":false,\"keywords\":[\"geometric\",\"square\"]},{\"no\":1510,\"code\":\"U+25FB\",\"emoji\":\"◻\",\"description\":\"WHITE MEDIUM SQUARE\",\"flagged\":false,\"keywords\":[\"geometric\",\"square\"]},{\"no\":1511,\"code\":\"U+25FC\",\"emoji\":\"◼\",\"description\":\"BLACK MEDIUM SQUARE\",\"flagged\":false,\"keywords\":[\"geometric\",\"square\"]},{\"no\":1512,\"code\":\"U+25FD\",\"emoji\":\"◽\",\"description\":\"WHITE MEDIUM SMALL SQUARE≊ white medium-small square\",\"flagged\":false,\"keywords\":[\"geometric\",\"square\"]},{\"no\":1513,\"code\":\"U+25FE\",\"emoji\":\"◾\",\"description\":\"BLACK MEDIUM SMALL SQUARE≊ black medium-small square\",\"flagged\":false,\"keywords\":[\"geometric\",\"square\"]},{\"no\":1514,\"code\":\"U+2B1B\",\"emoji\":\"⬛\",\"description\":\"BLACK LARGE SQUARE\",\"flagged\":false,\"keywords\":[\"geometric\",\"square\"]},{\"no\":1515,\"code\":\"U+2B1C\",\"emoji\":\"⬜\",\"description\":\"WHITE LARGE SQUARE\",\"flagged\":false,\"keywords\":[\"geometric\",\"square\"]},{\"no\":1516,\"code\":\"U+1F536\",\"emoji\":\"🔶\",\"description\":\"LARGE ORANGE DIAMOND\",\"flagged\":false,\"keywords\":[\"diamond\",\"geometric\",\"orange\"]},{\"no\":1517,\"code\":\"U+1F537\",\"emoji\":\"🔷\",\"description\":\"LARGE BLUE DIAMOND\",\"flagged\":false,\"keywords\":[\"blue\",\"diamond\",\"geometric\"]},{\"no\":1518,\"code\":\"U+1F538\",\"emoji\":\"🔸\",\"description\":\"SMALL ORANGE DIAMOND\",\"flagged\":false,\"keywords\":[\"diamond\",\"geometric\",\"orange\"]},{\"no\":1519,\"code\":\"U+1F539\",\"emoji\":\"🔹\",\"description\":\"SMALL BLUE DIAMOND\",\"flagged\":false,\"keywords\":[\"blue\",\"diamond\",\"geometric\"]},{\"no\":1520,\"code\":\"U+1F53A\",\"emoji\":\"🔺\",\"description\":\"UP-POINTING RED TRIANGLE≊ red triangle pointed up\",\"flagged\":false,\"keywords\":[\"geometric\",\"red\"]},{\"no\":1521,\"code\":\"U+1F53B\",\"emoji\":\"🔻\",\"description\":\"DOWN-POINTING RED TRIANGLE≊ red triangle pointed down\",\"flagged\":false,\"keywords\":[\"down\",\"geometric\",\"red\"]},{\"no\":1522,\"code\":\"U+1F4A0\",\"emoji\":\"💠\",\"description\":\"DIAMOND SHAPE WITH A DOT INSIDE≊ diamond with a dot\",\"flagged\":false,\"keywords\":[\"comic\",\"diamond\",\"geometric\",\"inside\"]},{\"no\":1523,\"code\":\"U+1F518\",\"emoji\":\"🔘\",\"description\":\"RADIO BUTTON\",\"flagged\":false,\"keywords\":[\"button\",\"geometric\",\"radio\"]},{\"no\":1524,\"code\":\"U+1F532\",\"emoji\":\"🔲\",\"description\":\"BLACK SQUARE BUTTON\",\"flagged\":false,\"keywords\":[\"button\",\"geometric\",\"square\"]},{\"no\":1525,\"code\":\"U+1F533\",\"emoji\":\"🔳\",\"description\":\"WHITE SQUARE BUTTON\",\"flagged\":false,\"keywords\":[\"button\",\"geometric\",\"outlined\",\"square\"]},{\"no\":1526,\"code\":\"U+26AA\",\"emoji\":\"⚪\",\"description\":\"MEDIUM WHITE CIRCLE≊ white circle\",\"flagged\":false,\"keywords\":[\"circle\",\"geometric\"]},{\"no\":1527,\"code\":\"U+26AB\",\"emoji\":\"⚫\",\"description\":\"MEDIUM BLACK CIRCLE≊ black circle\",\"flagged\":false,\"keywords\":[\"circle\",\"geometric\"]},{\"no\":1528,\"code\":\"U+1F534\",\"emoji\":\"🔴\",\"description\":\"LARGE RED CIRCLE≊ red circle\",\"flagged\":false,\"keywords\":[\"circle\",\"geometric\",\"red\"]},{\"no\":1529,\"code\":\"U+1F535\",\"emoji\":\"🔵\",\"description\":\"LARGE BLUE CIRCLE≊ blue circle\",\"flagged\":false,\"keywords\":[\"blue\",\"circle\",\"geometric\"]}],\"Flags\":[{\"no\":1530,\"code\":\"U+1F3C1\",\"emoji\":\"🏁\",\"description\":\"CHEQUERED FLAG\",\"flagged\":false,\"keywords\":[\"checkered\",\"chequered\",\"flag\",\"racing\"]},{\"no\":1531,\"code\":\"U+1F6A9\",\"emoji\":\"🚩\",\"description\":\"TRIANGULAR FLAG ON POST≊ triangular flag\",\"flagged\":false,\"keywords\":[\"flag\",\"post\"]},{\"no\":1532,\"code\":\"U+1F38C\",\"emoji\":\"🎌\",\"description\":\"CROSSED FLAGS\",\"flagged\":false,\"keywords\":[\"activity\",\"celebration\",\"cross\",\"crossed\",\"flag\",\"japanese\"]},{\"no\":1533,\"code\":\"U+1F3F4\",\"emoji\":\"🏴\",\"description\":\"WAVING BLACK FLAG\",\"flagged\":false,\"keywords\":[\"flag\",\"waving\"]},{\"no\":1534,\"code\":\"U+1F3F3\",\"emoji\":\"🏳\",\"description\":\"WAVING WHITE FLAG\",\"flagged\":false,\"keywords\":[\"flag\",\"waving\"]},{\"no\":1535,\"code\":\"U+1F1E6 U+1F1E8\",\"emoji\":\"🇦🇨\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER C\",\"flagged\":false,\"keywords\":[\"ascension\",\"flag\",\"island\"]},{\"no\":1536,\"code\":\"U+1F1E6 U+1F1E9\",\"emoji\":\"🇦🇩\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER D\",\"flagged\":false,\"keywords\":[\"andorra\",\"flag\"]},{\"no\":1537,\"code\":\"U+1F1E6 U+1F1EA\",\"emoji\":\"🇦🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"emirates\",\"flag\",\"uae\",\"united\"]},{\"no\":1538,\"code\":\"U+1F1E6 U+1F1EB\",\"emoji\":\"🇦🇫\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER F\",\"flagged\":false,\"keywords\":[\"afghanistan\",\"flag\"]},{\"no\":1539,\"code\":\"U+1F1E6 U+1F1EC\",\"emoji\":\"🇦🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"antigua\",\"barbuda\",\"flag\"]},{\"no\":1540,\"code\":\"U+1F1E6 U+1F1EE\",\"emoji\":\"🇦🇮\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER I\",\"flagged\":false,\"keywords\":[\"anguilla\",\"flag\"]},{\"no\":1541,\"code\":\"U+1F1E6 U+1F1F1\",\"emoji\":\"🇦🇱\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER L\",\"flagged\":false,\"keywords\":[\"albania\",\"flag\"]},{\"no\":1542,\"code\":\"U+1F1E6 U+1F1F2\",\"emoji\":\"🇦🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"armenia\",\"flag\"]},{\"no\":1543,\"code\":\"U+1F1E6 U+1F1F4\",\"emoji\":\"🇦🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"angola\",\"flag\"]},{\"no\":1544,\"code\":\"U+1F1E6 U+1F1F6\",\"emoji\":\"🇦🇶\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER Q\",\"flagged\":false,\"keywords\":[\"antarctica\",\"flag\"]},{\"no\":1545,\"code\":\"U+1F1E6 U+1F1F7\",\"emoji\":\"🇦🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"argentina\",\"flag\"]},{\"no\":1546,\"code\":\"U+1F1E6 U+1F1F8\",\"emoji\":\"🇦🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"american\",\"flag\",\"samoa\"]},{\"no\":1547,\"code\":\"U+1F1E6 U+1F1F9\",\"emoji\":\"🇦🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"austria\",\"flag\"]},{\"no\":1548,\"code\":\"U+1F1E6 U+1F1FA\",\"emoji\":\"🇦🇺\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER U\",\"flagged\":false,\"keywords\":[\"australia\",\"flag\"]},{\"no\":1549,\"code\":\"U+1F1E6 U+1F1FC\",\"emoji\":\"🇦🇼\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER W\",\"flagged\":false,\"keywords\":[\"aruba\",\"flag\"]},{\"no\":1550,\"code\":\"U+1F1E6 U+1F1FD\",\"emoji\":\"🇦🇽\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER X\",\"flagged\":false,\"keywords\":[\"åland\",\"flag\"]},{\"no\":1551,\"code\":\"U+1F1E6 U+1F1FF\",\"emoji\":\"🇦🇿\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER A, REGIONAL INDICATOR SYMBOL LETTER Z\",\"flagged\":false,\"keywords\":[\"azerbaijan\",\"flag\"]},{\"no\":1552,\"code\":\"U+1F1E7 U+1F1E6\",\"emoji\":\"🇧🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"bosnia\",\"flag\",\"herzegovina\"]},{\"no\":1553,\"code\":\"U+1F1E7 U+1F1E7\",\"emoji\":\"🇧🇧\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER B\",\"flagged\":false,\"keywords\":[\"barbados\",\"flag\"]},{\"no\":1554,\"code\":\"U+1F1E7 U+1F1E9\",\"emoji\":\"🇧🇩\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER D\",\"flagged\":false,\"keywords\":[\"bangladesh\",\"flag\"]},{\"no\":1555,\"code\":\"U+1F1E7 U+1F1EA\",\"emoji\":\"🇧🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"belgium\",\"flag\"]},{\"no\":1556,\"code\":\"U+1F1E7 U+1F1EB\",\"emoji\":\"🇧🇫\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER F\",\"flagged\":false,\"keywords\":[\"burkina faso\",\"flag\"]},{\"no\":1557,\"code\":\"U+1F1E7 U+1F1EC\",\"emoji\":\"🇧🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"bulgaria\",\"flag\"]},{\"no\":1558,\"code\":\"U+1F1E7 U+1F1ED\",\"emoji\":\"🇧🇭\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER H\",\"flagged\":false,\"keywords\":[\"bahrain\",\"flag\"]},{\"no\":1559,\"code\":\"U+1F1E7 U+1F1EE\",\"emoji\":\"🇧🇮\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER I\",\"flagged\":false,\"keywords\":[\"burundi\",\"flag\"]},{\"no\":1560,\"code\":\"U+1F1E7 U+1F1EF\",\"emoji\":\"🇧🇯\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER J\",\"flagged\":false,\"keywords\":[\"benin\",\"flag\"]},{\"no\":1561,\"code\":\"U+1F1E7 U+1F1F1\",\"emoji\":\"🇧🇱\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER L\",\"flagged\":false,\"keywords\":[\"barthelemy\",\"barthélemy\",\"flag\",\"saint\"]},{\"no\":1562,\"code\":\"U+1F1E7 U+1F1F2\",\"emoji\":\"🇧🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"bermuda\",\"flag\"]},{\"no\":1563,\"code\":\"U+1F1E7 U+1F1F3\",\"emoji\":\"🇧🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"brunei\",\"darussalam\",\"flag\"]},{\"no\":1564,\"code\":\"U+1F1E7 U+1F1F4\",\"emoji\":\"🇧🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"bolivia\",\"flag\"]},{\"no\":1565,\"code\":\"U+1F1E7 U+1F1F6\",\"emoji\":\"🇧🇶\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER Q\",\"flagged\":false,\"keywords\":[\"bonaire\",\"caribbean\",\"eustatius\",\"flag\",\"netherlands\",\"saba\",\"sint\"]},{\"no\":1566,\"code\":\"U+1F1E7 U+1F1F7\",\"emoji\":\"🇧🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"brazil\",\"flag\"]},{\"no\":1567,\"code\":\"U+1F1E7 U+1F1F8\",\"emoji\":\"🇧🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"bahamas\",\"flag\"]},{\"no\":1568,\"code\":\"U+1F1E7 U+1F1F9\",\"emoji\":\"🇧🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"bhutan\",\"flag\"]},{\"no\":1569,\"code\":\"U+1F1E7 U+1F1FB\",\"emoji\":\"🇧🇻\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER V\",\"flagged\":false,\"keywords\":[\"bouvet\",\"flag\",\"island\"]},{\"no\":1570,\"code\":\"U+1F1E7 U+1F1FC\",\"emoji\":\"🇧🇼\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER W\",\"flagged\":false,\"keywords\":[\"botswana\",\"flag\"]},{\"no\":1571,\"code\":\"U+1F1E7 U+1F1FE\",\"emoji\":\"🇧🇾\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER Y\",\"flagged\":false,\"keywords\":[\"belarus\",\"flag\"]},{\"no\":1572,\"code\":\"U+1F1E7 U+1F1FF\",\"emoji\":\"🇧🇿\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER B, REGIONAL INDICATOR SYMBOL LETTER Z\",\"flagged\":false,\"keywords\":[\"belize\",\"flag\"]},{\"no\":1573,\"code\":\"U+1F1E8 U+1F1E6\",\"emoji\":\"🇨🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"canada\",\"flag\"]},{\"no\":1574,\"code\":\"U+1F1E8 U+1F1E8\",\"emoji\":\"🇨🇨\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER C\",\"flagged\":false,\"keywords\":[\"cocos\",\"flag\",\"island\",\"keeling\"]},{\"no\":1575,\"code\":\"U+1F1E8 U+1F1E9\",\"emoji\":\"🇨🇩\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER D\",\"flagged\":false,\"keywords\":[\"congo\",\"congo-kinshasa\",\"democratic republic of congo\",\"drc\",\"flag\",\"kinshasa\",\"republic\"]},{\"no\":1576,\"code\":\"U+1F1E8 U+1F1EB\",\"emoji\":\"🇨🇫\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER F\",\"flagged\":false,\"keywords\":[\"central african republic\",\"flag\",\"republic\"]},{\"no\":1577,\"code\":\"U+1F1E8 U+1F1EC\",\"emoji\":\"🇨🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"brazzaville\",\"congo\",\"congo republic\",\"congo-brazzaville\",\"flag\",\"republic\",\"republic of the congo\"]},{\"no\":1578,\"code\":\"U+1F1E8 U+1F1ED\",\"emoji\":\"🇨🇭\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER H\",\"flagged\":false,\"keywords\":[\"flag\",\"switzerland\"]},{\"no\":1579,\"code\":\"U+1F1E8 U+1F1EE\",\"emoji\":\"🇨🇮\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER I\",\"flagged\":false,\"keywords\":[\"cote ivoire\",\"côte ivoire\",\"flag\",\"ivory coast\"]},{\"no\":1580,\"code\":\"U+1F1E8 U+1F1F0\",\"emoji\":\"🇨🇰\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER K\",\"flagged\":false,\"keywords\":[\"cook\",\"flag\",\"island\"]},{\"no\":1581,\"code\":\"U+1F1E8 U+1F1F1\",\"emoji\":\"🇨🇱\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER L\",\"flagged\":false,\"keywords\":[\"chile\",\"flag\"]},{\"no\":1582,\"code\":\"U+1F1E8 U+1F1F2\",\"emoji\":\"🇨🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"cameroon\",\"flag\"]},{\"no\":1583,\"code\":\"U+1F1E8 U+1F1F3\",\"emoji\":\"🇨🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"china\",\"flag\"]},{\"no\":1584,\"code\":\"U+1F1E8 U+1F1F4\",\"emoji\":\"🇨🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"colombia\",\"flag\"]},{\"no\":1585,\"code\":\"U+1F1E8 U+1F1F5\",\"emoji\":\"🇨🇵\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER P\",\"flagged\":false,\"keywords\":[\"clipperton\",\"flag\",\"island\"]},{\"no\":1586,\"code\":\"U+1F1E8 U+1F1F7\",\"emoji\":\"🇨🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"costa rica\",\"flag\"]},{\"no\":1587,\"code\":\"U+1F1E8 U+1F1FA\",\"emoji\":\"🇨🇺\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER U\",\"flagged\":false,\"keywords\":[\"cuba\",\"flag\"]},{\"no\":1588,\"code\":\"U+1F1E8 U+1F1FB\",\"emoji\":\"🇨🇻\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER V\",\"flagged\":false,\"keywords\":[\"cabo\",\"cape\",\"flag\",\"verde\"]},{\"no\":1589,\"code\":\"U+1F1E8 U+1F1FC\",\"emoji\":\"🇨🇼\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER W\",\"flagged\":false,\"keywords\":[\"antilles\",\"curacao\",\"curaçao\",\"flag\"]},{\"no\":1590,\"code\":\"U+1F1E8 U+1F1FD\",\"emoji\":\"🇨🇽\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER X\",\"flagged\":false,\"keywords\":[\"christmas\",\"flag\",\"island\"]},{\"no\":1591,\"code\":\"U+1F1E8 U+1F1FE\",\"emoji\":\"🇨🇾\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER Y\",\"flagged\":false,\"keywords\":[\"cyprus\",\"flag\"]},{\"no\":1592,\"code\":\"U+1F1E8 U+1F1FF\",\"emoji\":\"🇨🇿\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER C, REGIONAL INDICATOR SYMBOL LETTER Z\",\"flagged\":false,\"keywords\":[\"czech republic\",\"flag\"]},{\"no\":1593,\"code\":\"U+1F1E9 U+1F1EA\",\"emoji\":\"🇩🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER D, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"germany\"]},{\"no\":1594,\"code\":\"U+1F1E9 U+1F1EC\",\"emoji\":\"🇩🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER D, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"diego garcia\",\"flag\"]},{\"no\":1595,\"code\":\"U+1F1E9 U+1F1EF\",\"emoji\":\"🇩🇯\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER D, REGIONAL INDICATOR SYMBOL LETTER J\",\"flagged\":false,\"keywords\":[\"djibouti\",\"flag\"]},{\"no\":1596,\"code\":\"U+1F1E9 U+1F1F0\",\"emoji\":\"🇩🇰\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER D, REGIONAL INDICATOR SYMBOL LETTER K\",\"flagged\":false,\"keywords\":[\"denmark\",\"flag\"]},{\"no\":1597,\"code\":\"U+1F1E9 U+1F1F2\",\"emoji\":\"🇩🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER D, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"dominica\",\"flag\"]},{\"no\":1598,\"code\":\"U+1F1E9 U+1F1F4\",\"emoji\":\"🇩🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER D, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"dominican republic\",\"flag\"]},{\"no\":1599,\"code\":\"U+1F1E9 U+1F1FF\",\"emoji\":\"🇩🇿\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER D, REGIONAL INDICATOR SYMBOL LETTER Z\",\"flagged\":false,\"keywords\":[\"algeria\",\"flag\"]},{\"no\":1600,\"code\":\"U+1F1EA U+1F1E6\",\"emoji\":\"🇪🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER E, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"ceuta\",\"flag\",\"melilla\"]},{\"no\":1601,\"code\":\"U+1F1EA U+1F1E8\",\"emoji\":\"🇪🇨\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER E, REGIONAL INDICATOR SYMBOL LETTER C\",\"flagged\":false,\"keywords\":[\"ecuador\",\"flag\"]},{\"no\":1602,\"code\":\"U+1F1EA U+1F1EA\",\"emoji\":\"🇪🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER E, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"estonia\",\"flag\"]},{\"no\":1603,\"code\":\"U+1F1EA U+1F1EC\",\"emoji\":\"🇪🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER E, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"egypt\",\"flag\"]},{\"no\":1604,\"code\":\"U+1F1EA U+1F1ED\",\"emoji\":\"🇪🇭\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER E, REGIONAL INDICATOR SYMBOL LETTER H\",\"flagged\":false,\"keywords\":[\"flag\",\"sahara\",\"west\",\"western sahara\"]},{\"no\":1605,\"code\":\"U+1F1EA U+1F1F7\",\"emoji\":\"🇪🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER E, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"eritrea\",\"flag\"]},{\"no\":1606,\"code\":\"U+1F1EA U+1F1F8\",\"emoji\":\"🇪🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER E, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"flag\",\"spain\"]},{\"no\":1607,\"code\":\"U+1F1EA U+1F1F9\",\"emoji\":\"🇪🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER E, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"ethiopia\",\"flag\"]},{\"no\":1608,\"code\":\"U+1F1EA U+1F1FA\",\"emoji\":\"🇪🇺\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER E, REGIONAL INDICATOR SYMBOL LETTER U\",\"flagged\":false,\"keywords\":[\"european union\",\"flag\"]},{\"no\":1609,\"code\":\"U+1F1EB U+1F1EE\",\"emoji\":\"🇫🇮\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER F, REGIONAL INDICATOR SYMBOL LETTER I\",\"flagged\":false,\"keywords\":[\"finland\",\"flag\"]},{\"no\":1610,\"code\":\"U+1F1EB U+1F1EF\",\"emoji\":\"🇫🇯\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER F, REGIONAL INDICATOR SYMBOL LETTER J\",\"flagged\":false,\"keywords\":[\"fiji\",\"flag\"]},{\"no\":1611,\"code\":\"U+1F1EB U+1F1F0\",\"emoji\":\"🇫🇰\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER F, REGIONAL INDICATOR SYMBOL LETTER K\",\"flagged\":false,\"keywords\":[\"falkland\",\"falklands\",\"flag\",\"island\",\"islas\",\"malvinas\"]},{\"no\":1612,\"code\":\"U+1F1EB U+1F1F2\",\"emoji\":\"🇫🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER F, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"flag\",\"micronesia\"]},{\"no\":1613,\"code\":\"U+1F1EB U+1F1F4\",\"emoji\":\"🇫🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER F, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"faroe\",\"flag\",\"island\"]},{\"no\":1614,\"code\":\"U+1F1EB U+1F1F7\",\"emoji\":\"🇫🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER F, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"flag\",\"france\"]},{\"no\":1615,\"code\":\"U+1F1EC U+1F1E6\",\"emoji\":\"🇬🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"gabon\"]},{\"no\":1616,\"code\":\"U+1F1EC U+1F1E7\",\"emoji\":\"🇬🇧\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER B\",\"flagged\":false,\"keywords\":[\"britain\",\"british\",\"cornwall\",\"england\",\"flag\",\"great britain\",\"ireland\",\"northern ireland\",\"scotland\",\"uk\",\"union jack\",\"united\",\"united kingdom\",\"wales\"]},{\"no\":1617,\"code\":\"U+1F1EC U+1F1E9\",\"emoji\":\"🇬🇩\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER D\",\"flagged\":false,\"keywords\":[\"flag\",\"grenada\"]},{\"no\":1618,\"code\":\"U+1F1EC U+1F1EA\",\"emoji\":\"🇬🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"georgia\"]},{\"no\":1619,\"code\":\"U+1F1EC U+1F1EB\",\"emoji\":\"🇬🇫\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER F\",\"flagged\":false,\"keywords\":[\"flag\",\"french\",\"guiana\"]},{\"no\":1620,\"code\":\"U+1F1EC U+1F1EC\",\"emoji\":\"🇬🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"flag\",\"guernsey\"]},{\"no\":1621,\"code\":\"U+1F1EC U+1F1ED\",\"emoji\":\"🇬🇭\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER H\",\"flagged\":false,\"keywords\":[\"flag\",\"ghana\"]},{\"no\":1622,\"code\":\"U+1F1EC U+1F1EE\",\"emoji\":\"🇬🇮\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER I\",\"flagged\":false,\"keywords\":[\"flag\",\"gibraltar\"]},{\"no\":1623,\"code\":\"U+1F1EC U+1F1F1\",\"emoji\":\"🇬🇱\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER L\",\"flagged\":false,\"keywords\":[\"flag\",\"greenland\"]},{\"no\":1624,\"code\":\"U+1F1EC U+1F1F2\",\"emoji\":\"🇬🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"flag\",\"gambia\"]},{\"no\":1625,\"code\":\"U+1F1EC U+1F1F3\",\"emoji\":\"🇬🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"flag\",\"guinea\"]},{\"no\":1626,\"code\":\"U+1F1EC U+1F1F5\",\"emoji\":\"🇬🇵\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER P\",\"flagged\":false,\"keywords\":[\"flag\",\"guadeloupe\"]},{\"no\":1627,\"code\":\"U+1F1EC U+1F1F6\",\"emoji\":\"🇬🇶\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER Q\",\"flagged\":false,\"keywords\":[\"equatorial guinea\",\"flag\",\"guinea\"]},{\"no\":1628,\"code\":\"U+1F1EC U+1F1F7\",\"emoji\":\"🇬🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"flag\",\"greece\"]},{\"no\":1629,\"code\":\"U+1F1EC U+1F1F8\",\"emoji\":\"🇬🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"flag\",\"georgia\",\"island\",\"south\",\"south georgia\",\"south sandwich\"]},{\"no\":1630,\"code\":\"U+1F1EC U+1F1F9\",\"emoji\":\"🇬🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"flag\",\"guatemala\"]},{\"no\":1631,\"code\":\"U+1F1EC U+1F1FA\",\"emoji\":\"🇬🇺\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER U\",\"flagged\":false,\"keywords\":[\"flag\",\"guam\"]},{\"no\":1632,\"code\":\"U+1F1EC U+1F1FC\",\"emoji\":\"🇬🇼\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER W\",\"flagged\":false,\"keywords\":[\"bissau\",\"flag\",\"guinea\"]},{\"no\":1633,\"code\":\"U+1F1EC U+1F1FE\",\"emoji\":\"🇬🇾\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER G, REGIONAL INDICATOR SYMBOL LETTER Y\",\"flagged\":false,\"keywords\":[\"flag\",\"guyana\"]},{\"no\":1634,\"code\":\"U+1F1ED U+1F1F0\",\"emoji\":\"🇭🇰\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER H, REGIONAL INDICATOR SYMBOL LETTER K\",\"flagged\":false,\"keywords\":[\"china\",\"flag\",\"hong kong\"]},{\"no\":1635,\"code\":\"U+1F1ED U+1F1F2\",\"emoji\":\"🇭🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER H, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"flag\",\"heard\",\"island\",\"mcdonald\"]},{\"no\":1636,\"code\":\"U+1F1ED U+1F1F3\",\"emoji\":\"🇭🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER H, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"flag\",\"honduras\"]},{\"no\":1637,\"code\":\"U+1F1ED U+1F1F7\",\"emoji\":\"🇭🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER H, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"croatia\",\"flag\"]},{\"no\":1638,\"code\":\"U+1F1ED U+1F1F9\",\"emoji\":\"🇭🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER H, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"flag\",\"haiti\"]},{\"no\":1639,\"code\":\"U+1F1ED U+1F1FA\",\"emoji\":\"🇭🇺\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER H, REGIONAL INDICATOR SYMBOL LETTER U\",\"flagged\":false,\"keywords\":[\"flag\",\"hungary\"]},{\"no\":1640,\"code\":\"U+1F1EE U+1F1E8\",\"emoji\":\"🇮🇨\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER C\",\"flagged\":false,\"keywords\":[\"canary\",\"flag\",\"island\"]},{\"no\":1641,\"code\":\"U+1F1EE U+1F1E9\",\"emoji\":\"🇮🇩\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER D\",\"flagged\":false,\"keywords\":[\"flag\",\"indonesia\"]},{\"no\":1642,\"code\":\"U+1F1EE U+1F1EA\",\"emoji\":\"🇮🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"ireland\"]},{\"no\":1643,\"code\":\"U+1F1EE U+1F1F1\",\"emoji\":\"🇮🇱\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER L\",\"flagged\":false,\"keywords\":[\"flag\",\"israel\"]},{\"no\":1644,\"code\":\"U+1F1EE U+1F1F2\",\"emoji\":\"🇮🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"flag\",\"isle of man\"]},{\"no\":1645,\"code\":\"U+1F1EE U+1F1F3\",\"emoji\":\"🇮🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"flag\",\"india\"]},{\"no\":1646,\"code\":\"U+1F1EE U+1F1F4\",\"emoji\":\"🇮🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"british\",\"chagos\",\"flag\",\"indian ocean\",\"island\"]},{\"no\":1647,\"code\":\"U+1F1EE U+1F1F6\",\"emoji\":\"🇮🇶\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER Q\",\"flagged\":false,\"keywords\":[\"flag\",\"iraq\"]},{\"no\":1648,\"code\":\"U+1F1EE U+1F1F7\",\"emoji\":\"🇮🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"flag\",\"iran\"]},{\"no\":1649,\"code\":\"U+1F1EE U+1F1F8\",\"emoji\":\"🇮🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"flag\",\"iceland\"]},{\"no\":1650,\"code\":\"U+1F1EE U+1F1F9\",\"emoji\":\"🇮🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER I, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"flag\",\"italy\"]},{\"no\":1651,\"code\":\"U+1F1EF U+1F1EA\",\"emoji\":\"🇯🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER J, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"jersey\"]},{\"no\":1652,\"code\":\"U+1F1EF U+1F1F2\",\"emoji\":\"🇯🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER J, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"flag\",\"jamaica\"]},{\"no\":1653,\"code\":\"U+1F1EF U+1F1F4\",\"emoji\":\"🇯🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER J, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"flag\",\"jordan\"]},{\"no\":1654,\"code\":\"U+1F1EF U+1F1F5\",\"emoji\":\"🇯🇵\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER J, REGIONAL INDICATOR SYMBOL LETTER P\",\"flagged\":false,\"keywords\":[\"flag\",\"japan\"]},{\"no\":1655,\"code\":\"U+1F1F0 U+1F1EA\",\"emoji\":\"🇰🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"kenya\"]},{\"no\":1656,\"code\":\"U+1F1F0 U+1F1EC\",\"emoji\":\"🇰🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"flag\",\"kyrgyzstan\"]},{\"no\":1657,\"code\":\"U+1F1F0 U+1F1ED\",\"emoji\":\"🇰🇭\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER H\",\"flagged\":false,\"keywords\":[\"cambodia\",\"flag\"]},{\"no\":1658,\"code\":\"U+1F1F0 U+1F1EE\",\"emoji\":\"🇰🇮\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER I\",\"flagged\":false,\"keywords\":[\"flag\",\"kiribati\"]},{\"no\":1659,\"code\":\"U+1F1F0 U+1F1F2\",\"emoji\":\"🇰🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"comoros\",\"flag\"]},{\"no\":1660,\"code\":\"U+1F1F0 U+1F1F3\",\"emoji\":\"🇰🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"flag\",\"kitts\",\"nevis\",\"saint\"]},{\"no\":1661,\"code\":\"U+1F1F0 U+1F1F5\",\"emoji\":\"🇰🇵\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER P\",\"flagged\":false,\"keywords\":[\"flag\",\"korea\",\"north\",\"north korea\"]},{\"no\":1662,\"code\":\"U+1F1F0 U+1F1F7\",\"emoji\":\"🇰🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"flag\",\"korea\",\"south\",\"south korea\"]},{\"no\":1663,\"code\":\"U+1F1F0 U+1F1FC\",\"emoji\":\"🇰🇼\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER W\",\"flagged\":false,\"keywords\":[\"flag\",\"kuwait\"]},{\"no\":1664,\"code\":\"U+1F1F0 U+1F1FE\",\"emoji\":\"🇰🇾\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER Y\",\"flagged\":false,\"keywords\":[\"cayman\",\"flag\",\"island\"]},{\"no\":1665,\"code\":\"U+1F1F0 U+1F1FF\",\"emoji\":\"🇰🇿\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER K, REGIONAL INDICATOR SYMBOL LETTER Z\",\"flagged\":false,\"keywords\":[\"flag\",\"kazakhstan\"]},{\"no\":1666,\"code\":\"U+1F1F1 U+1F1E6\",\"emoji\":\"🇱🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"laos\"]},{\"no\":1667,\"code\":\"U+1F1F1 U+1F1E7\",\"emoji\":\"🇱🇧\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER B\",\"flagged\":false,\"keywords\":[\"flag\",\"lebanon\"]},{\"no\":1668,\"code\":\"U+1F1F1 U+1F1E8\",\"emoji\":\"🇱🇨\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER C\",\"flagged\":false,\"keywords\":[\"flag\",\"lucia\",\"saint\"]},{\"no\":1669,\"code\":\"U+1F1F1 U+1F1EE\",\"emoji\":\"🇱🇮\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER I\",\"flagged\":false,\"keywords\":[\"flag\",\"liechtenstein\"]},{\"no\":1670,\"code\":\"U+1F1F1 U+1F1F0\",\"emoji\":\"🇱🇰\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER K\",\"flagged\":false,\"keywords\":[\"flag\",\"sri lanka\"]},{\"no\":1671,\"code\":\"U+1F1F1 U+1F1F7\",\"emoji\":\"🇱🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"flag\",\"liberia\"]},{\"no\":1672,\"code\":\"U+1F1F1 U+1F1F8\",\"emoji\":\"🇱🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"flag\",\"lesotho\"]},{\"no\":1673,\"code\":\"U+1F1F1 U+1F1F9\",\"emoji\":\"🇱🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"flag\",\"lithuania\"]},{\"no\":1674,\"code\":\"U+1F1F1 U+1F1FA\",\"emoji\":\"🇱🇺\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER U\",\"flagged\":false,\"keywords\":[\"flag\",\"luxembourg\"]},{\"no\":1675,\"code\":\"U+1F1F1 U+1F1FB\",\"emoji\":\"🇱🇻\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER V\",\"flagged\":false,\"keywords\":[\"flag\",\"latvia\"]},{\"no\":1676,\"code\":\"U+1F1F1 U+1F1FE\",\"emoji\":\"🇱🇾\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER L, REGIONAL INDICATOR SYMBOL LETTER Y\",\"flagged\":false,\"keywords\":[\"flag\",\"libya\"]},{\"no\":1677,\"code\":\"U+1F1F2 U+1F1E6\",\"emoji\":\"🇲🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"morocco\"]},{\"no\":1678,\"code\":\"U+1F1F2 U+1F1E8\",\"emoji\":\"🇲🇨\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER C\",\"flagged\":false,\"keywords\":[\"flag\",\"monaco\"]},{\"no\":1679,\"code\":\"U+1F1F2 U+1F1E9\",\"emoji\":\"🇲🇩\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER D\",\"flagged\":false,\"keywords\":[\"flag\",\"moldova\"]},{\"no\":1680,\"code\":\"U+1F1F2 U+1F1EA\",\"emoji\":\"🇲🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"montenegro\"]},{\"no\":1681,\"code\":\"U+1F1F2 U+1F1EB\",\"emoji\":\"🇲🇫\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER F\",\"flagged\":false,\"keywords\":[\"flag\",\"french\",\"martin\",\"saint\"]},{\"no\":1682,\"code\":\"U+1F1F2 U+1F1EC\",\"emoji\":\"🇲🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"flag\",\"madagascar\"]},{\"no\":1683,\"code\":\"U+1F1F2 U+1F1ED\",\"emoji\":\"🇲🇭\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER H\",\"flagged\":false,\"keywords\":[\"flag\",\"island\",\"marshall\"]},{\"no\":1684,\"code\":\"U+1F1F2 U+1F1F0\",\"emoji\":\"🇲🇰\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER K\",\"flagged\":false,\"keywords\":[\"flag\",\"macedonia\"]},{\"no\":1685,\"code\":\"U+1F1F2 U+1F1F1\",\"emoji\":\"🇲🇱\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER L\",\"flagged\":false,\"keywords\":[\"flag\",\"mali\"]},{\"no\":1686,\"code\":\"U+1F1F2 U+1F1F2\",\"emoji\":\"🇲🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"burma\",\"flag\",\"myanmar\"]},{\"no\":1687,\"code\":\"U+1F1F2 U+1F1F3\",\"emoji\":\"🇲🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"flag\",\"mongolia\"]},{\"no\":1688,\"code\":\"U+1F1F2 U+1F1F4\",\"emoji\":\"🇲🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"china\",\"flag\",\"macao\",\"macau\"]},{\"no\":1689,\"code\":\"U+1F1F2 U+1F1F5\",\"emoji\":\"🇲🇵\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER P\",\"flagged\":false,\"keywords\":[\"flag\",\"island\",\"mariana\",\"north\",\"northern mariana\"]},{\"no\":1690,\"code\":\"U+1F1F2 U+1F1F6\",\"emoji\":\"🇲🇶\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER Q\",\"flagged\":false,\"keywords\":[\"flag\",\"martinique\"]},{\"no\":1691,\"code\":\"U+1F1F2 U+1F1F7\",\"emoji\":\"🇲🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"flag\",\"mauritania\"]},{\"no\":1692,\"code\":\"U+1F1F2 U+1F1F8\",\"emoji\":\"🇲🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"flag\",\"montserrat\"]},{\"no\":1693,\"code\":\"U+1F1F2 U+1F1F9\",\"emoji\":\"🇲🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"flag\",\"malta\"]},{\"no\":1694,\"code\":\"U+1F1F2 U+1F1FA\",\"emoji\":\"🇲🇺\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER U\",\"flagged\":false,\"keywords\":[\"flag\",\"mauritius\"]},{\"no\":1695,\"code\":\"U+1F1F2 U+1F1FB\",\"emoji\":\"🇲🇻\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER V\",\"flagged\":false,\"keywords\":[\"flag\",\"maldives\"]},{\"no\":1696,\"code\":\"U+1F1F2 U+1F1FC\",\"emoji\":\"🇲🇼\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER W\",\"flagged\":false,\"keywords\":[\"flag\",\"malawi\"]},{\"no\":1697,\"code\":\"U+1F1F2 U+1F1FD\",\"emoji\":\"🇲🇽\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER X\",\"flagged\":false,\"keywords\":[\"flag\",\"mexico\"]},{\"no\":1698,\"code\":\"U+1F1F2 U+1F1FE\",\"emoji\":\"🇲🇾\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER Y\",\"flagged\":false,\"keywords\":[\"flag\",\"malaysia\"]},{\"no\":1699,\"code\":\"U+1F1F2 U+1F1FF\",\"emoji\":\"🇲🇿\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER M, REGIONAL INDICATOR SYMBOL LETTER Z\",\"flagged\":false,\"keywords\":[\"flag\",\"mozambique\"]},{\"no\":1700,\"code\":\"U+1F1F3 U+1F1E6\",\"emoji\":\"🇳🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"namibia\"]},{\"no\":1701,\"code\":\"U+1F1F3 U+1F1E8\",\"emoji\":\"🇳🇨\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER C\",\"flagged\":false,\"keywords\":[\"flag\",\"new\",\"new caledonia\"]},{\"no\":1702,\"code\":\"U+1F1F3 U+1F1EA\",\"emoji\":\"🇳🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"niger\"]},{\"no\":1703,\"code\":\"U+1F1F3 U+1F1EB\",\"emoji\":\"🇳🇫\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER F\",\"flagged\":false,\"keywords\":[\"flag\",\"island\",\"norfolk\"]},{\"no\":1704,\"code\":\"U+1F1F3 U+1F1EC\",\"emoji\":\"🇳🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"flag\",\"nigeria\"]},{\"no\":1705,\"code\":\"U+1F1F3 U+1F1EE\",\"emoji\":\"🇳🇮\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER I\",\"flagged\":false,\"keywords\":[\"flag\",\"nicaragua\"]},{\"no\":1706,\"code\":\"U+1F1F3 U+1F1F1\",\"emoji\":\"🇳🇱\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER L\",\"flagged\":false,\"keywords\":[\"flag\",\"netherlands\"]},{\"no\":1707,\"code\":\"U+1F1F3 U+1F1F4\",\"emoji\":\"🇳🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"flag\",\"norway\"]},{\"no\":1708,\"code\":\"U+1F1F3 U+1F1F5\",\"emoji\":\"🇳🇵\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER P\",\"flagged\":false,\"keywords\":[\"flag\",\"nepal\"]},{\"no\":1709,\"code\":\"U+1F1F3 U+1F1F7\",\"emoji\":\"🇳🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"flag\",\"nauru\"]},{\"no\":1710,\"code\":\"U+1F1F3 U+1F1FA\",\"emoji\":\"🇳🇺\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER U\",\"flagged\":false,\"keywords\":[\"flag\",\"niue\"]},{\"no\":1711,\"code\":\"U+1F1F3 U+1F1FF\",\"emoji\":\"🇳🇿\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER N, REGIONAL INDICATOR SYMBOL LETTER Z\",\"flagged\":false,\"keywords\":[\"flag\",\"new\",\"new zealand\"]},{\"no\":1712,\"code\":\"U+1F1F4 U+1F1F2\",\"emoji\":\"🇴🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER O, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"flag\",\"oman\"]},{\"no\":1713,\"code\":\"U+1F1F5 U+1F1E6\",\"emoji\":\"🇵🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"panama\"]},{\"no\":1714,\"code\":\"U+1F1F5 U+1F1EA\",\"emoji\":\"🇵🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"peru\"]},{\"no\":1715,\"code\":\"U+1F1F5 U+1F1EB\",\"emoji\":\"🇵🇫\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER F\",\"flagged\":false,\"keywords\":[\"flag\",\"french\",\"polynesia\"]},{\"no\":1716,\"code\":\"U+1F1F5 U+1F1EC\",\"emoji\":\"🇵🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"flag\",\"guinea\",\"new\",\"papua new guinea\"]},{\"no\":1717,\"code\":\"U+1F1F5 U+1F1ED\",\"emoji\":\"🇵🇭\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER H\",\"flagged\":false,\"keywords\":[\"flag\",\"philippines\"]},{\"no\":1718,\"code\":\"U+1F1F5 U+1F1F0\",\"emoji\":\"🇵🇰\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER K\",\"flagged\":false,\"keywords\":[\"flag\",\"pakistan\"]},{\"no\":1719,\"code\":\"U+1F1F5 U+1F1F1\",\"emoji\":\"🇵🇱\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER L\",\"flagged\":false,\"keywords\":[\"flag\",\"poland\"]},{\"no\":1720,\"code\":\"U+1F1F5 U+1F1F2\",\"emoji\":\"🇵🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"flag\",\"miquelon\",\"pierre\",\"saint\"]},{\"no\":1721,\"code\":\"U+1F1F5 U+1F1F3\",\"emoji\":\"🇵🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"flag\",\"island\",\"pitcairn\"]},{\"no\":1722,\"code\":\"U+1F1F5 U+1F1F7\",\"emoji\":\"🇵🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"flag\",\"puerto rico\"]},{\"no\":1723,\"code\":\"U+1F1F5 U+1F1F8\",\"emoji\":\"🇵🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"flag\",\"palestine\"]},{\"no\":1724,\"code\":\"U+1F1F5 U+1F1F9\",\"emoji\":\"🇵🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"flag\",\"portugal\"]},{\"no\":1725,\"code\":\"U+1F1F5 U+1F1FC\",\"emoji\":\"🇵🇼\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER W\",\"flagged\":false,\"keywords\":[\"flag\",\"palau\"]},{\"no\":1726,\"code\":\"U+1F1F5 U+1F1FE\",\"emoji\":\"🇵🇾\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER P, REGIONAL INDICATOR SYMBOL LETTER Y\",\"flagged\":false,\"keywords\":[\"flag\",\"paraguay\"]},{\"no\":1727,\"code\":\"U+1F1F6 U+1F1E6\",\"emoji\":\"🇶🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER Q, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"qatar\"]},{\"no\":1728,\"code\":\"U+1F1F7 U+1F1EA\",\"emoji\":\"🇷🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER R, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"reunion\",\"réunion\"]},{\"no\":1729,\"code\":\"U+1F1F7 U+1F1F4\",\"emoji\":\"🇷🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER R, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"flag\",\"romania\"]},{\"no\":1730,\"code\":\"U+1F1F7 U+1F1F8\",\"emoji\":\"🇷🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER R, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"flag\",\"serbia\"]},{\"no\":1731,\"code\":\"U+1F1F7 U+1F1FA\",\"emoji\":\"🇷🇺\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER R, REGIONAL INDICATOR SYMBOL LETTER U\",\"flagged\":false,\"keywords\":[\"flag\",\"russia\"]},{\"no\":1732,\"code\":\"U+1F1F7 U+1F1FC\",\"emoji\":\"🇷🇼\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER R, REGIONAL INDICATOR SYMBOL LETTER W\",\"flagged\":false,\"keywords\":[\"flag\",\"rwanda\"]},{\"no\":1733,\"code\":\"U+1F1F8 U+1F1E6\",\"emoji\":\"🇸🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"saudi arabia\"]},{\"no\":1734,\"code\":\"U+1F1F8 U+1F1E7\",\"emoji\":\"🇸🇧\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER B\",\"flagged\":false,\"keywords\":[\"flag\",\"island\",\"solomon\"]},{\"no\":1735,\"code\":\"U+1F1F8 U+1F1E8\",\"emoji\":\"🇸🇨\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER C\",\"flagged\":false,\"keywords\":[\"flag\",\"seychelles\"]},{\"no\":1736,\"code\":\"U+1F1F8 U+1F1E9\",\"emoji\":\"🇸🇩\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER D\",\"flagged\":false,\"keywords\":[\"flag\",\"sudan\"]},{\"no\":1737,\"code\":\"U+1F1F8 U+1F1EA\",\"emoji\":\"🇸🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"sweden\"]},{\"no\":1738,\"code\":\"U+1F1F8 U+1F1EC\",\"emoji\":\"🇸🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"flag\",\"singapore\"]},{\"no\":1739,\"code\":\"U+1F1F8 U+1F1ED\",\"emoji\":\"🇸🇭\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER H\",\"flagged\":false,\"keywords\":[\"flag\",\"helena\",\"saint\"]},{\"no\":1740,\"code\":\"U+1F1F8 U+1F1EE\",\"emoji\":\"🇸🇮\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER I\",\"flagged\":false,\"keywords\":[\"flag\",\"slovenia\"]},{\"no\":1741,\"code\":\"U+1F1F8 U+1F1EF\",\"emoji\":\"🇸🇯\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER J\",\"flagged\":false,\"keywords\":[\"flag\",\"jan mayen\",\"svalbard\"]},{\"no\":1742,\"code\":\"U+1F1F8 U+1F1F0\",\"emoji\":\"🇸🇰\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER K\",\"flagged\":false,\"keywords\":[\"flag\",\"slovakia\"]},{\"no\":1743,\"code\":\"U+1F1F8 U+1F1F1\",\"emoji\":\"🇸🇱\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER L\",\"flagged\":false,\"keywords\":[\"flag\",\"sierra leone\"]},{\"no\":1744,\"code\":\"U+1F1F8 U+1F1F2\",\"emoji\":\"🇸🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"flag\",\"san marino\"]},{\"no\":1745,\"code\":\"U+1F1F8 U+1F1F3\",\"emoji\":\"🇸🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"flag\",\"senegal\"]},{\"no\":1746,\"code\":\"U+1F1F8 U+1F1F4\",\"emoji\":\"🇸🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"flag\",\"somalia\"]},{\"no\":1747,\"code\":\"U+1F1F8 U+1F1F7\",\"emoji\":\"🇸🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"flag\",\"suriname\"]},{\"no\":1748,\"code\":\"U+1F1F8 U+1F1F8\",\"emoji\":\"🇸🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"flag\",\"south\",\"south sudan\",\"sudan\"]},{\"no\":1749,\"code\":\"U+1F1F8 U+1F1F9\",\"emoji\":\"🇸🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"flag\",\"principe\",\"príncipe\",\"sao tome\",\"são tomé\"]},{\"no\":1750,\"code\":\"U+1F1F8 U+1F1FB\",\"emoji\":\"🇸🇻\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER V\",\"flagged\":false,\"keywords\":[\"el salvador\",\"flag\"]},{\"no\":1751,\"code\":\"U+1F1F8 U+1F1FD\",\"emoji\":\"🇸🇽\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER X\",\"flagged\":false,\"keywords\":[\"flag\",\"maarten\",\"sint\"]},{\"no\":1752,\"code\":\"U+1F1F8 U+1F1FE\",\"emoji\":\"🇸🇾\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER Y\",\"flagged\":false,\"keywords\":[\"flag\",\"syria\"]},{\"no\":1753,\"code\":\"U+1F1F8 U+1F1FF\",\"emoji\":\"🇸🇿\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER S, REGIONAL INDICATOR SYMBOL LETTER Z\",\"flagged\":false,\"keywords\":[\"flag\",\"swaziland\"]},{\"no\":1754,\"code\":\"U+1F1F9 U+1F1E6\",\"emoji\":\"🇹🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"tristan da cunha\"]},{\"no\":1755,\"code\":\"U+1F1F9 U+1F1E8\",\"emoji\":\"🇹🇨\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER C\",\"flagged\":false,\"keywords\":[\"caicos\",\"flag\",\"island\",\"turks\"]},{\"no\":1756,\"code\":\"U+1F1F9 U+1F1E9\",\"emoji\":\"🇹🇩\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER D\",\"flagged\":false,\"keywords\":[\"chad\",\"flag\"]},{\"no\":1757,\"code\":\"U+1F1F9 U+1F1EB\",\"emoji\":\"🇹🇫\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER F\",\"flagged\":false,\"keywords\":[\"antarctic\",\"flag\",\"french\"]},{\"no\":1758,\"code\":\"U+1F1F9 U+1F1EC\",\"emoji\":\"🇹🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"flag\",\"togo\"]},{\"no\":1759,\"code\":\"U+1F1F9 U+1F1ED\",\"emoji\":\"🇹🇭\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER H\",\"flagged\":false,\"keywords\":[\"flag\",\"thailand\"]},{\"no\":1760,\"code\":\"U+1F1F9 U+1F1EF\",\"emoji\":\"🇹🇯\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER J\",\"flagged\":false,\"keywords\":[\"flag\",\"tajikistan\"]},{\"no\":1761,\"code\":\"U+1F1F9 U+1F1F0\",\"emoji\":\"🇹🇰\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER K\",\"flagged\":false,\"keywords\":[\"flag\",\"tokelau\"]},{\"no\":1762,\"code\":\"U+1F1F9 U+1F1F1\",\"emoji\":\"🇹🇱\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER L\",\"flagged\":false,\"keywords\":[\"east\",\"east timor\",\"flag\",\"timor-leste\"]},{\"no\":1763,\"code\":\"U+1F1F9 U+1F1F2\",\"emoji\":\"🇹🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"flag\",\"turkmenistan\"]},{\"no\":1764,\"code\":\"U+1F1F9 U+1F1F3\",\"emoji\":\"🇹🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"flag\",\"tunisia\"]},{\"no\":1765,\"code\":\"U+1F1F9 U+1F1F4\",\"emoji\":\"🇹🇴\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER O\",\"flagged\":false,\"keywords\":[\"flag\",\"tonga\"]},{\"no\":1766,\"code\":\"U+1F1F9 U+1F1F7\",\"emoji\":\"🇹🇷\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER R\",\"flagged\":false,\"keywords\":[\"flag\",\"turkey\"]},{\"no\":1767,\"code\":\"U+1F1F9 U+1F1F9\",\"emoji\":\"🇹🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"flag\",\"tobago\",\"trinidad\"]},{\"no\":1768,\"code\":\"U+1F1F9 U+1F1FB\",\"emoji\":\"🇹🇻\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER V\",\"flagged\":false,\"keywords\":[\"flag\",\"tuvalu\"]},{\"no\":1769,\"code\":\"U+1F1F9 U+1F1FC\",\"emoji\":\"🇹🇼\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER W\",\"flagged\":false,\"keywords\":[\"china\",\"flag\",\"taiwan\"]},{\"no\":1770,\"code\":\"U+1F1F9 U+1F1FF\",\"emoji\":\"🇹🇿\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER T, REGIONAL INDICATOR SYMBOL LETTER Z\",\"flagged\":false,\"keywords\":[\"flag\",\"tanzania\"]},{\"no\":1771,\"code\":\"U+1F1FA U+1F1E6\",\"emoji\":\"🇺🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER U, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"ukraine\"]},{\"no\":1772,\"code\":\"U+1F1FA U+1F1EC\",\"emoji\":\"🇺🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER U, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"flag\",\"uganda\"]},{\"no\":1773,\"code\":\"U+1F1FA U+1F1F2\",\"emoji\":\"🇺🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER U, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"america\",\"flag\",\"island\",\"minor outlying\",\"united\",\"united states\",\"us\",\"usa\"]},{\"no\":1774,\"code\":\"U+1F1FA U+1F1F8\",\"emoji\":\"🇺🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER U, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"america\",\"flag\",\"stars and stripes\",\"united\",\"united states\"]},{\"no\":1775,\"code\":\"U+1F1FA U+1F1FE\",\"emoji\":\"🇺🇾\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER U, REGIONAL INDICATOR SYMBOL LETTER Y\",\"flagged\":false,\"keywords\":[\"flag\",\"uruguay\"]},{\"no\":1776,\"code\":\"U+1F1FA U+1F1FF\",\"emoji\":\"🇺🇿\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER U, REGIONAL INDICATOR SYMBOL LETTER Z\",\"flagged\":false,\"keywords\":[\"flag\",\"uzbekistan\"]},{\"no\":1777,\"code\":\"U+1F1FB U+1F1E6\",\"emoji\":\"🇻🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER V, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"vatican\"]},{\"no\":1778,\"code\":\"U+1F1FB U+1F1E8\",\"emoji\":\"🇻🇨\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER V, REGIONAL INDICATOR SYMBOL LETTER C\",\"flagged\":false,\"keywords\":[\"flag\",\"grenadines\",\"saint\",\"vincent\"]},{\"no\":1779,\"code\":\"U+1F1FB U+1F1EA\",\"emoji\":\"🇻🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER V, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"venezuela\"]},{\"no\":1780,\"code\":\"U+1F1FB U+1F1EC\",\"emoji\":\"🇻🇬\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER V, REGIONAL INDICATOR SYMBOL LETTER G\",\"flagged\":false,\"keywords\":[\"british\",\"flag\",\"island\",\"virgin\"]},{\"no\":1781,\"code\":\"U+1F1FB U+1F1EE\",\"emoji\":\"🇻🇮\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER V, REGIONAL INDICATOR SYMBOL LETTER I\",\"flagged\":false,\"keywords\":[\"america\",\"american\",\"flag\",\"island\",\"united\",\"united states\",\"us\",\"usa\",\"virgin\"]},{\"no\":1782,\"code\":\"U+1F1FB U+1F1F3\",\"emoji\":\"🇻🇳\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER V, REGIONAL INDICATOR SYMBOL LETTER N\",\"flagged\":false,\"keywords\":[\"flag\",\"viet nam\",\"vietnam\"]},{\"no\":1783,\"code\":\"U+1F1FB U+1F1FA\",\"emoji\":\"🇻🇺\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER V, REGIONAL INDICATOR SYMBOL LETTER U\",\"flagged\":false,\"keywords\":[\"flag\",\"vanuatu\"]},{\"no\":1784,\"code\":\"U+1F1FC U+1F1EB\",\"emoji\":\"🇼🇫\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER W, REGIONAL INDICATOR SYMBOL LETTER F\",\"flagged\":false,\"keywords\":[\"flag\",\"futuna\",\"wallis\"]},{\"no\":1785,\"code\":\"U+1F1FC U+1F1F8\",\"emoji\":\"🇼🇸\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER W, REGIONAL INDICATOR SYMBOL LETTER S\",\"flagged\":false,\"keywords\":[\"flag\",\"samoa\"]},{\"no\":1786,\"code\":\"U+1F1FD U+1F1F0\",\"emoji\":\"🇽🇰\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER X, REGIONAL INDICATOR SYMBOL LETTER K\",\"flagged\":false,\"keywords\":[\"flag\",\"kosovo\"]},{\"no\":1787,\"code\":\"U+1F1FE U+1F1EA\",\"emoji\":\"🇾🇪\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER Y, REGIONAL INDICATOR SYMBOL LETTER E\",\"flagged\":false,\"keywords\":[\"flag\",\"yemen\"]},{\"no\":1788,\"code\":\"U+1F1FE U+1F1F9\",\"emoji\":\"🇾🇹\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER Y, REGIONAL INDICATOR SYMBOL LETTER T\",\"flagged\":false,\"keywords\":[\"flag\",\"mayotte\"]},{\"no\":1789,\"code\":\"U+1F1FF U+1F1E6\",\"emoji\":\"🇿🇦\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER Z, REGIONAL INDICATOR SYMBOL LETTER A\",\"flagged\":false,\"keywords\":[\"flag\",\"south\",\"south africa\"]},{\"no\":1790,\"code\":\"U+1F1FF U+1F1F2\",\"emoji\":\"🇿🇲\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER Z, REGIONAL INDICATOR SYMBOL LETTER M\",\"flagged\":false,\"keywords\":[\"flag\",\"zambia\"]},{\"no\":1791,\"code\":\"U+1F1FF U+1F1FC\",\"emoji\":\"🇿🇼\",\"description\":\"REGIONAL INDICATOR SYMBOL LETTER Z, REGIONAL INDICATOR SYMBOL LETTER W\",\"flagged\":false,\"keywords\":[\"flag\",\"zimbabwe\"]}]}");

/***/ }),

/***/ "4362":
/***/ (function(module, exports, __webpack_require__) {

exports.nextTick = function nextTick(fn) {
    var args = Array.prototype.slice.call(arguments);
    args.shift();
    setTimeout(function () {
        fn.apply(null, args);
    }, 0);
};

exports.platform = exports.arch = 
exports.execPath = exports.title = 'browser';
exports.pid = 1;
exports.browser = true;
exports.env = {};
exports.argv = [];

exports.binding = function (name) {
	throw new Error('No such module. (Possibly not yet loaded)')
};

(function () {
    var cwd = '/';
    var path;
    exports.cwd = function () { return cwd };
    exports.chdir = function (dir) {
        if (!path) path = __webpack_require__("df7c");
        cwd = path.resolve(dir, cwd);
    };
})();

exports.exit = exports.kill = 
exports.umask = exports.dlopen = 
exports.uptime = exports.memoryUsage = 
exports.uvCounters = function() {};
exports.features = {};


/***/ }),

/***/ "448a":
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__("2236");

var iterableToArray = __webpack_require__("11b0");

var unsupportedIterableToArray = __webpack_require__("6613");

var nonIterableSpread = __webpack_require__("0676");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "44ad":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var classof = __webpack_require__("c6b6");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "44d2":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var create = __webpack_require__("7c73");
var definePropertyModule = __webpack_require__("9bf2");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "44de":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "44e7":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var classof = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "466d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var anObject = __webpack_require__("825a");
var toLength = __webpack_require__("50c4");
var requireObjectCoercible = __webpack_require__("1d80");
var advanceStringIndex = __webpack_require__("8aa5");
var regExpExec = __webpack_require__("14c3");

// @@match logic
fixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.es/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = requireObjectCoercible(this);
      var matcher = regexp == undefined ? undefined : regexp[MATCH];
      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative(nativeMatch, regexp, this);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);

      if (!rx.global) return regExpExec(rx, S);

      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),

/***/ "467f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__("2d83");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "4840":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aFunction = __webpack_require__("1c0b");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ "4930":
/***/ (function(module, exports, __webpack_require__) {

var IS_NODE = __webpack_require__("605d");
var V8_VERSION = __webpack_require__("2d00");
var fails = __webpack_require__("d039");

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  // eslint-disable-next-line es/no-symbol -- required for testing
  return !Symbol.sham &&
    // Chrome 38 Symbol has incorrect toString conversion
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    (IS_NODE ? V8_VERSION === 38 : V8_VERSION > 37 && V8_VERSION < 41);
});


/***/ }),

/***/ "498a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $trim = __webpack_require__("58a8").trim;
var forcedStringTrimMethod = __webpack_require__("c8d2");

// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});


/***/ }),

/***/ "4a7b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};


/***/ }),

/***/ "4d64":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var toLength = __webpack_require__("50c4");
var toAbsoluteIndex = __webpack_require__("23cb");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "4de4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $filter = __webpack_require__("b727").filter;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "4df4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__("0366");
var toObject = __webpack_require__("7b0b");
var callWithSafeIterationClosing = __webpack_require__("9bdd");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var getIteratorMethod = __webpack_require__("35a1");

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    next = iterator.next;
    result = new C();
    for (;!(step = next.call(iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "50c4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "5135":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "5270":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");
var transformData = __webpack_require__("c401");
var isCancel = __webpack_require__("2e67");
var defaults = __webpack_require__("2444");

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "5319":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var anObject = __webpack_require__("825a");
var toLength = __webpack_require__("50c4");
var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");
var advanceStringIndex = __webpack_require__("8aa5");
var getSubstitution = __webpack_require__("0cb2");
var regExpExec = __webpack_require__("14c3");

var max = Math.max;
var min = Math.min;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {
  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];
      return replacer !== undefined
        ? replacer.call(searchValue, O, replaceValue)
        : nativeReplace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      if (
        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||
        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)
      ) {
        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);
        if (res.done) return res.value;
      }

      var rx = anObject(regexp);
      var S = String(this);

      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        results.push(result);
        if (!global) break;

        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];
});


/***/ }),

/***/ "5692":
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__("c430");
var store = __webpack_require__("c6cd");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.10.2',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "56ef":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var anObject = __webpack_require__("825a");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "5899":
/***/ (function(module, exports) {

// a string of all valid unicode whitespaces
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "58a8":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");
var whitespaces = __webpack_require__("5899");

var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = String(requireObjectCoercible($this));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ "5a30":
/***/ (function(module, exports) {

/* eslint-env browser */
module.exports = typeof self == 'object' ? self.FormData : window.FormData;


/***/ }),

/***/ "5a34":
/***/ (function(module, exports, __webpack_require__) {

var isRegExp = __webpack_require__("44e7");

module.exports = function (it) {
  if (isRegExp(it)) {
    throw TypeError("The method doesn't accept regular expressions");
  } return it;
};


/***/ }),

/***/ "5a43":
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "5bc3":
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "5c6c":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "5f02":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};


/***/ }),

/***/ "605d":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");
var global = __webpack_require__("da84");

module.exports = classof(global.process) == 'process';


/***/ }),

/***/ "60da":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var objectKeys = __webpack_require__("df75");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var toObject = __webpack_require__("7b0b");
var IndexedObject = __webpack_require__("44ad");

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "6547":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "65f0":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "6613":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("fb6a");

__webpack_require__("d3b7");

__webpack_require__("b0c0");

__webpack_require__("a630");

__webpack_require__("3ca3");

var arrayLikeToArray = __webpack_require__("5a43");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "69f3":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__("7f9a");
var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");
var createNonEnumerableProperty = __webpack_require__("9112");
var objectHas = __webpack_require__("5135");
var shared = __webpack_require__("c6cd");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    if (wmhas.call(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (objectHas(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "6d61":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var isForced = __webpack_require__("94ca");
var redefine = __webpack_require__("6eeb");
var InternalMetadataModule = __webpack_require__("f183");
var iterate = __webpack_require__("2266");
var anInstance = __webpack_require__("19aa");
var isObject = __webpack_require__("861d");
var fails = __webpack_require__("d039");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");
var setToStringTag = __webpack_require__("d44e");
var inheritIfRequired = __webpack_require__("7156");

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function (KEY) {
    var nativeMethod = NativePrototype[KEY];
    redefine(NativePrototype, KEY,
      KEY == 'add' ? function add(value) {
        nativeMethod.call(this, value === 0 ? 0 : value);
        return this;
      } : KEY == 'delete' ? function (key) {
        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
      } : KEY == 'get' ? function get(key) {
        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);
      } : KEY == 'has' ? function has(key) {
        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
      } : function set(key, value) {
        nativeMethod.call(this, key === 0 ? 0 : key, value);
        return this;
      }
    );
  };

  var REPLACE = isForced(
    CONSTRUCTOR_NAME,
    typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
      new NativeConstructor().entries().next();
    }))
  );

  if (REPLACE) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.REQUIRED = true;
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new -- required for testing
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({ global: true, forced: Constructor != NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),

/***/ "6dd8":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {*} key
         * @returns {*}
         */
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        /**
         * @returns {void}
         */
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width), height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());

var ResizeObserverEntry = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());

var ResizeObserverSPI = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
// Expose public methods of ResizeObserver.
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
})();

/* harmony default export */ __webpack_exports__["a"] = (index);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "6eeb":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var setGlobal = __webpack_require__("ce4e");
var inspectSource = __webpack_require__("8925");
var InternalStateModule = __webpack_require__("69f3");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var state;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) {
      createNonEnumerableProperty(value, 'name', key);
    }
    state = enforceInternalState(value);
    if (!state.source) {
      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');
    }
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "6f53":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var objectKeys = __webpack_require__("df75");
var toIndexedObject = __webpack_require__("fc6a");
var propertyIsEnumerable = __webpack_require__("d1e7").f;

// `Object.{ entries, values }` methods implementation
var createMethod = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {
        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

module.exports = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod(false)
};


/***/ }),

/***/ "7037":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("a4d3");

__webpack_require__("e01a");

__webpack_require__("d3b7");

__webpack_require__("d28b");

__webpack_require__("e260");

__webpack_require__("3ca3");

__webpack_require__("ddb0");

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
  }

  return _typeof(obj);
}

module.exports = _typeof;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "7156":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var setPrototypeOf = __webpack_require__("d2bb");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    typeof (NewTarget = dummy.constructor) == 'function' &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "7418":
/***/ (function(module, exports) {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "746f":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var has = __webpack_require__("5135");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineProperty = __webpack_require__("9bf2").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "7839":
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "7a77":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ "7aac":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),

/***/ "7b0b":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "7c73":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var defineProperties = __webpack_require__("37e8");
var enumBugKeys = __webpack_require__("7839");
var hiddenKeys = __webpack_require__("d012");
var html = __webpack_require__("1be4");
var documentCreateElement = __webpack_require__("cc12");
var sharedKey = __webpack_require__("f772");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    /* global ActiveXObject -- old IE */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : defineProperties(result, Properties);
};


/***/ }),

/***/ "7dd0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var createIteratorConstructor = __webpack_require__("9ed3");
var getPrototypeOf = __webpack_require__("e163");
var setPrototypeOf = __webpack_require__("d2bb");
var setToStringTag = __webpack_require__("d44e");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");
var Iterators = __webpack_require__("3f8c");
var IteratorsCore = __webpack_require__("ae93");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "7f9a":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var inspectSource = __webpack_require__("8925");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "825a":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "83ab":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "83b9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__("d925");
var combineURLs = __webpack_require__("e683");

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),

/***/ "8418":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__("c04e");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "841c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var anObject = __webpack_require__("825a");
var requireObjectCoercible = __webpack_require__("1d80");
var sameValue = __webpack_require__("129f");
var regExpExec = __webpack_require__("14c3");

// @@search logic
fixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.es/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = requireObjectCoercible(this);
      var searcher = regexp == undefined ? undefined : regexp[SEARCH];
      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative(nativeSearch, regexp, this);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);

      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});


/***/ }),

/***/ "84a2":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = throttle;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "861d":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "8875":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ "8925":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("c6cd");

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "8aa5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ "8df4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__("7a77");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "90e3":
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "9112":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "9152":
/***/ (function(module, exports) {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "9263":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpFlags = __webpack_require__("ad6d");
var stickyHelpers = __webpack_require__("9f7f");
var shared = __webpack_require__("5692");

var nativeExec = RegExp.prototype.exec;
var nativeReplace = shared('native-string-replace', String.prototype.replace);

var patchedExec = nativeExec;

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
// eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = regexpFlags.call(re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = flags.replace('y', '');
      if (flags.indexOf('g') === -1) {
        flags += 'g';
      }

      strCopy = String(str).slice(re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = nativeExec.call(sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = match.input.slice(charsAdded);
        match[0] = match[0].slice(charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "94ca":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "9523":
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "96cf":
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "970b":
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "99af":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var arraySpeciesCreate = __webpack_require__("65f0");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, forced: FORCED }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "9b42":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("a4d3");

__webpack_require__("e01a");

__webpack_require__("d3b7");

__webpack_require__("d28b");

__webpack_require__("e260");

__webpack_require__("3ca3");

__webpack_require__("ddb0");

function _iterableToArrayLimit(arr, i) {
  var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "9bdd":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var iteratorClose = __webpack_require__("2a62");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    iteratorClose(iterator);
    throw error;
  }
};


/***/ }),

/***/ "9bf2":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");
var anObject = __webpack_require__("825a");
var toPrimitive = __webpack_require__("c04e");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "9ed3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__("ae93").IteratorPrototype;
var create = __webpack_require__("7c73");
var createPropertyDescriptor = __webpack_require__("5c6c");
var setToStringTag = __webpack_require__("d44e");
var Iterators = __webpack_require__("3f8c");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "9f7f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fails = __webpack_require__("d039");

// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
// so we use an intermediate function.
function RE(s, f) {
  return RegExp(s, f);
}

exports.UNSUPPORTED_Y = fails(function () {
  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
  var re = RE('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

exports.BROKEN_CARET = fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = RE('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});


/***/ }),

/***/ "a34a":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("96cf");

/***/ }),

/***/ "a434":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var toAbsoluteIndex = __webpack_require__("23cb");
var toInteger = __webpack_require__("a691");
var toLength = __webpack_require__("50c4");
var toObject = __webpack_require__("7b0b");
var arraySpeciesCreate = __webpack_require__("65f0");
var createProperty = __webpack_require__("8418");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');

var max = Math.max;
var min = Math.min;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

// `Array.prototype.splice` method
// https://tc39.es/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = toLength(O.length);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);
    }
    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
    }
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    O.length = len - actualDeleteCount + insertCount;
    return A;
  }
});


/***/ }),

/***/ "a4b4":
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__("342f");

module.exports = /web0s(?!.*chrome)/i.test(userAgent);


/***/ }),

/***/ "a4d3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var IS_PURE = __webpack_require__("c430");
var DESCRIPTORS = __webpack_require__("83ab");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var createPropertyDescriptor = __webpack_require__("5c6c");
var nativeObjectCreate = __webpack_require__("7c73");
var objectKeys = __webpack_require__("df75");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertyNamesExternal = __webpack_require__("057f");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var shared = __webpack_require__("5692");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");
var uid = __webpack_require__("90e3");
var wellKnownSymbol = __webpack_require__("b622");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineWellKnownSymbol = __webpack_require__("746f");
var setToStringTag = __webpack_require__("d44e");
var InternalStateModule = __webpack_require__("69f3");
var $forEach = __webpack_require__("b727").forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.es/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "a559":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("cca6");

function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  module.exports["default"] = module.exports, module.exports.__esModule = true;
  return _extends.apply(this, arguments);
}

module.exports = _extends;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "a630":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var from = __webpack_require__("4df4");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  // eslint-disable-next-line es/no-array-from -- required for testing
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.es/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "a640":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("d039");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "a691":
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.es/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "a9e3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var isForced = __webpack_require__("94ca");
var redefine = __webpack_require__("6eeb");
var has = __webpack_require__("5135");
var classof = __webpack_require__("c6b6");
var inheritIfRequired = __webpack_require__("7156");
var toPrimitive = __webpack_require__("c04e");
var fails = __webpack_require__("d039");
var create = __webpack_require__("7c73");
var getOwnPropertyNames = __webpack_require__("241c").f;
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var defineProperty = __webpack_require__("9bf2").f;
var trim = __webpack_require__("58a8").trim;

var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var NumberPrototype = NativeNumber.prototype;

// Opera ~12 has broken Object#toString
var BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;

// `ToNumber` abstract operation
// https://tc39.es/ecma262/#sec-tonumber
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  var first, third, radix, maxCode, digits, length, index, code;
  if (typeof it == 'string' && it.length > 2) {
    it = trim(it);
    first = it.charCodeAt(0);
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
        default: return +it;
      }
      digits = it.slice(2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = digits.charCodeAt(index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

// `Number` constructor
// https://tc39.es/ecma262/#sec-number-constructor
if (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
  var NumberWrapper = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var dummy = this;
    return dummy instanceof NumberWrapper
      // check on 1..constructor(foo) case
      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)
        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);
  };
  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +
    // ESNext
    'fromString,range'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {
      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));
    }
  }
  NumberWrapper.prototype = NumberPrototype;
  NumberPrototype.constructor = NumberWrapper;
  redefine(global, NUMBER, NumberWrapper);
}


/***/ }),

/***/ "ab13":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};


/***/ }),

/***/ "ac1f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var exec = __webpack_require__("9263");

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ "acac":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefineAll = __webpack_require__("e2cc");
var getWeakData = __webpack_require__("f183").getWeakData;
var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var anInstance = __webpack_require__("19aa");
var iterate = __webpack_require__("2266");
var ArrayIterationModule = __webpack_require__("b727");
var $has = __webpack_require__("5135");
var InternalStateModule = __webpack_require__("69f3");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;
var find = ArrayIterationModule.find;
var findIndex = ArrayIterationModule.findIndex;
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (store) {
  return store.frozen || (store.frozen = new UncaughtFrozenStore());
};

var UncaughtFrozenStore = function () {
  this.entries = [];
};

var findUncaughtFrozen = function (store, key) {
  return find(store.entries, function (it) {
    return it[0] === key;
  });
};

UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.entries.push([key, value]);
  },
  'delete': function (key) {
    var index = findIndex(this.entries, function (it) {
      return it[0] === key;
    });
    if (~index) this.entries.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, CONSTRUCTOR_NAME);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        id: id++,
        frozen: undefined
      });
      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var data = getWeakData(anObject(key), true);
      if (data === true) uncaughtFrozenStore(state).set(key, value);
      else data[state.id] = value;
      return that;
    };

    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state)['delete'](key);
        return data && $has(data, state.id) && delete data[state.id];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state).has(key);
        return data && $has(data, state.id);
      }
    });

    redefineAll(C.prototype, IS_MAP ? {
      // 23.3.3.3 WeakMap.prototype.get(key)
      get: function get(key) {
        var state = getInternalState(this);
        if (isObject(key)) {
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state).get(key);
          return data ? data[state.id] : undefined;
        }
      },
      // 23.3.3.5 WeakMap.prototype.set(key, value)
      set: function set(key, value) {
        return define(this, key, value);
      }
    } : {
      // 23.4.3.1 WeakSet.prototype.add(value)
      add: function add(value) {
        return define(this, value, true);
      }
    });

    return C;
  }
};


/***/ }),

/***/ "ad6d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__("825a");

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "ae93":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("d039");
var getPrototypeOf = __webpack_require__("e163");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "b041":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classof = __webpack_require__("f5df");

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "b0c0":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var defineProperty = __webpack_require__("9bf2").f;

var FunctionPrototype = Function.prototype;
var FunctionPrototypeToString = FunctionPrototype.toString;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// Function instances `.name` property
// https://tc39.es/ecma262/#sec-function-instances-name
if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
  defineProperty(FunctionPrototype, NAME, {
    configurable: true,
    get: function () {
      try {
        return FunctionPrototypeToString.call(this).match(nameRE)[1];
      } catch (error) {
        return '';
      }
    }
  });
}


/***/ }),

/***/ "b50d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");
var settle = __webpack_require__("467f");
var cookies = __webpack_require__("7aac");
var buildURL = __webpack_require__("30b5");
var buildFullPath = __webpack_require__("83b9");
var parseHeaders = __webpack_require__("c345");
var isURLSameOrigin = __webpack_require__("3934");
var createError = __webpack_require__("2d83");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "b575":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var macrotask = __webpack_require__("2cf4").set;
var IS_IOS = __webpack_require__("1cdc");
var IS_WEBOS_WEBKIT = __webpack_require__("a4b4");
var IS_NODE = __webpack_require__("605d");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    then = promise.then;
    notify = function () {
      then.call(promise, flush);
    };
  // Node.js without promises
  } else if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "b622":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var shared = __webpack_require__("5692");
var has = __webpack_require__("5135");
var uid = __webpack_require__("90e3");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    if (NATIVE_SYMBOL && has(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
    }
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "b639":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__("1fb5")
var ieee754 = __webpack_require__("9152")
var isArray = __webpack_require__("e3db")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "b64b":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var toObject = __webpack_require__("7b0b");
var nativeKeys = __webpack_require__("df75");
var fails = __webpack_require__("d039");

var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "b727":
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__("0366");
var IndexedObject = __webpack_require__("44ad");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var arraySpeciesCreate = __webpack_require__("65f0");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_OUT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push.call(target, value); // filterOut
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterOut` method
  // https://github.com/tc39/proposal-array-filtering
  filterOut: createMethod(7)
};


/***/ }),

/***/ "bb21":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** `Object#toString` result references. */
var funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var splice = arrayProto.splice;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result);
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Assign cache to `_.memoize`.
memoize.Cache = MapCache;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

module.exports = memoize;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "bb2f":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "bc3a":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("cee4");

/***/ }),

/***/ "c04e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "c135":
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "c20d":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var trim = __webpack_require__("58a8").trim;
var whitespaces = __webpack_require__("5899");

var $parseInt = global.parseInt;
var hex = /^[+-]?0[Xx]/;
var FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22;

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
module.exports = FORCED ? function parseInt(string, radix) {
  var S = trim(String(string));
  return $parseInt(S, (radix >>> 0) || (hex.test(S) ? 16 : 10));
} : $parseInt;


/***/ }),

/***/ "c240":
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "c345":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "c401":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ "c430":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "c532":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__("1d2b");

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};


/***/ }),

/***/ "c6b6":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "c6cd":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var setGlobal = __webpack_require__("ce4e");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "c8af":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "c8d2":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var whitespaces = __webpack_require__("5899");

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};


/***/ }),

/***/ "c973":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("d3b7");

__webpack_require__("e6cf");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "ca84":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toIndexedObject = __webpack_require__("fc6a");
var indexOf = __webpack_require__("4d64").indexOf;
var hiddenKeys = __webpack_require__("d012");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "caad":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $includes = __webpack_require__("4d64").includes;
var addToUnscopables = __webpack_require__("44d2");

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),

/***/ "cc12":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "cca6":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var assign = __webpack_require__("60da");

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),

/***/ "cdf9":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var newPromiseCapability = __webpack_require__("f069");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "ce4e":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "cee4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");
var bind = __webpack_require__("1d2b");
var Axios = __webpack_require__("0a06");
var mergeConfig = __webpack_require__("4a7b");
var defaults = __webpack_require__("2444");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__("7a77");
axios.CancelToken = __webpack_require__("8df4");
axios.isCancel = __webpack_require__("2e67");

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__("0df6");

// Expose isAxiosError
axios.isAxiosError = __webpack_require__("5f02");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ "d012":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "d039":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "d066":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var global = __webpack_require__("da84");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "d1e7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "d28b":
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__("746f");

// `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "d2bb":
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable no-proto -- safe */
var anObject = __webpack_require__("825a");
var aPossiblePrototype = __webpack_require__("3bbe");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "d3b7":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var redefine = __webpack_require__("6eeb");
var toString = __webpack_require__("b041");

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "d44e":
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__("9bf2").f;
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "d58f":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("1c0b");
var toObject = __webpack_require__("7b0b");
var IndexedObject = __webpack_require__("44ad");
var toLength = __webpack_require__("50c4");

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod = function (IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aFunction(callbackfn);
    var O = toObject(that);
    var self = IndexedObject(O);
    var length = toLength(O.length);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw TypeError('Reduce of empty array with no initial value');
      }
    }
    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
};

module.exports = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod(true)
};


/***/ }),

/***/ "d784":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__("ac1f");
var redefine = __webpack_require__("6eeb");
var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var createNonEnumerableProperty = __webpack_require__("9112");

var SPECIES = wellKnownSymbol('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

var REPLACE = wellKnownSymbol('replace');
// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  // eslint-disable-next-line regexp/no-empty-group -- required for testing
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});

module.exports = function (KEY, length, exec, sham) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !(
      REPLACE_SUPPORTS_NAMED_GROUPS &&
      REPLACE_KEEPS_$0 &&
      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
    )) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      if (regexp.exec === RegExp.prototype.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
        }
        return { done: true, value: nativeMethod.call(str, regexp, arg2) };
      }
      return { done: false };
    }, {
      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,
      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
    });
    var stringMethod = methods[0];
    var regexMethod = methods[1];

    redefine(String.prototype, KEY, stringMethod);
    redefine(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return regexMethod.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return regexMethod.call(string, this); }
    );
  }

  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);
};


/***/ }),

/***/ "d81d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $map = __webpack_require__("b727").map;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');

// `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "d925":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "da84":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "dbb4":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var ownKeys = __webpack_require__("56ef");
var toIndexedObject = __webpack_require__("fc6a");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var createProperty = __webpack_require__("8418");

// `Object.getOwnPropertyDescriptors` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;
    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }
    return result;
  }
});


/***/ }),

/***/ "ddb0":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var ArrayIteratorMethods = __webpack_require__("e260");
var createNonEnumerableProperty = __webpack_require__("9112");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "df75":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "df7c":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "e01a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.es/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var has = __webpack_require__("5135");
var isObject = __webpack_require__("861d");
var defineProperty = __webpack_require__("9bf2").f;
var copyConstructorProperties = __webpack_require__("e893");

var NativeSymbol = global.Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "e163":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toObject = __webpack_require__("7b0b");
var sharedKey = __webpack_require__("f772");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("e177");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "e177":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "e25e":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var parseIntImplementation = __webpack_require__("c20d");

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
$({ global: true, forced: parseInt != parseIntImplementation }, {
  parseInt: parseIntImplementation
});


/***/ }),

/***/ "e260":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__("fc6a");
var addToUnscopables = __webpack_require__("44d2");
var Iterators = __webpack_require__("3f8c");
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "e2cc":
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__("6eeb");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "e3db":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "e439":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyDescriptor = __webpack_require__("06cf").f;
var DESCRIPTORS = __webpack_require__("83ab");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),

/***/ "e538":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "e667":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "e683":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "e6cf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var IS_PURE = __webpack_require__("c430");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var NativePromise = __webpack_require__("fea9");
var redefine = __webpack_require__("6eeb");
var redefineAll = __webpack_require__("e2cc");
var setToStringTag = __webpack_require__("d44e");
var setSpecies = __webpack_require__("2626");
var isObject = __webpack_require__("861d");
var aFunction = __webpack_require__("1c0b");
var anInstance = __webpack_require__("19aa");
var inspectSource = __webpack_require__("8925");
var iterate = __webpack_require__("2266");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");
var speciesConstructor = __webpack_require__("4840");
var task = __webpack_require__("2cf4").set;
var microtask = __webpack_require__("b575");
var promiseResolve = __webpack_require__("cdf9");
var hostReportErrors = __webpack_require__("44de");
var newPromiseCapabilityModule = __webpack_require__("f069");
var perform = __webpack_require__("e667");
var InternalStateModule = __webpack_require__("69f3");
var isForced = __webpack_require__("94ca");
var wellKnownSymbol = __webpack_require__("b622");
var IS_NODE = __webpack_require__("605d");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var PromiseConstructor = NativePromise;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var $fetch = getBuiltIn('fetch');
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

var FORCED = isForced(PROMISE, function () {
  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);
  if (!GLOBAL_CORE_JS_PROMISE) {
    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // We can't detect it synchronously, so just check versions
    if (V8_VERSION === 66) return true;
    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    if (!IS_NODE && !NATIVE_REJECTION_EVENT) return true;
  }
  // We need Promise#finally in the pure version for preventing prototype pollution
  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;
  // Detect correctness of subclassing with @@species support
  var promise = PromiseConstructor.resolve(1);
  var FakePromise = function (exec) {
    exec(function () { /* empty */ }, function () { /* empty */ });
  };
  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0;
    // variable length - can't use forEach
    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(state);
            state.rejection = HANDLED;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // can throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }
    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          then.call(value,
            bind(internalResolve, wrapper, state),
            bind(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromiseConstructor.prototype, {
    // `Promise.prototype.then` method
    // https://tc39.es/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.es/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && typeof NativePromise == 'function') {
    nativeThen = NativePromise.prototype.then;

    // wrap native Promise#then for native async functions
    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {
      var that = this;
      return new PromiseConstructor(function (resolve, reject) {
        nativeThen.call(that, resolve, reject);
      }).then(onFulfilled, onRejected);
    // https://github.com/zloirock/core-js/issues/640
    }, { unsafe: true });

    // wrap fetch result
    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {
      // eslint-disable-next-line no-unused-vars -- required for `.length`
      fetch: function fetch(input /* , init */) {
        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
      }
    });
  }
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = getBuiltIn(PROMISE);

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.es/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.es/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.es/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        $promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.es/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      iterate(iterable, function (promise) {
        $promiseResolve.call(C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "e893":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var ownKeys = __webpack_require__("56ef");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "e8b5":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "e95a":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var Iterators = __webpack_require__("3f8c");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "f069":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__("1c0b");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

// 25.4.1.5 NewPromiseCapability(C)
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "f0e4":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("b64b");

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "f138":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "f183":
/***/ (function(module, exports, __webpack_require__) {

var hiddenKeys = __webpack_require__("d012");
var isObject = __webpack_require__("861d");
var has = __webpack_require__("5135");
var defineProperty = __webpack_require__("9bf2").f;
var uid = __webpack_require__("90e3");
var FREEZING = __webpack_require__("bb2f");

var METADATA = uid('meta');
var id = 0;

// eslint-disable-next-line es/no-object-isextensible -- safe
var isExtensible = Object.isExtensible || function () {
  return true;
};

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + ++id, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);
  return it;
};

var meta = module.exports = {
  REQUIRED: false,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),

/***/ "f5df":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classofRaw = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "f6b4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__("c532");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "f772":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("5692");
var uid = __webpack_require__("90e3");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "f7fe":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = debounce;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__("8875")
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("159b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("b64b");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"b0c63b46-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/Chat.vue?vue&type=template&id=80d70b8e&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cs-container t-relative t-h-full t-w-full t-flex t-flex-col vuesora-override",class:_vm.brand},[_c('div',{staticClass:"cs-top t-flex-none"},[_c('div',{staticClass:"t-h-full t-w-full t-flex t-flex-row t-items-center t-place-content-between"},[_c('div',{staticClass:"t-h-full t-ml-4 t-flex t-flex-row t-items-end t-space-x-4 cs-text-sm"},[_c('a',{staticClass:"t-no-underline t-px-3 t-border-b-2 t-h-full t-flex t-flex-row t-items-center",class:_vm.getTabClasses('chat'),attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.setCurrentTab('chat')}}},[_vm._v("Chat")]),_c('a',{staticClass:"t-no-underline t-px-3 t-border-b-2 t-h-full t-flex t-flex-row t-items-center",class:_vm.getTabClasses('questions'),attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.setCurrentTab('questions')}}},[_vm._v("Questions")])]),_c('a',{staticClass:"t-no-underline t-font-semibold t-px-4 cs-text-gray t-border-b-2 t-border-transparent t-h-full t-flex t-flex-row t-items-center",attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleChatMenu()}}},[_c('i',{staticClass:"fas fa-ellipsis-v"})])]),_c('div',{staticClass:"t-relative"},[(_vm.chatMenu)?_c('div',{staticClass:"cs-top-menu cs-text-sm t-leading-relaxed t-absolute t-right-4 t-py-3 t-flex t-flex-col t-bg-black t-rounded-lg t-text-white t-z-30"},[(_vm.isAdministrator)?_c('div',{staticClass:"t-px-3 t-mb-2 t-font-semibold t-cursor-default"},[_vm._v("Moderation")]):_vm._e(),_c('div',{staticClass:"cs-top-menu-item t-px-3 t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleShowMembers()}}},[_vm._v("Participants")]),_c('div',{staticClass:"cs-top-menu-item t-px-3 t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.popoutChat()}}},[_vm._v("Pop Out Chat")]),(_vm.isAdministrator)?_c('div',{staticClass:"cs-top-menu-item t-px-3 t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleShowBannedUsers()}}},[_vm._v("Blocked Students")]):_vm._e(),(_vm.currentTab == 'questions' && _vm.isAdministrator)?_c('div',{staticClass:"cs-top-menu-item t-px-3 t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.removeAllQuestions()}}},[_vm._v("Clear All Questions")]):_vm._e()]):_vm._e()])]),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showThread),expression:"showThread"}],staticClass:"t-absolute t-top-0 t-right-0 t-left-0 t-flex t-flex-col t-z-40"},[_c('div',{staticClass:"cs-top t-flex-none"},[_c('div',{staticClass:"t-h-full t-w-full t-flex t-flex-row t-place-items-center t-justify-between"},[_c('a',{staticClass:"t-ml-3 t-no-underline t-text-white",attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.hideMessageThread()}}},[_c('i',{staticClass:"fas fa-arrow-left"}),_c('span',{staticClass:"t-ml-2"},[_vm._v("Thread")]),_c('span',{staticClass:"t-ml-3"},[_vm._v(_vm._s(_vm.$_reply_count_label))])]),_c('div',{staticClass:"t-mr-3"},[_c('i',{staticClass:"fal fa-times t-text-white t-font-semibold t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.hideMessageThread()}}})])])])]),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showMembers),expression:"showMembers"}],staticClass:"t-absolute t-inset-0 t-flex t-flex-col t-z-40"},[_c('div',{staticClass:"cs-top t-flex-none"},[_c('div',{staticClass:"t-h-full t-w-full t-flex t-flex-row t-items-center"},[_c('a',{staticClass:"t-ml-3 t-no-underline t-text-white",attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleShowMembers()}}},[_c('i',{staticClass:"fas fa-arrow-left"}),_c('span',{staticClass:"t-ml-2 cs-text-sm"},[_vm._v("Participants")])])])]),_c('div',{staticClass:"cs-body t-flex-grow t-overflow-y-auto"},[_c('div',{staticClass:"cs-members-container t-mt-1 t-p-3"},_vm._l((_vm.$_watchers),function(item){return _c('div',{key:item.id,staticClass:"t-py-2"},[_c('chat-user',{attrs:{"user":item}})],1)}),0)]),_c('div',{staticClass:"cs-footer t-flex-none t-h-8"},[_c('div',{staticClass:"t-h-full t-flex t-flex-row t-items-center t-px-3"},[_c('span',{staticClass:"cs-text-gray t-text-xs"},[_vm._v(_vm._s(_vm.$_watcher_count)+" Online")])])])]),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showBannedUsers),expression:"showBannedUsers"}],staticClass:"t-absolute t-inset-0 t-flex t-flex-col t-z-40"},[_c('div',{staticClass:"cs-top t-flex-none"},[_c('div',{staticClass:"t-h-full t-w-full t-flex t-flex-row t-items-center"},[_c('a',{staticClass:"t-ml-3 t-no-underline t-text-white",attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleShowBannedUsers()}}},[_c('i',{staticClass:"fas fa-arrow-left"}),_c('span',{staticClass:"t-ml-2 cs-text-sm"},[_vm._v("Blocked Students")])])])]),_c('div',{staticClass:"cs-body t-flex-grow t-overflow-y-auto"},[(_vm.fetchingBannedUsers || _vm.$_banned_users_count == 0)?_c('div',{staticClass:"t-mt-1 t-p-3 cs-text-gray"},[(_vm.fetchingBannedUsers)?_c('span',[_vm._v("Fetching blocked students information...")]):_vm._e(),(!_vm.fetchingBannedUsers && _vm.$_banned_users_count == 0)?_c('span',[_vm._v("There are no students blocked from this chat.")]):_vm._e()]):_vm._e(),(!_vm.fetchingBannedUsers && _vm.$_banned_users_count > 0)?_c('div',{staticClass:"cs-members-container t-mt-1 t-p-3"},_vm._l((_vm.bannedUsers),function(item){return _c('div',{key:item.id,staticClass:"t-py-2"},[_c('div',{staticClass:"cs-user t-p-3 t-rounded-md"},[_c('chat-user',{attrs:{"user":item}},[_c('div',{staticClass:"t-flex-grow t-text-right"},[_c('a',{staticClass:"cs-user-unblock cs-text-sm",attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.unblockUser(item)}}},[_c('span',[_vm._v("Unblock")]),_c('i',{staticClass:"t-ml-1 fas fa-times-circle"})])])])],1)])}),0):_vm._e()]),_c('div',{staticClass:"cs-footer t-flex-none t-h-8"},[_c('div',{staticClass:"t-h-full t-flex t-flex-row t-items-center t-px-3"},[_c('span',{staticClass:"cs-text-gray t-text-xs"},[_vm._v(_vm._s(_vm.$_watcher_count)+" Online")])])])]),_c('div',{staticClass:"cs-body t-flex-grow t-flex t-flex-col t-overflow-hidden t-relative"},[(_vm.showThread)?_c('div',{ref:"threadMessages",staticClass:"cs-messages-container t-pt-4 t-overflow-y-scroll t-z-40"},[_c('div',{staticClass:"t-border-b t-border-gray-600"},[_c('div',{staticClass:"t-my-4"},[_c('chat-message',{attrs:{"is-administrator":_vm.isAdministrator,"message":_vm.messageThread,"user-id":_vm.userId,"show-upvote":false,"show-menu":false,"show-thread":false,"brand":_vm.brand}})],1)]),_c('div',{staticClass:"cs-messages-container t-mt-4"},_vm._l((_vm.$_message_thread_replies),function(item){return _c('div',{key:item.id},[_c('chat-message',{attrs:{"is-administrator":_vm.isAdministrator,"message":item,"user-id":_vm.userId,"show-upvote":false,"show-thread":false,"brand":_vm.brand}})],1)}),0)]):_vm._e(),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.$_pinned_messages.length && _vm.currentTab == 'chat' && !_vm.showThread),expression:"$_pinned_messages.length && currentTab == 'chat' && !showThread"}],staticClass:"cs-messages-container cs-fit t-pt-4 t-pb-2 t-z-20"},_vm._l((_vm.$_pinned_messages),function(item){return _c('div',{key:item.key},[_c('chat-message',{attrs:{"is-administrator":_vm.isAdministrator,"message":item,"user-id":_vm.userId,"show-upvote":false,"show-thread":_vm.enableThread,"dropdown-menu":true,"brand":_vm.brand}})],1)}),0),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentTab == 'chat' && !_vm.showThread),expression:"currentTab == 'chat' && !showThread"}],ref:"messages",staticClass:"cs-messages-container t-px-3 t-pt-4 t-overflow-y-scroll",on:{"scroll":_vm.containerScrolled}},[(_vm.$_show_load_more_messages)?_c('div',{staticClass:"t-cursor-pointer t-pb-5 t-py-3 t-flex t-flex-row t-place-content-center",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.loadMoreMessages($event)}}},[_c('span',{staticClass:"cs-text-sm t-text-white"},[_vm._v("Load more messages")])]):_vm._e(),_vm._l((_vm.$_messages),function(item,index){return _c('div',{key:item.key},[_c('chat-message',{attrs:{"is-administrator":_vm.isAdministrator,"message":item,"user-id":_vm.userId,"show-upvote":false,"show-thread":_vm.enableThread,"show-pin":false,"dropdown-menu":index <= 1,"brand":_vm.brand}})],1)}),_vm._l((_vm.messageErrors),function(message,index){return _c('div',{key:("error-message-" + index),staticClass:"t-p-3 t-text-red-400"},[_vm._v(_vm._s(message))])})],2),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentTab == 'questions' && !_vm.showThread),expression:"currentTab == 'questions' && !showThread"}],ref:"questions",staticClass:"cs-messages-container t-pt-4 t-overflow-y-scroll",on:{"scroll":_vm.containerScrolled}},[_vm._l((_vm.$_questions),function(item,index){return _c('div',{key:item.key},[_c('chat-message',{attrs:{"is-administrator":_vm.isAdministrator,"message":item,"user-id":_vm.userId,"show-upvote":true,"show-thread":_vm.enableThread,"dropdown-menu":index < 1,"brand":_vm.brand}})],1)}),(_vm.$_questions.length == 0)?_c('div',{staticClass:"cs-text-gray t-px-3 t-py-1 cs-text-sm"},[_vm._v("There are no questions in this chat")]):_vm._e(),_vm._l((_vm.questionErrors),function(message,index){return _c('div',{key:("error-question-" + index),staticClass:"t-p-3 t-text-red-400"},[_vm._v(_vm._s(message))])})],2),(_vm.$_show_scroll)?_c('div',{staticClass:"t-absolute t-left-0 t-right-0 t-bottom-2 t-flex t-flex-row t-place-content-center"},[_c('div',{staticClass:"t-flex t-items-center t-place-content-center cs-round-btn cs-bg-brand t-text-white t-rounded-full t-cursor-pointer",class:_vm.brand,on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.scrollDown()}}},[_c('i',{staticClass:"fas fa-arrow-down"})])]):_vm._e()]),(_vm.showDialog)?_c('div',{staticClass:"cs-dialog-container t-absolute t-inset-0 t-z-50"},[_c('div',{staticClass:"t-w-full t-h-full t-relative"},[_c('div',{staticClass:"cs-dialog-overlay t-absolute t-inset-0 t-opacity-100 t-z-20",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.closeDialog()}}}),_c('div',{staticClass:"t-w-full t-h-full t-flex t-flex-col t-place-content-center t-place-items-center"},[_c('div',{staticClass:"cs-dialog-window t-rounded-lg t-flex-none t-bg-black t-z-30 t-relative"},[_c('div',{staticClass:"t-absolute t-top-2 t-right-3 t-text-white"},[_c('i',{staticClass:"fal fa-times t-font-semibold t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.closeDialog()}}})]),(_vm.userDeleteMessages != null)?_c('div',{staticClass:"t-mt-6 t-mx-8 cs-text-sm t-text-center t-text-white t-tracking-tight t-leading-relaxed"},[_vm._v("Are you sure you want to delete all user's messages from the chat?")]):_vm._e(),(_vm.questionRemove != null)?_c('div',{staticClass:"t-mt-6 t-mx-8 cs-text-sm t-text-center t-text-white t-tracking-tight t-leading-relaxed"},[_vm._v("Are you sure you want to mark this question as answered?")]):_vm._e(),(_vm.userBlock != null)?_c('div',{staticClass:"t-mt-6 t-mx-6 cs-text-sm t-text-center t-text-white t-tracking-tight t-leading-relaxed",class:{'t-pb-2': _vm.$_short_username}},[_vm._v("Are you sure you want to block "),_c('span',{staticClass:"t-font-bold"},[_vm._v(_vm._s(_vm.userBlock.displayName))]),_vm._v(" from this chat?")]):_vm._e(),_c('div',{staticClass:"t-mt-3 t-flex t-flex-row t-justify-center"},[_c('div',{staticClass:"cs-btn cs-text-sm t-cursor-pointer t-cursor-pointer t-rounded-full t-leading-none t-tracking-normal t-font-bold focus:t-outline-none focus:t-shadow-outline t-uppercase t-text-white t-w-28 t-flex t-justify-center",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.closeDialog(true)}}},[_vm._v("confirm")])])])])])]):_vm._e(),_c('chat-emoji',{attrs:{"show-window":_vm.showEmoji}}),_c('div',{staticClass:"cs-new-message-container t-flex-none box-border"},[_c('div',{staticClass:"t-h-full t-flex t-flex-col t-place-content-between t-py-2 t-px-4 t-relative"},[_c('div',{staticClass:"cs-new-message-wrapper t-rounded"},[(_vm.currentTab == 'chat')?_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(_vm.message),expression:"message"}],ref:"newMessage",staticClass:"t-resize-none cs-text-sm t-bg-black t-rounded-none",class:{'cs-typing': _vm.message != ''},attrs:{"placeholder":"Say something...","onfocus":"this.placeholder = ''","onblur":"this.placeholder = 'Say something...'","wrap":"off","rows":"1"},domProps:{"value":(_vm.message)},on:{"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.sendMessage()},"input":function($event){if($event.target.composing){ return; }_vm.message=$event.target.value}}}):_vm._e(),(_vm.currentTab == 'questions')?_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(_vm.question),expression:"question"}],staticClass:"t-resize-none cs-text-sm t-bg-black t-rounded-none",class:{'cs-typing': _vm.question != ''},attrs:{"placeholder":"Ask a question...","onfocus":"this.placeholder = ''","onblur":"this.placeholder = 'Ask a question...'","wrap":"off","rows":"1"},domProps:{"value":(_vm.question)},on:{"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.sendQuestion()},"input":function($event){if($event.target.composing){ return; }_vm.question=$event.target.value}}}):_vm._e()]),_c('div',{staticClass:"cs-new-message-menu t-absolute t-text-lg"},[(_vm.currentTab == 'chat')?_c('a',{staticClass:"cs-text-gray t-mr-3",attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleShowEmoji()}}},[_c('i',{staticClass:"fal fa-smile"})]):_vm._e(),(_vm.currentTab == 'chat')?_c('a',{staticClass:"cs-text-gray",attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.sendMessage()}}},[_c('div',{staticClass:"send-icon",class:{'blue': _vm.message != ''}})]):_vm._e(),(_vm.currentTab == 'questions')?_c('a',{staticClass:"cs-text-gray",attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.sendQuestion()}}},[_c('div',{staticClass:"send-icon",class:{'blue': _vm.question != ''}})]):_vm._e()]),_c('div',[_c('span',{staticClass:"cs-text-gray t-text-xs t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleShowMembers()}}},[_vm._v(_vm._s(_vm.$_watcher_count)+" Online")])])])])],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/Chat/Chat.vue?vue&type=template&id=80d70b8e&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("a4d3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("4de4");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("e439");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("dbb4");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js








function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("e01a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("d3b7");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("d28b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("e260");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("3ca3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("ddb0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("a630");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js








function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("fb6a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("b0c0");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js






function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("a9e3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("d81d");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.trim.js
var es_string_trim = __webpack_require__("498a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js
var es_regexp_exec = __webpack_require__("ac1f");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.search.js
var es_string_search = __webpack_require__("841c");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.splice.js
var es_array_splice = __webpack_require__("a434");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reduce.js
var es_array_reduce = __webpack_require__("13d5");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.values.js
var es_object_values = __webpack_require__("07ac");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("99af");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__("5319");

// EXTERNAL MODULE: ./node_modules/luxon/build/cjs-browser/luxon.js
var luxon = __webpack_require__("1315");

// EXTERNAL MODULE: ./node_modules/stream-chat/dist/browser.es.js
var browser_es = __webpack_require__("36c4");

// EXTERNAL MODULE: ./node_modules/axios/index.js
var axios = __webpack_require__("bc3a");
var axios_default = /*#__PURE__*/__webpack_require__.n(axios);

// CONCATENATED MODULE: ./src/assets/js/services/railchat.js

/* harmony default export */ var railchat = ({
  /**
   * Request to ban an user by his id
   *
   * @param String userId
   *
   * @returns {Promise}
   */
  banUser: function banUser(userId) {
    return axios_default.a.post('/chat/ban-user', {
      user_id: userId
    });
  },

  /**
   * Request to unban an user by his id
   *
   * @param String userId
   *
   * @returns {Promise}
   */
  unbanUser: function unbanUser(userId) {
    return axios_default.a.post('/chat/unban-user', {
      user_id: userId
    });
  },

  /**
   * Request to delete all user messages by user id
   *
   * @param String userId
   *
   * @returns {Promise}
   */
  deleteUserMessages: function deleteUserMessages(userId) {
    return axios_default.a.post('/chat/delete-user-messages', {
      user_id: userId
    });
  }
});
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"b0c63b46-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/ChatEmoji.vue?vue&type=template&id=58b3a234&
var ChatEmojivue_type_template_id_58b3a234_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"t-relative"},[(_vm.showWindow)?_c('div',{staticClass:"cs-emoji t-absolute t-right-0 t-bottom-4 t-rounded-md"},[_c('div',{staticClass:"cs-emoji-tabs t-flex t-flex-row t-items-center t-justify-between t-border-b t-border-gray-800 t-text-lg"},[_c('div',_vm._l((this.emojiData),function(emojiArray,category){return _c('a',{key:category,staticClass:"t-p-3 t-cursor-pointer",class:{'cs-text-gray': _vm.currentTab != category, 'cs-text-blue': _vm.currentTab == category},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.setCurrentTab(category)}}},[_c('i',{staticClass:"fal",class:_vm.tabIcons[category]})])}),0),_c('a',{staticClass:"t-p-2 cs-text-gray t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.closeEmojiWindow()}}},[_c('i',{staticClass:"fal fa-backspace"})])]),_c('div',{staticClass:"t-p-3"},[_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(_vm.search),expression:"search"}],staticClass:"t-resize-none t-whitespace-nowrap t-overflow-x-auto t-rounded-full cs-text-sm",attrs:{"placeholder":"Search Emojis","wrap":"off","rows":"1"},domProps:{"value":(_vm.search)},on:{"input":function($event){if($event.target.composing){ return; }_vm.search=$event.target.value}}})]),_c('div',{staticClass:"t-px-3 t-text-white t-font-semibold"},[_vm._v(_vm._s(_vm.$_current_tab_label))]),_c('div',{staticClass:"t-py-2 t-overflow-hidden"},[_c('div',{ref:"simplebar",staticClass:"cs-emoji-list"},[_c('div',{staticClass:"t-py-3 t-px-2 t-grid t-grid-cols-8 t-gap-y-3 t-text-2xl t-overflow-auto"},_vm._l((_vm.$_emoji),function(item){return _c('a',{key:item.no,staticClass:"t-text-center t-cursor-pointer",attrs:{"data-item-no":item.no},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.insertEmoji(item)}}},[_vm._v(_vm._s(item.emoji))])}),0)])])]):_vm._e()])}
var ChatEmojivue_type_template_id_58b3a234_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/Chat/ChatEmoji.vue?vue&type=template&id=58b3a234&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("caad");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("2532");

// EXTERNAL MODULE: ./src/assets/js/data/emoji.json
var emoji = __webpack_require__("433e");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("4160");

// EXTERNAL MODULE: ./node_modules/can-use-dom/index.js
var can_use_dom = __webpack_require__("0312");
var can_use_dom_default = /*#__PURE__*/__webpack_require__.n(can_use_dom);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
var es_object_assign = __webpack_require__("cca6");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.parse-int.js
var es_parse_int = __webpack_require__("e25e");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.weak-map.js
var es_weak_map = __webpack_require__("10d1");

// EXTERNAL MODULE: ./node_modules/lodash.throttle/index.js
var lodash_throttle = __webpack_require__("84a2");
var lodash_throttle_default = /*#__PURE__*/__webpack_require__.n(lodash_throttle);

// EXTERNAL MODULE: ./node_modules/lodash.debounce/index.js
var lodash_debounce = __webpack_require__("f7fe");
var lodash_debounce_default = /*#__PURE__*/__webpack_require__.n(lodash_debounce);

// EXTERNAL MODULE: ./node_modules/lodash.memoize/index.js
var lodash_memoize = __webpack_require__("bb21");
var lodash_memoize_default = /*#__PURE__*/__webpack_require__.n(lodash_memoize);

// EXTERNAL MODULE: ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var ResizeObserver_es = __webpack_require__("6dd8");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.match.js
var es_string_match = __webpack_require__("466d");

// CONCATENATED MODULE: ./node_modules/simplebar/dist/simplebar.esm.js
/**
 * SimpleBar.js - v5.3.0
 * Scrollbars, simpler.
 * https://grsmto.github.io/simplebar/
 *
 * Made by Adrien Denat from a fork by Jonathan Nicol
 * Under MIT License
 */






















var cachedScrollbarWidth = null;
var cachedDevicePixelRatio = null;

if (can_use_dom_default.a) {
  window.addEventListener('resize', function () {
    if (cachedDevicePixelRatio !== window.devicePixelRatio) {
      cachedDevicePixelRatio = window.devicePixelRatio;
      cachedScrollbarWidth = null;
    }
  });
}

function scrollbarWidth() {
  if (cachedScrollbarWidth === null) {
    if (typeof document === 'undefined') {
      cachedScrollbarWidth = 0;
      return cachedScrollbarWidth;
    }

    var body = document.body;
    var box = document.createElement('div');
    box.classList.add('simplebar-hide-scrollbar');
    body.appendChild(box);
    var width = box.getBoundingClientRect().right;
    body.removeChild(box);
    cachedScrollbarWidth = width;
  }

  return cachedScrollbarWidth;
}

// Helper function to retrieve options from element attributes
var getOptions = function getOptions(obj) {
  var options = Array.prototype.reduce.call(obj, function (acc, attribute) {
    var option = attribute.name.match(/data-simplebar-(.+)/);

    if (option) {
      var key = option[1].replace(/\W+(.)/g, function (x, chr) {
        return chr.toUpperCase();
      });

      switch (attribute.value) {
        case 'true':
          acc[key] = true;
          break;

        case 'false':
          acc[key] = false;
          break;

        case undefined:
          acc[key] = true;
          break;

        default:
          acc[key] = attribute.value;
      }
    }

    return acc;
  }, {});
  return options;
};
function getElementWindow(element) {
  if (!element || !element.ownerDocument || !element.ownerDocument.defaultView) {
    return window;
  }

  return element.ownerDocument.defaultView;
}
function getElementDocument(element) {
  if (!element || !element.ownerDocument) {
    return document;
  }

  return element.ownerDocument;
}

var simplebar_esm_SimpleBar =
/*#__PURE__*/
function () {
  function SimpleBar(element, options) {
    var _this = this;

    this.onScroll = function () {
      var elWindow = getElementWindow(_this.el);

      if (!_this.scrollXTicking) {
        elWindow.requestAnimationFrame(_this.scrollX);
        _this.scrollXTicking = true;
      }

      if (!_this.scrollYTicking) {
        elWindow.requestAnimationFrame(_this.scrollY);
        _this.scrollYTicking = true;
      }
    };

    this.scrollX = function () {
      if (_this.axis.x.isOverflowing) {
        _this.showScrollbar('x');

        _this.positionScrollbar('x');
      }

      _this.scrollXTicking = false;
    };

    this.scrollY = function () {
      if (_this.axis.y.isOverflowing) {
        _this.showScrollbar('y');

        _this.positionScrollbar('y');
      }

      _this.scrollYTicking = false;
    };

    this.onMouseEnter = function () {
      _this.showScrollbar('x');

      _this.showScrollbar('y');
    };

    this.onMouseMove = function (e) {
      _this.mouseX = e.clientX;
      _this.mouseY = e.clientY;

      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {
        _this.onMouseMoveForAxis('x');
      }

      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {
        _this.onMouseMoveForAxis('y');
      }
    };

    this.onMouseLeave = function () {
      _this.onMouseMove.cancel();

      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {
        _this.onMouseLeaveForAxis('x');
      }

      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {
        _this.onMouseLeaveForAxis('y');
      }

      _this.mouseX = -1;
      _this.mouseY = -1;
    };

    this.onWindowResize = function () {
      // Recalculate scrollbarWidth in case it's a zoom
      _this.scrollbarWidth = _this.getScrollbarWidth();

      _this.hideNativeScrollbar();
    };

    this.hideScrollbars = function () {
      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();
      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();

      if (!_this.isWithinBounds(_this.axis.y.track.rect)) {
        _this.axis.y.scrollbar.el.classList.remove(_this.classNames.visible);

        _this.axis.y.isVisible = false;
      }

      if (!_this.isWithinBounds(_this.axis.x.track.rect)) {
        _this.axis.x.scrollbar.el.classList.remove(_this.classNames.visible);

        _this.axis.x.isVisible = false;
      }
    };

    this.onPointerEvent = function (e) {
      var isWithinTrackXBounds, isWithinTrackYBounds;
      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();
      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();

      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {
        isWithinTrackXBounds = _this.isWithinBounds(_this.axis.x.track.rect);
      }

      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {
        isWithinTrackYBounds = _this.isWithinBounds(_this.axis.y.track.rect);
      } // If any pointer event is called on the scrollbar


      if (isWithinTrackXBounds || isWithinTrackYBounds) {
        // Preventing the event's default action stops text being
        // selectable during the drag.
        e.preventDefault(); // Prevent event leaking

        e.stopPropagation();

        if (e.type === 'mousedown') {
          if (isWithinTrackXBounds) {
            _this.axis.x.scrollbar.rect = _this.axis.x.scrollbar.el.getBoundingClientRect();

            if (_this.isWithinBounds(_this.axis.x.scrollbar.rect)) {
              _this.onDragStart(e, 'x');
            } else {
              _this.onTrackClick(e, 'x');
            }
          }

          if (isWithinTrackYBounds) {
            _this.axis.y.scrollbar.rect = _this.axis.y.scrollbar.el.getBoundingClientRect();

            if (_this.isWithinBounds(_this.axis.y.scrollbar.rect)) {
              _this.onDragStart(e, 'y');
            } else {
              _this.onTrackClick(e, 'y');
            }
          }
        }
      }
    };

    this.drag = function (e) {
      var eventOffset;
      var track = _this.axis[_this.draggedAxis].track;
      var trackSize = track.rect[_this.axis[_this.draggedAxis].sizeAttr];
      var scrollbar = _this.axis[_this.draggedAxis].scrollbar;
      var contentSize = _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollSizeAttr];
      var hostSize = parseInt(_this.elStyles[_this.axis[_this.draggedAxis].sizeAttr], 10);
      e.preventDefault();
      e.stopPropagation();

      if (_this.draggedAxis === 'y') {
        eventOffset = e.pageY;
      } else {
        eventOffset = e.pageX;
      } // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).


      var dragPos = eventOffset - track.rect[_this.axis[_this.draggedAxis].offsetAttr] - _this.axis[_this.draggedAxis].dragOffset; // Convert the mouse position into a percentage of the scrollbar height/width.

      var dragPerc = dragPos / (trackSize - scrollbar.size); // Scroll the content by the same percentage.

      var scrollPos = dragPerc * (contentSize - hostSize); // Fix browsers inconsistency on RTL

      if (_this.draggedAxis === 'x') {
        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? scrollPos - (trackSize + scrollbar.size) : scrollPos;
        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollPos : scrollPos;
      }

      _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollOffsetAttr] = scrollPos;
    };

    this.onEndDrag = function (e) {
      var elDocument = getElementDocument(_this.el);
      var elWindow = getElementWindow(_this.el);
      e.preventDefault();
      e.stopPropagation();

      _this.el.classList.remove(_this.classNames.dragging);

      elDocument.removeEventListener('mousemove', _this.drag, true);
      elDocument.removeEventListener('mouseup', _this.onEndDrag, true);
      _this.removePreventClickId = elWindow.setTimeout(function () {
        // Remove these asynchronously so we still suppress click events
        // generated simultaneously with mouseup.
        elDocument.removeEventListener('click', _this.preventClick, true);
        elDocument.removeEventListener('dblclick', _this.preventClick, true);
        _this.removePreventClickId = null;
      });
    };

    this.preventClick = function (e) {
      e.preventDefault();
      e.stopPropagation();
    };

    this.el = element;
    this.minScrollbarWidth = 20;
    this.options = Object.assign({}, SimpleBar.defaultOptions, {}, options);
    this.classNames = Object.assign({}, SimpleBar.defaultOptions.classNames, {}, this.options.classNames);
    this.axis = {
      x: {
        scrollOffsetAttr: 'scrollLeft',
        sizeAttr: 'width',
        scrollSizeAttr: 'scrollWidth',
        offsetSizeAttr: 'offsetWidth',
        offsetAttr: 'left',
        overflowAttr: 'overflowX',
        dragOffset: 0,
        isOverflowing: true,
        isVisible: false,
        forceVisible: false,
        track: {},
        scrollbar: {}
      },
      y: {
        scrollOffsetAttr: 'scrollTop',
        sizeAttr: 'height',
        scrollSizeAttr: 'scrollHeight',
        offsetSizeAttr: 'offsetHeight',
        offsetAttr: 'top',
        overflowAttr: 'overflowY',
        dragOffset: 0,
        isOverflowing: true,
        isVisible: false,
        forceVisible: false,
        track: {},
        scrollbar: {}
      }
    };
    this.removePreventClickId = null; // Don't re-instantiate over an existing one

    if (SimpleBar.instances.has(this.el)) {
      return;
    }

    this.recalculate = lodash_throttle_default()(this.recalculate.bind(this), 64);
    this.onMouseMove = lodash_throttle_default()(this.onMouseMove.bind(this), 64);
    this.hideScrollbars = lodash_debounce_default()(this.hideScrollbars.bind(this), this.options.timeout);
    this.onWindowResize = lodash_debounce_default()(this.onWindowResize.bind(this), 64, {
      leading: true
    });
    SimpleBar.getRtlHelpers = lodash_memoize_default()(SimpleBar.getRtlHelpers);
    this.init();
  }
  /**
   * Static properties
   */

  /**
   * Helper to fix browsers inconsistency on RTL:
   *  - Firefox inverts the scrollbar initial position
   *  - IE11 inverts both scrollbar position and scrolling offset
   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634
   */


  SimpleBar.getRtlHelpers = function getRtlHelpers() {
    var dummyDiv = document.createElement('div');
    dummyDiv.innerHTML = '<div class="hs-dummy-scrollbar-size"><div style="height: 200%; width: 200%; margin: 10px 0;"></div></div>';
    var scrollbarDummyEl = dummyDiv.firstElementChild;
    document.body.appendChild(scrollbarDummyEl);
    var dummyContainerChild = scrollbarDummyEl.firstElementChild;
    scrollbarDummyEl.scrollLeft = 0;
    var dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);
    var dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);
    scrollbarDummyEl.scrollLeft = 999;
    var dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(dummyContainerChild);
    return {
      // determines if the scrolling is responding with negative values
      isRtlScrollingInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left && dummyContainerChildOffset.left - dummyContainerScrollOffsetAfterScroll.left !== 0,
      // determines if the origin scrollbar position is inverted or not (positioned on left or right)
      isRtlScrollbarInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left
    };
  };

  SimpleBar.getOffset = function getOffset(el) {
    var rect = el.getBoundingClientRect();
    var elDocument = getElementDocument(el);
    var elWindow = getElementWindow(el);
    return {
      top: rect.top + (elWindow.pageYOffset || elDocument.documentElement.scrollTop),
      left: rect.left + (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)
    };
  };

  var _proto = SimpleBar.prototype;

  _proto.init = function init() {
    // Save a reference to the instance, so we know this DOM node has already been instancied
    SimpleBar.instances.set(this.el, this); // We stop here on server-side

    if (can_use_dom_default.a) {
      this.initDOM();
      this.scrollbarWidth = this.getScrollbarWidth();
      this.recalculate();
      this.initListeners();
    }
  };

  _proto.initDOM = function initDOM() {
    var _this2 = this;

    // make sure this element doesn't have the elements yet
    if (Array.prototype.filter.call(this.el.children, function (child) {
      return child.classList.contains(_this2.classNames.wrapper);
    }).length) {
      // assume that element has his DOM already initiated
      this.wrapperEl = this.el.querySelector("." + this.classNames.wrapper);
      this.contentWrapperEl = this.options.scrollableNode || this.el.querySelector("." + this.classNames.contentWrapper);
      this.contentEl = this.options.contentNode || this.el.querySelector("." + this.classNames.contentEl);
      this.offsetEl = this.el.querySelector("." + this.classNames.offset);
      this.maskEl = this.el.querySelector("." + this.classNames.mask);
      this.placeholderEl = this.findChild(this.wrapperEl, "." + this.classNames.placeholder);
      this.heightAutoObserverWrapperEl = this.el.querySelector("." + this.classNames.heightAutoObserverWrapperEl);
      this.heightAutoObserverEl = this.el.querySelector("." + this.classNames.heightAutoObserverEl);
      this.axis.x.track.el = this.findChild(this.el, "." + this.classNames.track + "." + this.classNames.horizontal);
      this.axis.y.track.el = this.findChild(this.el, "." + this.classNames.track + "." + this.classNames.vertical);
    } else {
      // Prepare DOM
      this.wrapperEl = document.createElement('div');
      this.contentWrapperEl = document.createElement('div');
      this.offsetEl = document.createElement('div');
      this.maskEl = document.createElement('div');
      this.contentEl = document.createElement('div');
      this.placeholderEl = document.createElement('div');
      this.heightAutoObserverWrapperEl = document.createElement('div');
      this.heightAutoObserverEl = document.createElement('div');
      this.wrapperEl.classList.add(this.classNames.wrapper);
      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);
      this.offsetEl.classList.add(this.classNames.offset);
      this.maskEl.classList.add(this.classNames.mask);
      this.contentEl.classList.add(this.classNames.contentEl);
      this.placeholderEl.classList.add(this.classNames.placeholder);
      this.heightAutoObserverWrapperEl.classList.add(this.classNames.heightAutoObserverWrapperEl);
      this.heightAutoObserverEl.classList.add(this.classNames.heightAutoObserverEl);

      while (this.el.firstChild) {
        this.contentEl.appendChild(this.el.firstChild);
      }

      this.contentWrapperEl.appendChild(this.contentEl);
      this.offsetEl.appendChild(this.contentWrapperEl);
      this.maskEl.appendChild(this.offsetEl);
      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);
      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);
      this.wrapperEl.appendChild(this.maskEl);
      this.wrapperEl.appendChild(this.placeholderEl);
      this.el.appendChild(this.wrapperEl);
    }

    if (!this.axis.x.track.el || !this.axis.y.track.el) {
      var track = document.createElement('div');
      var scrollbar = document.createElement('div');
      track.classList.add(this.classNames.track);
      scrollbar.classList.add(this.classNames.scrollbar);
      track.appendChild(scrollbar);
      this.axis.x.track.el = track.cloneNode(true);
      this.axis.x.track.el.classList.add(this.classNames.horizontal);
      this.axis.y.track.el = track.cloneNode(true);
      this.axis.y.track.el.classList.add(this.classNames.vertical);
      this.el.appendChild(this.axis.x.track.el);
      this.el.appendChild(this.axis.y.track.el);
    }

    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector("." + this.classNames.scrollbar);
    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector("." + this.classNames.scrollbar);

    if (!this.options.autoHide) {
      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);
      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);
    }

    this.el.setAttribute('data-simplebar', 'init');
  };

  _proto.initListeners = function initListeners() {
    var _this3 = this;

    var elWindow = getElementWindow(this.el); // Event listeners

    if (this.options.autoHide) {
      this.el.addEventListener('mouseenter', this.onMouseEnter);
    }

    ['mousedown', 'click', 'dblclick'].forEach(function (e) {
      _this3.el.addEventListener(e, _this3.onPointerEvent, true);
    });
    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {
      _this3.el.addEventListener(e, _this3.onPointerEvent, {
        capture: true,
        passive: true
      });
    });
    this.el.addEventListener('mousemove', this.onMouseMove);
    this.el.addEventListener('mouseleave', this.onMouseLeave);
    this.contentWrapperEl.addEventListener('scroll', this.onScroll); // Browser zoom triggers a window resize

    elWindow.addEventListener('resize', this.onWindowResize); // Hack for https://github.com/WICG/ResizeObserver/issues/38

    var resizeObserverStarted = false;
    var resizeObserver = elWindow.ResizeObserver || ResizeObserver_es["a" /* default */];
    this.resizeObserver = new resizeObserver(function () {
      if (!resizeObserverStarted) return;

      _this3.recalculate();
    });
    this.resizeObserver.observe(this.el);
    this.resizeObserver.observe(this.contentEl);
    elWindow.requestAnimationFrame(function () {
      resizeObserverStarted = true;
    }); // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.

    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);
    this.mutationObserver.observe(this.contentEl, {
      childList: true,
      subtree: true,
      characterData: true
    });
  };

  _proto.recalculate = function recalculate() {
    var elWindow = getElementWindow(this.el);
    this.elStyles = elWindow.getComputedStyle(this.el);
    this.isRtl = this.elStyles.direction === 'rtl';
    var isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;
    var isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;
    var contentElOffsetWidth = this.contentEl.offsetWidth;
    var contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;
    var elOverflowX = this.elStyles.overflowX;
    var elOverflowY = this.elStyles.overflowY;
    this.contentEl.style.padding = this.elStyles.paddingTop + " " + this.elStyles.paddingRight + " " + this.elStyles.paddingBottom + " " + this.elStyles.paddingLeft;
    this.wrapperEl.style.margin = "-" + this.elStyles.paddingTop + " -" + this.elStyles.paddingRight + " -" + this.elStyles.paddingBottom + " -" + this.elStyles.paddingLeft;
    var contentElScrollHeight = this.contentEl.scrollHeight;
    var contentElScrollWidth = this.contentEl.scrollWidth;
    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%'; // Determine placeholder size

    this.placeholderEl.style.width = isWidthAuto ? contentElOffsetWidth + "px" : 'auto';
    this.placeholderEl.style.height = contentElScrollHeight + "px";
    var contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;
    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;
    this.axis.y.isOverflowing = contentElScrollHeight > contentWrapperElOffsetHeight; // Set isOverflowing to false if user explicitely set hidden overflow

    this.axis.x.isOverflowing = elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;
    this.axis.y.isOverflowing = elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;
    this.axis.x.forceVisible = this.options.forceVisible === 'x' || this.options.forceVisible === true;
    this.axis.y.forceVisible = this.options.forceVisible === 'y' || this.options.forceVisible === true;
    this.hideNativeScrollbar(); // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)

    var offsetForXScrollbar = this.axis.x.isOverflowing ? this.scrollbarWidth : 0;
    var offsetForYScrollbar = this.axis.y.isOverflowing ? this.scrollbarWidth : 0;
    this.axis.x.isOverflowing = this.axis.x.isOverflowing && contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;
    this.axis.y.isOverflowing = this.axis.y.isOverflowing && contentElScrollHeight > contentWrapperElOffsetHeight - offsetForXScrollbar;
    this.axis.x.scrollbar.size = this.getScrollbarSize('x');
    this.axis.y.scrollbar.size = this.getScrollbarSize('y');
    this.axis.x.scrollbar.el.style.width = this.axis.x.scrollbar.size + "px";
    this.axis.y.scrollbar.el.style.height = this.axis.y.scrollbar.size + "px";
    this.positionScrollbar('x');
    this.positionScrollbar('y');
    this.toggleTrackVisibility('x');
    this.toggleTrackVisibility('y');
  }
  /**
   * Calculate scrollbar size
   */
  ;

  _proto.getScrollbarSize = function getScrollbarSize(axis) {
    if (axis === void 0) {
      axis = 'y';
    }

    if (!this.axis[axis].isOverflowing) {
      return 0;
    }

    var contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];
    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];
    var scrollbarSize;
    var scrollbarRatio = trackSize / contentSize; // Calculate new height/position of drag handle.

    scrollbarSize = Math.max(~~(scrollbarRatio * trackSize), this.options.scrollbarMinSize);

    if (this.options.scrollbarMaxSize) {
      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);
    }

    return scrollbarSize;
  };

  _proto.positionScrollbar = function positionScrollbar(axis) {
    if (axis === void 0) {
      axis = 'y';
    }

    if (!this.axis[axis].isOverflowing) {
      return;
    }

    var contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];
    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];
    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);
    var scrollbar = this.axis[axis].scrollbar;
    var scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];
    scrollOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollOffset : scrollOffset;
    var scrollPourcent = scrollOffset / (contentSize - hostSize);
    var handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);
    handleOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? handleOffset + (trackSize - scrollbar.size) : handleOffset;
    scrollbar.el.style.transform = axis === 'x' ? "translate3d(" + handleOffset + "px, 0, 0)" : "translate3d(0, " + handleOffset + "px, 0)";
  };

  _proto.toggleTrackVisibility = function toggleTrackVisibility(axis) {
    if (axis === void 0) {
      axis = 'y';
    }

    var track = this.axis[axis].track.el;
    var scrollbar = this.axis[axis].scrollbar.el;

    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {
      track.style.visibility = 'visible';
      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';
    } else {
      track.style.visibility = 'hidden';
      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';
    } // Even if forceVisible is enabled, scrollbar itself should be hidden


    if (this.axis[axis].isOverflowing) {
      scrollbar.style.display = 'block';
    } else {
      scrollbar.style.display = 'none';
    }
  };

  _proto.hideNativeScrollbar = function hideNativeScrollbar() {
    this.offsetEl.style[this.isRtl ? 'left' : 'right'] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? "-" + this.scrollbarWidth + "px" : 0;
    this.offsetEl.style.bottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? "-" + this.scrollbarWidth + "px" : 0;
  }
  /**
   * On scroll event handling
   */
  ;

  _proto.onMouseMoveForAxis = function onMouseMoveForAxis(axis) {
    if (axis === void 0) {
      axis = 'y';
    }

    this.axis[axis].track.rect = this.axis[axis].track.el.getBoundingClientRect();
    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();
    var isWithinScrollbarBoundsX = this.isWithinBounds(this.axis[axis].scrollbar.rect);

    if (isWithinScrollbarBoundsX) {
      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);
    } else {
      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);
    }

    if (this.isWithinBounds(this.axis[axis].track.rect)) {
      this.showScrollbar(axis);
      this.axis[axis].track.el.classList.add(this.classNames.hover);
    } else {
      this.axis[axis].track.el.classList.remove(this.classNames.hover);
    }
  };

  _proto.onMouseLeaveForAxis = function onMouseLeaveForAxis(axis) {
    if (axis === void 0) {
      axis = 'y';
    }

    this.axis[axis].track.el.classList.remove(this.classNames.hover);
    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);
  };

  /**
   * Show scrollbar
   */
  _proto.showScrollbar = function showScrollbar(axis) {
    if (axis === void 0) {
      axis = 'y';
    }

    var scrollbar = this.axis[axis].scrollbar.el;

    if (!this.axis[axis].isVisible) {
      scrollbar.classList.add(this.classNames.visible);
      this.axis[axis].isVisible = true;
    }

    if (this.options.autoHide) {
      this.hideScrollbars();
    }
  }
  /**
   * Hide Scrollbar
   */
  ;

  /**
   * on scrollbar handle drag movement starts
   */
  _proto.onDragStart = function onDragStart(e, axis) {
    if (axis === void 0) {
      axis = 'y';
    }

    var elDocument = getElementDocument(this.el);
    var elWindow = getElementWindow(this.el);
    var scrollbar = this.axis[axis].scrollbar; // Measure how far the user's mouse is from the top of the scrollbar drag handle.

    var eventOffset = axis === 'y' ? e.pageY : e.pageX;
    this.axis[axis].dragOffset = eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];
    this.draggedAxis = axis;
    this.el.classList.add(this.classNames.dragging);
    elDocument.addEventListener('mousemove', this.drag, true);
    elDocument.addEventListener('mouseup', this.onEndDrag, true);

    if (this.removePreventClickId === null) {
      elDocument.addEventListener('click', this.preventClick, true);
      elDocument.addEventListener('dblclick', this.preventClick, true);
    } else {
      elWindow.clearTimeout(this.removePreventClickId);
      this.removePreventClickId = null;
    }
  }
  /**
   * Drag scrollbar handle
   */
  ;

  _proto.onTrackClick = function onTrackClick(e, axis) {
    var _this4 = this;

    if (axis === void 0) {
      axis = 'y';
    }

    if (!this.options.clickOnTrack) return;
    var elWindow = getElementWindow(this.el);
    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();
    var scrollbar = this.axis[axis].scrollbar;
    var scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];
    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);
    var scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];
    var t = axis === 'y' ? this.mouseY - scrollbarOffset : this.mouseX - scrollbarOffset;
    var dir = t < 0 ? -1 : 1;
    var scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;

    var scrollTo = function scrollTo() {
      if (dir === -1) {
        if (scrolled > scrollSize) {
          var _this4$contentWrapper;

          scrolled -= _this4.options.clickOnTrackSpeed;

          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper = {}, _this4$contentWrapper[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper));

          elWindow.requestAnimationFrame(scrollTo);
        }
      } else {
        if (scrolled < scrollSize) {
          var _this4$contentWrapper2;

          scrolled += _this4.options.clickOnTrackSpeed;

          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper2 = {}, _this4$contentWrapper2[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper2));

          elWindow.requestAnimationFrame(scrollTo);
        }
      }
    };

    scrollTo();
  }
  /**
   * Getter for content element
   */
  ;

  _proto.getContentElement = function getContentElement() {
    return this.contentEl;
  }
  /**
   * Getter for original scrolling element
   */
  ;

  _proto.getScrollElement = function getScrollElement() {
    return this.contentWrapperEl;
  };

  _proto.getScrollbarWidth = function getScrollbarWidth() {
    // Try/catch for FF 56 throwing on undefined computedStyles
    try {
      // Detect browsers supporting CSS scrollbar styling and do not calculate
      if (getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar').display === 'none' || 'scrollbarWidth' in document.documentElement.style || '-ms-overflow-style' in document.documentElement.style) {
        return 0;
      } else {
        return scrollbarWidth();
      }
    } catch (e) {
      return scrollbarWidth();
    }
  };

  _proto.removeListeners = function removeListeners() {
    var _this5 = this;

    var elWindow = getElementWindow(this.el); // Event listeners

    if (this.options.autoHide) {
      this.el.removeEventListener('mouseenter', this.onMouseEnter);
    }

    ['mousedown', 'click', 'dblclick'].forEach(function (e) {
      _this5.el.removeEventListener(e, _this5.onPointerEvent, true);
    });
    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {
      _this5.el.removeEventListener(e, _this5.onPointerEvent, {
        capture: true,
        passive: true
      });
    });
    this.el.removeEventListener('mousemove', this.onMouseMove);
    this.el.removeEventListener('mouseleave', this.onMouseLeave);

    if (this.contentWrapperEl) {
      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);
    }

    elWindow.removeEventListener('resize', this.onWindowResize);

    if (this.mutationObserver) {
      this.mutationObserver.disconnect();
    }

    if (this.resizeObserver) {
      this.resizeObserver.disconnect();
    } // Cancel all debounced functions


    this.recalculate.cancel();
    this.onMouseMove.cancel();
    this.hideScrollbars.cancel();
    this.onWindowResize.cancel();
  }
  /**
   * UnMount mutation observer and delete SimpleBar instance from DOM element
   */
  ;

  _proto.unMount = function unMount() {
    this.removeListeners();
    SimpleBar.instances.delete(this.el);
  }
  /**
   * Check if mouse is within bounds
   */
  ;

  _proto.isWithinBounds = function isWithinBounds(bbox) {
    return this.mouseX >= bbox.left && this.mouseX <= bbox.left + bbox.width && this.mouseY >= bbox.top && this.mouseY <= bbox.top + bbox.height;
  }
  /**
   * Find element children matches query
   */
  ;

  _proto.findChild = function findChild(el, query) {
    var matches = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;
    return Array.prototype.filter.call(el.children, function (child) {
      return matches.call(child, query);
    })[0];
  };

  return SimpleBar;
}();

simplebar_esm_SimpleBar.defaultOptions = {
  autoHide: true,
  forceVisible: false,
  clickOnTrack: true,
  clickOnTrackSpeed: 40,
  classNames: {
    contentEl: 'simplebar-content',
    contentWrapper: 'simplebar-content-wrapper',
    offset: 'simplebar-offset',
    mask: 'simplebar-mask',
    wrapper: 'simplebar-wrapper',
    placeholder: 'simplebar-placeholder',
    scrollbar: 'simplebar-scrollbar',
    track: 'simplebar-track',
    heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',
    heightAutoObserverEl: 'simplebar-height-auto-observer',
    visible: 'simplebar-visible',
    horizontal: 'simplebar-horizontal',
    vertical: 'simplebar-vertical',
    hover: 'simplebar-hover',
    dragging: 'simplebar-dragging'
  },
  scrollbarMinSize: 25,
  scrollbarMaxSize: 0,
  timeout: 1000
};
simplebar_esm_SimpleBar.instances = new WeakMap();

simplebar_esm_SimpleBar.initDOMLoadedElements = function () {
  document.removeEventListener('DOMContentLoaded', this.initDOMLoadedElements);
  window.removeEventListener('load', this.initDOMLoadedElements);
  Array.prototype.forEach.call(document.querySelectorAll('[data-simplebar]'), function (el) {
    if (el.getAttribute('data-simplebar') !== 'init' && !simplebar_esm_SimpleBar.instances.has(el)) new simplebar_esm_SimpleBar(el, getOptions(el.attributes));
  });
};

simplebar_esm_SimpleBar.removeObserver = function () {
  this.globalObserver.disconnect();
};

simplebar_esm_SimpleBar.initHtmlApi = function () {
  this.initDOMLoadedElements = this.initDOMLoadedElements.bind(this); // MutationObserver is IE11+

  if (typeof MutationObserver !== 'undefined') {
    // Mutation observer to observe dynamically added elements
    this.globalObserver = new MutationObserver(simplebar_esm_SimpleBar.handleMutations);
    this.globalObserver.observe(document, {
      childList: true,
      subtree: true
    });
  } // Taken from jQuery `ready` function
  // Instantiate elements already present on the page


  if (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll) {
    // Handle it asynchronously to allow scripts the opportunity to delay init
    window.setTimeout(this.initDOMLoadedElements);
  } else {
    document.addEventListener('DOMContentLoaded', this.initDOMLoadedElements);
    window.addEventListener('load', this.initDOMLoadedElements);
  }
};

simplebar_esm_SimpleBar.handleMutations = function (mutations) {
  mutations.forEach(function (mutation) {
    Array.prototype.forEach.call(mutation.addedNodes, function (addedNode) {
      if (addedNode.nodeType === 1) {
        if (addedNode.hasAttribute('data-simplebar')) {
          !simplebar_esm_SimpleBar.instances.has(addedNode) && new simplebar_esm_SimpleBar(addedNode, getOptions(addedNode.attributes));
        } else {
          Array.prototype.forEach.call(addedNode.querySelectorAll('[data-simplebar]'), function (el) {
            if (el.getAttribute('data-simplebar') !== 'init' && !simplebar_esm_SimpleBar.instances.has(el)) new simplebar_esm_SimpleBar(el, getOptions(el.attributes));
          });
        }
      }
    });
    Array.prototype.forEach.call(mutation.removedNodes, function (removedNode) {
      if (removedNode.nodeType === 1) {
        if (removedNode.hasAttribute('[data-simplebar="init"]')) {
          simplebar_esm_SimpleBar.instances.has(removedNode) && simplebar_esm_SimpleBar.instances.get(removedNode).unMount();
        } else {
          Array.prototype.forEach.call(removedNode.querySelectorAll('[data-simplebar="init"]'), function (el) {
            simplebar_esm_SimpleBar.instances.has(el) && simplebar_esm_SimpleBar.instances.get(el).unMount();
          });
        }
      }
    });
  });
};

simplebar_esm_SimpleBar.getOptions = getOptions;
/**
 * HTML API
 * Called only in a browser env.
 */

if (can_use_dom_default.a) {
  simplebar_esm_SimpleBar.initHtmlApi();
}

/* harmony default export */ var simplebar_esm = (simplebar_esm_SimpleBar);
//# sourceMappingURL=simplebar.esm.js.map

// EXTERNAL MODULE: ./node_modules/simplebar/dist/simplebar.min.css
var simplebar_min = __webpack_require__("f138");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/ChatEmoji.vue?vue&type=script&lang=js&





//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var ChatEmojivue_type_script_lang_js_ = ({
  name: 'ChatEmoji',
  props: {
    showWindow: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    }
  },
  data: function data() {
    return {
      emojiData: {},
      tabIcons: {
        "Smileys & People": "fa-smile",
        "Animals & Nature": "fa-leaf",
        "Food & Drink": "fa-hamburger",
        "Travel & Places": "fa-globe",
        "Activities": "fa-football-ball",
        "Objects": "fa-lightbulb",
        "Symbols": "fa-peace",
        "Flags": "fa-flag"
      },
      currentTab: 'Smileys & People',
      search: '',
      simpleBar: null
    };
  },
  watch: {
    showWindow: function showWindow(val) {
      var _this = this;

      if (val) {
        this.$nextTick(function () {
          _this.simpleBar = new simplebar_esm(_this.$refs.simplebar, {
            autoHide: false
          });
        });
      }
    }
  },
  computed: {
    $_emoji: {
      cache: false,
      get: function get() {
        var _this2 = this;

        return this.emojiData[this.currentTab].filter(function (item) {
          return !_this2.search || item.keywords.filter(function (keyword) {
            return keyword.includes(_this2.search);
          }).length > 0;
        });
      }
    },
    $_current_tab_label: {
      cache: false,
      get: function get() {
        return this.currentTab;
      }
    }
  },
  mounted: function mounted() {
    this.emojiData = emoji;
  },
  methods: {
    setCurrentTab: function setCurrentTab(tab) {
      var _this3 = this;

      this.currentTab = tab;
      this.$nextTick(function () {
        _this3.simpleBar.recalculate();
      });
    },
    insertEmoji: function insertEmoji(emoji) {
      this.$root.$emit('insertEmoji', emoji);
    },
    closeEmojiWindow: function closeEmojiWindow() {
      this.search = '';
      this.$root.$emit('closeEmojiWindow', {});
    }
  }
});
// CONCATENATED MODULE: ./src/components/Chat/ChatEmoji.vue?vue&type=script&lang=js&
 /* harmony default export */ var Chat_ChatEmojivue_type_script_lang_js_ = (ChatEmojivue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
        injectStyles.call(
          this,
          (options.functional ? this.parent : this).$root.$options.shadowRoot
        )
      }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./src/components/Chat/ChatEmoji.vue





/* normalize component */

var component = normalizeComponent(
  Chat_ChatEmojivue_type_script_lang_js_,
  ChatEmojivue_type_template_id_58b3a234_render,
  ChatEmojivue_type_template_id_58b3a234_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var ChatEmoji = (component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"b0c63b46-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/ChatMessage.vue?vue&type=template&id=5694cdd8&
var ChatMessagevue_type_template_id_5694cdd8_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:"msg",staticClass:"cs-message t-p-3 t-rounded-md t-relative t-top-0",class:{'system': _vm.message.type == 'system', 'pinned': _vm.message.pinned && _vm.showPin},on:{"mouseleave":function($event){return _vm.closeMessageMenus()},"click":function($event){$event.stopPropagation();return _vm.closeMessageMenus()}}},[(_vm.message.pinned && _vm.showPin)?_c('div',{staticClass:"t-max-w-full"},[_c('div',{staticClass:"cs-pin-container"},[_c('a',{staticClass:"cs-text-sm cs-text-gray t-flex t-flex-row t-items-center",attrs:{"href":"#"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.unpinMessage()}}},[_c('i',{staticClass:"fal fa-thumbtack"}),_c('span',{staticClass:"t-ml-1 leading-none"},[_vm._v("Pinned")])])])]):_vm._e(),(_vm.messageEdit.id != _vm.message.id && _vm.message.type != 'system')?_c('div',{staticClass:"t-flex t-flex-col t-max-w-full"},[_c('chat-user',{attrs:{"user":_vm.message.user},scopedSlots:_vm._u([{key:"footer",fn:function(){return [_c('div',{staticClass:"cs-message-text t-whitespace-normal cs-text-sm",domProps:{"innerHTML":_vm._s(_vm.message.text)}}),(_vm.$_has_reactions || _vm.showUpvote)?_c('div',{staticClass:"t-inline-flex t-items-center"},[(_vm.showUpvote)?_c('div',{staticClass:"cs-upvote t-flex t-flex-row t-items-center t-px-3 t-rounded-full cs-text-xs",class:_vm.$_message_upvote_class,on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleUpvote()}}},[_c('i',{staticClass:"cs-icon fas fa-arrow-up"}),_c('span',{staticClass:"cs-reaction-count"},[_vm._v(_vm._s(_vm.$_message_upvote))])]):_vm._e(),(_vm.$_has_reactions)?_c('div',{staticClass:"t-flex t-flex-row t-text-gray-500 t-cursor-pointer"},_vm._l((_vm.$_message_reactions),function(count,reaction){return _c('div',{key:("message-reaction-" + reaction),staticClass:"t-flex t-flex-row t-place-content-center t-p-1",attrs:{"title":_vm.getReactionUsers(reaction)},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleMessageReaction(reaction)}}},[_c('span',[_vm._v(_vm._s(_vm.getReactionEmoji(reaction)))]),(count > 1)?_c('span',{staticClass:"t-text-xs t-text-white t-ml-1"},[_vm._v(_vm._s(count))]):_vm._e()])}),0):_vm._e()]):_vm._e(),(_vm.message.reply_count && _vm.showThread)?_c('div',{staticClass:"t-inline-flex"},[_c('a',{staticClass:"t-flex t-flex-row t-content-end",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.messageThread()}}},[_c('div',{staticClass:"t-transform t--rotate-180"},[_c('i',{staticClass:"fal fa-reply"})]),_c('span',{staticClass:"t-ml-1 cs-text-sm"},[_vm._v(_vm._s(_vm.$_reply_count_label))])])]):_vm._e()]},proxy:true}],null,false,401509462)}),(_vm.showMenu)?_c('chat-message-menu',{attrs:{"is-administrator":_vm.isAdministrator,"message":_vm.message,"message-reactions":_vm.messageReactions,"user-id":_vm.userId,"show-thread":_vm.showThread,"show-upvote":_vm.showUpvote,"dropdown-menu":_vm.dropdownMenu,"pinned-message":_vm.showPin}}):_vm._e()],1):_vm._e(),(_vm.messageEdit.id == _vm.message.id)?_c('div',[_c('div',{staticClass:"cs-message-edit"},[_c('textarea',{directives:[{name:"model",rawName:"v-model",value:(_vm.messageEdit.text),expression:"messageEdit.text"}],staticClass:"cs-text-sm t-p-2 t-bg-black t-text-white t-resize-none t-rounded-md t-border-0",domProps:{"value":(_vm.messageEdit.text)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(_vm.messageEdit, "text", $event.target.value)}}}),_c('div',{staticClass:"t-flex t-flex-row t-justify-end t-mt-2"},[_c('div',{staticClass:"cs-btn-outline-white t-cursor-pointer t-rounded-full t-leading-none t-font-bold focus:t-outline-none focus:t-shadow-outline t-uppercase t-border-2 t-border-white t-text-white t-w-28 t-flex t-items-center t-justify-center t-mr-2",attrs:{"title":"Cancel message edit"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.cancelMessageEdit()}}},[_vm._v("Cancel")]),_c('div',{staticClass:"cs-btn-save t-cursor-pointer t-cursor-pointer t-rounded-full t-leading-none t-font-bold focus:t-outline-none focus:t-shadow-outline t-uppercase t-border-2 t-text-white t-w-28 t-flex t-items-center t-justify-center",class:_vm.brand,attrs:{"title":"Save message updates"},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.saveMessageEdit()}}},[_vm._v("Save")])])])]):_vm._e(),(_vm.message.type == 'system')?_c('div',{staticClass:"t-py-2 t-text-white cs-text-sm"},[_vm._v(" "+_vm._s(_vm.message.text)+" ")]):_vm._e()])}
var ChatMessagevue_type_template_id_5694cdd8_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/Chat/ChatMessage.vue?vue&type=template&id=5694cdd8&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js
var es_string_split = __webpack_require__("1276");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"b0c63b46-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/ChatMessageMenu.vue?vue&type=template&id=6b5dfde9&
var ChatMessageMenuvue_type_template_id_6b5dfde9_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cs-message-menu t-absolute t-text-base"},[_c('div',{staticClass:"t-relative"},[(_vm.messageMenu)?_c('div',{staticClass:"cs-sub-menu t-absolute t-right-0 t-bottom-0 t-w-44 t-py-3 t-flex t-flex-col t-bg-black t-rounded-lg t-text-white cs-text-sm t-z-50",class:{'cs-downdown':_vm.dropdownMenu}},[(_vm.message.user.id != _vm.userId && !_vm.isAdministrator)?_c('div',[_c('a',{staticClass:"cs-sub-menu-item t-px-3 t-no-underline t-text-white",attrs:{"href":_vm.message.user.profileUrl,"target":"_blank"}},[_vm._v("View Profile")])]):_vm._e(),(_vm.message.user.id == _vm.userId)?_c('div',{class:{'t-mb-2': _vm.isAdministrator}},[_c('div',{staticClass:"cs-sub-menu-item t-px-3 t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.editMessage()}}},[_vm._v("Edit Message")]),_c('div',{staticClass:"cs-sub-menu-item t-px-3 t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.removeMessage()}}},[_vm._v("Delete")])]):_vm._e(),(_vm.isAdministrator)?_c('div',[_c('div',{staticClass:"t-px-3 t-mb-2 t-font-semibold t-cursor-default"},[_vm._v("Moderation")]),(_vm.$_show_pin)?_c('div',{staticClass:"cs-sub-menu-item t-px-3 t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.pinMessage()}}},[_vm._v("Pin Message")]):_vm._e(),(_vm.$_show_unpin)?_c('div',{staticClass:"cs-sub-menu-item t-px-3 t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.unpinMessage()}}},[_vm._v("Unpin Message")]):_vm._e(),(_vm.message.user.id != _vm.userId)?_c('div',{staticClass:"cs-sub-menu-item t-px-3 t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.removeMessage()}}},[_vm._v("Remove Message")]):_vm._e(),(_vm.message.user.id != _vm.userId)?_c('div',{staticClass:"cs-sub-menu-item t-px-3 t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.removeAllMessages()}}},[_vm._v("Remove All Messages")]):_vm._e(),(_vm.message.user.id != _vm.userId)?_c('div',{staticClass:"cs-sub-menu-item t-px-3 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.blockUser()}}},[_vm._v("Block Student")]):_vm._e()]):_vm._e()]):_vm._e(),(_vm.messageReact)?_c('div',{staticClass:"cs-react-menu t-absolute t-right-0",class:{'cs-downdown':_vm.dropdownMenu}},[_c('div',{staticClass:"t-flex t-flex-row t-bg-black t-rounded-full t-text-center space-x-1 t-py-2 t-px-3 t-mb-4"},_vm._l((_vm.messageReactions),function(emoji,reaction){return _c('div',{key:("add-reaction-" + reaction),staticClass:"t-text-xl t-cursor-pointer t-p-1 t-px-0.5",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.reactToMessage(reaction)}}},[_c('span',[_vm._v(_vm._s(emoji))])])}),0)]):_vm._e()]),_c('div',{staticClass:"cs-main-menu t-flex t-flex-row t-rounded-full t-cursor-pointer t-px-1",class:{ 'cs-menu-opened': _vm.messageMenu || _vm.messageReact }},[_c('div',{staticClass:"cs-divide-right t-px-2 cs-text-xs t-flex t-flex-row t-items-center t-cursor-default"},[_c('span',[_vm._v(_vm._s(_vm.$_message_time))])]),(_vm.showUpvote && _vm.isAdministrator)?_c('div',{staticClass:"cs-divide-right cs-tooltip-container t-px-2 cs-text-sm t-relative",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.markAsAnswered()}}},[_c('i',{staticClass:"fas fa-check"}),_c('div',{staticClass:"cs-tooltip t-absolute t-rounded-md t-px-2 t-py-1 t-text-xs t-text-white t-overflow-hidden t-whitespace-nowrap"},[_vm._v("Mark as Answered")]),_c('div',{staticClass:"cs-tooltip-arrow t-absolute t-transform t-rotate-45"})]):_vm._e(),(!_vm.showUpvote)?_c('div',{staticClass:"cs-divide-right cs-tooltip-container t-px-2 cs-text-sm t-relative",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleMessageReact()}}},[_c('i',{staticClass:"fas fa-smile-plus"}),_c('div',{staticClass:"cs-tooltip t-absolute t-rounded-md t-px-2 t-py-1 t-text-xs t-text-white t-overflow-hidden t-whitespace-nowrap"},[_vm._v("Add Reaction")]),_c('div',{staticClass:"cs-tooltip-arrow t-absolute t-transform t-rotate-45"})]):_vm._e(),(_vm.showThread)?_c('div',{staticClass:"cs-divide-right t-px-2 cs-text-sm",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.messageThread()}}},[_c('i',{staticClass:"fal fa-reply-all"})]):_vm._e(),_c('div',{staticClass:"t-px-2 cs-text-sm",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.toggleMessageMenu()}}},[_c('i',{staticClass:"fas fa-ellipsis-h"})])])])}
var ChatMessageMenuvue_type_template_id_6b5dfde9_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/Chat/ChatMessageMenu.vue?vue&type=template&id=6b5dfde9&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/ChatMessageMenu.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ var ChatMessageMenuvue_type_script_lang_js_ = ({
  name: 'ChatMessageMenu',
  props: {
    message: {
      type: Object,
      default: function _default() {
        return {
          id: '',
          type: '',
          text: '',
          user: {
            displayName: '',
            avatarUrl: '',
            profileUrl: '',
            role: '',
            accessLevelName: ''
          }
        };
      }
    },
    messageReactions: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    userId: {
      type: String
    },
    isAdministrator: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    },
    showThread: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    dropdownMenu: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    },
    showUpvote: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    pinnedMessage: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    }
  },
  data: function data() {
    return {
      messageMenu: false,
      messageReact: false
    };
  },
  computed: {
    $_message_time: {
      get: function get() {
        return this.message.createdAt.toFormat('hh:mma');
      }
    },
    $_show_pin: {
      get: function get() {
        return this.isAdministrator && !this.message.pinned && this.message.type != 'reply' && !this.showUpvote;
      }
    },
    $_show_unpin: {
      get: function get() {
        return this.isAdministrator && this.message.pinned && this.message.type != 'reply' && !this.showUpvote;
      }
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.$root.$on('messageMenuToggled', function (_ref) {
      var message = _ref.message;

      if (message.id != _this.message.id) {
        _this.messageReact = false;
        _this.messageMenu = false;
      }
    });
    this.$root.$on('messageThread', function () {
      _this.messageReact = false;
      _this.messageMenu = false;
    });
    this.$root.$on('closeMessageMenus', function () {
      if (_this.messageReact || _this.messageMenu) {
        _this.$root.$emit('messageMenuToggled', {
          message: _this.message,
          value: false
        });
      }

      _this.messageReact = false;
      _this.messageMenu = false;
    });
  },
  methods: {
    toggleMessageMenu: function toggleMessageMenu() {
      this.messageMenu = !this.messageMenu;
      this.messageReact = false;
      this.$root.$emit('messageMenuToggled', {
        message: this.message,
        value: this.messageMenu
      });
    },
    toggleMessageReact: function toggleMessageReact() {
      this.messageReact = !this.messageReact;
      this.messageMenu = false;
      this.$root.$emit('messageMenuToggled', {
        message: this.message,
        value: this.messageReact
      });
    },
    messageThread: function messageThread() {
      this.$root.$emit('messageThread', {
        message: this.message
      });
      this.messageReact = false;
      this.messageMenu = false;
      this.$root.$emit('messageMenuToggled', {
        message: this.message,
        value: this.messageMenu
      });
    },
    editMessage: function editMessage() {
      this.$root.$emit('editMessage', {
        message: this.message,
        pinnedMessage: this.pinnedMessage
      });
    },
    removeMessage: function removeMessage() {
      this.$root.$emit('removeMessage', {
        message: this.message
      });
    },
    removeAllMessages: function removeAllMessages() {
      this.$root.$emit('removeAllMessages', {
        user: this.message.user
      });
    },
    blockUser: function blockUser() {
      this.$root.$emit('blockUser', {
        user: this.message.user
      });
    },
    reactToMessage: function reactToMessage(reaction) {
      this.messageReact = false;
      this.$root.$emit('messageMenuToggled', {
        message: this.message,
        value: this.messageReact
      });
      this.$root.$emit('toggleMessageReaction', {
        message: this.message,
        reaction: reaction
      });
    },
    pinMessage: function pinMessage() {
      this.$root.$emit('pinMessage', {
        message: this.message
      });
    },
    unpinMessage: function unpinMessage() {
      this.$root.$emit('unpinMessage', {
        message: this.message
      });
    },
    markAsAnswered: function markAsAnswered() {
      this.$root.$emit('markAsAnswered', {
        message: this.message
      });
    }
  }
});
// CONCATENATED MODULE: ./src/components/Chat/ChatMessageMenu.vue?vue&type=script&lang=js&
 /* harmony default export */ var Chat_ChatMessageMenuvue_type_script_lang_js_ = (ChatMessageMenuvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/Chat/ChatMessageMenu.vue





/* normalize component */

var ChatMessageMenu_component = normalizeComponent(
  Chat_ChatMessageMenuvue_type_script_lang_js_,
  ChatMessageMenuvue_type_template_id_6b5dfde9_render,
  ChatMessageMenuvue_type_template_id_6b5dfde9_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var ChatMessageMenu = (ChatMessageMenu_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"b0c63b46-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/ChatUser.vue?vue&type=template&id=78e71742&
var ChatUservue_type_template_id_78e71742_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"t-flex t-flex-row"},[_c('div',{staticClass:"t-flex-none t-mr-3 t-relative t-overflow-hidden cs-user-avatar",class:_vm.getUserMembershipClass()},[_c('a',{staticClass:"t-no-underline",attrs:{"href":_vm.user.profileUrl,"target":"_blank"}},[_c('img',{staticClass:"t-max-w-full t-h-auto",attrs:{"src":_vm.user.avatarUrl}})])]),_c('div',{staticClass:"t-flex-grow cs-text-sm t-text-white t-flex t-flex-col"},[_c('div',{staticClass:"t-flex t-flex-row"},[_c('a',{staticClass:"t-no-underline hover:t-underline t-text-white t-font-semibold",attrs:{"href":_vm.user.profileUrl,"target":"_blank"}},[_vm._v(_vm._s(_vm.user.displayName))]),_vm._t("default")],2),_vm._t("footer")],2)])}
var ChatUservue_type_template_id_78e71742_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/Chat/ChatUser.vue?vue&type=template&id=78e71742&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/ChatUser.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ var ChatUservue_type_script_lang_js_ = ({
  name: 'ChatUser',
  props: {
    user: {
      type: Object,
      default: function _default() {
        return {
          displayName: '',
          avatarUrl: '',
          profileUrl: '',
          role: '',
          accessLevelName: ''
        };
      }
    }
  },
  methods: {
    getUserMembershipClass: function getUserMembershipClass() {
      return 'cs-membership-' + this.user.accessLevelName;
    }
  }
});
// CONCATENATED MODULE: ./src/components/Chat/ChatUser.vue?vue&type=script&lang=js&
 /* harmony default export */ var Chat_ChatUservue_type_script_lang_js_ = (ChatUservue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/Chat/ChatUser.vue





/* normalize component */

var ChatUser_component = normalizeComponent(
  Chat_ChatUservue_type_script_lang_js_,
  ChatUservue_type_template_id_78e71742_render,
  ChatUservue_type_template_id_78e71742_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var ChatUser = (ChatUser_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/ChatMessage.vue?vue&type=script&lang=js&







//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var ChatMessagevue_type_script_lang_js_ = ({
  name: 'ChatMessage',
  components: {
    ChatMessageMenu: ChatMessageMenu,
    ChatUser: ChatUser
  },
  props: {
    brand: {
      type: String,
      default: function _default() {
        return 'drumeo';
      }
    },
    message: {
      type: Object,
      default: function _default() {
        return {
          id: '',
          type: '',
          text: '',
          user: {
            displayName: '',
            avatarUrl: '',
            profileUrl: '',
            role: '',
            accessLevelName: ''
          },
          own_reactions: [],
          reaction_counts: {}
        };
      }
    },
    userId: {
      type: String
    },
    isAdministrator: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    },
    showMenu: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    showThread: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    showUpvote: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    dropdownMenu: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    },
    showPin: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    }
  },
  data: function data() {
    return {
      messageEdit: {
        id: null,
        text: ''
      },
      messageReactions: {
        'thumb': '👍',
        'thumbs-down': '👎',
        'heart': '💓',
        'fire': '🔥',
        'meh-rolling-eyes': '🙄',
        'grin-hearts': '😍',
        'sad-cry': '😢',
        'grin-squint': '😆',
        'grin-tears': '😂'
      }
    };
  },
  computed: {
    $_message_reactions: {
      cache: false,
      get: function get() {
        var reactionCounts = _objectSpread2({}, this.message.reaction_counts);

        delete reactionCounts.upvote;
        return reactionCounts;
      }
    },
    $_message_upvote: {
      cache: false,
      get: function get() {
        return this.message.reaction_counts.upvote || 0;
      }
    },
    $_message_upvote_class: {
      cache: false,
      get: function get() {
        return {
          'active': this.hasOwnReaction('upvote'),
          't-cursor-pointer': this.message.user.id != this.userId
        };
      }
    },
    $_has_reactions: {
      cache: false,
      get: function get() {
        return this.message && this.message.reaction_counts && Object.keys(this.message.reaction_counts).filter(function (reaction) {
          return reaction != 'upvote';
        }).length > 0;
      }
    },
    $_reply_count_label: {
      cache: false,
      get: function get() {
        return this.message.reply_count + (this.message.reply_count > 1 ? ' replies' : ' reply');
      }
    }
  },
  mounted: function mounted() {
    var _this = this;

    if (this.message.type != 'system') {
      this.$root.$on('editMessage', function (_ref) {
        var message = _ref.message,
            pinnedMessage = _ref.pinnedMessage;

        if (message.id == _this.message.id && pinnedMessage == _this.showPin) {
          _this.messageEdit = {
            id: message.id,
            text: message.text
          };
        } else {
          _this.cancelMessageEdit();
        }
      });
      this.$root.$on('messageOwnReactionUpdate', function (_ref2) {
        var message = _ref2.message;

        if (message.id == _this.message.id) {
          _this.upvoteNewScore = null;
        }
      });
      this.$root.$on('messageMenuToggled', function (_ref3) {
        var message = _ref3.message;

        if (message.id == _this.message.id && _this.$refs.msg) {
          var domRect = _this.$refs.msg.getBoundingClientRect();

          _this.$root.$emit('toggleChatPopup', {
            message: _this.message,
            domRect: domRect
          });
        }
      });
      this.$root.$on('scrollIntoView', function (_ref4) {
        var message = _ref4.message;

        if (message.id == _this.message.id && _this.$refs.msg) {
          _this.$refs.msg.scrollIntoView();
        }
      });
    }
  },
  methods: {
    cancelMessageEdit: function cancelMessageEdit() {
      this.messageEdit = {
        id: null,
        text: ''
      };
    },
    saveMessageEdit: function saveMessageEdit() {
      this.$root.$emit('updateMessage', {
        message: this.message,
        text: this.messageEdit.text
      });
      this.messageEdit = {
        id: null,
        text: ''
      };
    },
    getReactionEmoji: function getReactionEmoji(reaction) {
      return this.messageReactions[reaction];
    },
    toggleMessageReaction: function toggleMessageReaction(reaction) {
      this.$root.$emit('toggleMessageReaction', {
        message: this.message,
        reaction: reaction
      });
    },
    toggleUpvote: function toggleUpvote() {
      if (this.message.user.id != this.userId) {
        this.$root.$emit('toggleMessageReaction', {
          message: this.message,
          reaction: 'upvote'
        });
      }
    },
    hasOwnReaction: function hasOwnReaction(reactionType) {
      var has = false;
      this.message.own_reactions.forEach(function (reaction) {
        has = has || reaction.type == reactionType;
      });
      return has;
    },
    formatReactionUsers: function formatReactionUsers(users, reactionType) {
      var usersString;

      switch (users.length) {
        case 0:
          break;

        case 1:
          usersString = users[0];
          break;

        case 2:
          usersString = users[0] + ' and ' + users[1];
          break;

        case 3:
          usersString = users[0] + ', ' + users[1] + ' and ' + users[2];
          break;

        default:
          usersString = users[0] + ', ' + users[1] + ' and ' + (users.length - 2) + ' others';
      }

      if (this.hasOwnReaction(reactionType)) {
        if (users.length == 0) {
          usersString = 'You';
        } else if (users.length == 1) {
          usersString = 'You and ' + usersString;
        } else {
          usersString = 'You, ' + usersString;
        }
      }

      return usersString;
    },
    getReactionUsers: function getReactionUsers(reactionType) {
      var _this2 = this;

      var reactionUsers = [];

      if (this.message.reactions && this.message.reactions.length) {
        reactionUsers = this.message.reactions.filter(function (reaction) {
          return reaction.type == reactionType && reaction.user.id != _this2.userId;
        }).map(function (reaction) {
          return reaction.user.displayName;
        });
      }

      return reactionUsers.length || this.hasOwnReaction(reactionType) ? this.formatReactionUsers(reactionUsers, reactionType) : 'Fetching user information...';
    },
    messageThread: function messageThread() {
      this.$root.$emit('messageThread', {
        message: this.message
      });
    },
    unpinMessage: function unpinMessage() {
      this.$root.$emit('unpinMessage', {
        message: this.message
      });
    },
    firstWordLength: function firstWordLength() {
      return this.message.text ? this.message.text.split(' ')[0].length : 0;
    },
    closeMessageMenus: function closeMessageMenus() {
      this.$root.$emit('closeMessageMenus', {});
    }
  }
});
// CONCATENATED MODULE: ./src/components/Chat/ChatMessage.vue?vue&type=script&lang=js&
 /* harmony default export */ var Chat_ChatMessagevue_type_script_lang_js_ = (ChatMessagevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/Chat/ChatMessage.vue





/* normalize component */

var ChatMessage_component = normalizeComponent(
  Chat_ChatMessagevue_type_script_lang_js_,
  ChatMessagevue_type_template_id_5694cdd8_render,
  ChatMessagevue_type_template_id_5694cdd8_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var ChatMessage = (ChatMessage_component.exports);
// EXTERNAL MODULE: ./node_modules/linkifyjs/lib/linkify-string.js
var linkify_string = __webpack_require__("feef");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/Chat.vue?vue&type=script&lang=js&
















//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ var Chatvue_type_script_lang_js_ = ({
  name: 'Chat',
  components: {
    ChatEmoji: ChatEmoji,
    ChatMessage: ChatMessage,
    ChatUser: ChatUser
  },
  props: {
    brand: {
      type: String,
      default: function _default() {
        return 'drumeo';
      }
    },
    apiKey: {
      type: String
    },
    token: {
      type: String
    },
    userId: {
      type: String
    },
    chatChannelName: {
      type: String
    },
    questionsChannelName: {
      type: String
    },
    isAdministrator: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    },
    enableThread: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    },
    userData: {
      type: Object,
      default: function _default() {
        return {
          displayName: '',
          avatarUrl: '',
          profileUrl: '',
          role: '',
          accessLevelName: ''
        };
      }
    },
    embedUrl: {
      type: String,
      default: function _default() {
        return '';
      }
    },
    messagesPageSize: {
      type: Number,
      default: function _default() {
        return 20;
      }
    },
    popupWindowSettings: {
      type: String,
      default: function _default() {
        return 'width=440,height=820';
      }
    }
  },
  data: function data() {
    return {
      message: '',
      messages: [],
      question: '',
      questions: [],
      streamClient: null,
      chatChannel: null,
      questionsChannel: null,
      showMembers: false,
      showBannedUsers: false,
      showDialog: false,
      showThread: false,
      showPinned: false,
      showEmoji: false,
      currentTab: 'chat',
      messageThread: null,
      messageErrors: [],
      questionRemove: null,
      questionErrors: [],
      userBlock: null,
      userDeleteMessages: null,
      channelWatchers: {},
      fetchingBannedUsers: false,
      bannedUsers: {},
      chatMenu: false,
      userMessageId: 0,
      userQuestionId: 0,
      insertedEmoji: [],
      messagesMenusOpened: false,
      questionsMenusOpened: false,
      messagesAutoscroll: false,
      questionsAutoscroll: false,
      messagesPage: 1,
      showScroll: false,
      messagesBottom: true,
      questionsBottom: true,
      scrollingMessages: false
    };
  },
  computed: {
    $_messages: {
      cache: false,
      get: function get() {
        if (this.messages.length > this.messagesPageSize * this.messagesPage) {
          return this.messages.slice(-1 * this.messagesPageSize * this.messagesPage);
        } else {
          return this.messages;
        }
      }
    },
    $_messages_count: {
      cache: false,
      get: function get() {
        return this.messages.length;
      }
    },
    $_show_load_more_messages: {
      cache: false,
      get: function get() {
        return this.messages.length > this.messagesPageSize * this.messagesPage;
      }
    },
    $_pinned_messages: {
      cache: false,
      get: function get() {
        return this.messages.filter(function (message) {
          return message.pinned;
        }).map(function (message) {
          return message;
        }).sort(function (a, b) {
          return b.pinnedAt - a.pinnedAt;
        });
      }
    },
    $_questions: {
      cache: false,
      get: function get() {
        var questions = _toConsumableArray(this.questions);

        return questions.sort(function (a, b) {
          var _a$reaction_counts, _b$reaction_counts;

          var aUpVotes = (a === null || a === void 0 ? void 0 : (_a$reaction_counts = a.reaction_counts) === null || _a$reaction_counts === void 0 ? void 0 : _a$reaction_counts.upvote) || 0;
          var bUpVotes = (b === null || b === void 0 ? void 0 : (_b$reaction_counts = b.reaction_counts) === null || _b$reaction_counts === void 0 ? void 0 : _b$reaction_counts.upvote) || 0;
          return bUpVotes - aUpVotes;
        });
      }
    },
    $_questions_count: {
      cache: false,
      get: function get() {
        return this.questions.length;
      }
    },
    $_watchers: {
      cache: false,
      get: function get() {
        return this.channelWatchers;
      }
    },
    $_watcher_count: {
      cache: false,
      get: function get() {
        return Object.keys(this.channelWatchers).length;
      }
    },
    $_banned_users_count: {
      cache: false,
      get: function get() {
        return Object.keys(this.bannedUsers).length;
      }
    },
    $_errors_count: {
      cache: false,
      get: function get() {
        return this.messageErrors.length;
      }
    },
    $_message_thread_replies: {
      cache: false,
      get: function get() {
        return this.messageThread.replies.filter(function (item) {
          return item.type == 'reply';
        });
      }
    },
    $_reply_count_label: {
      cache: false,
      get: function get() {
        var label = '';

        if (this.messageThread && this.messageThread.reply_count) {
          label = this.messageThread.reply_count + (this.messageThread.reply_count > 1 ? ' replies' : ' reply');
        }

        return label;
      }
    },
    $_short_username: {
      get: function get() {
        return this.userBlock != null && this.userBlock.displayName.length <= 12;
      }
    },
    $_show_scroll: {
      cache: false,
      get: function get() {
        return this.showScroll;
      }
    }
  },
  created: function created() {
    window.addEventListener('focus', this.restoreScrollState);
    window.addEventListener('blur', this.setScrollState);
  },
  destroyed: function destroyed() {
    window.removeEventListener('focus', this.restoreScrollState);
    window.removeEventListener('blur', this.setScrollState);
  },
  mounted: function mounted() {
    this.setupChat();
    this.$root.$on('updateMessage', this.updateMessage);
    this.$root.$on('removeMessage', this.removeMessage);
    this.$root.$on('removeAllMessages', this.removeAllMessages);
    this.$root.$on('blockUser', this.blockUser);
    this.$root.$on('toggleMessageReaction', this.toggleMessageReaction);
    this.$root.$on('messageThread', this.showMessageThread);
    this.$root.$on('pinMessage', this.pinMessage);
    this.$root.$on('unpinMessage', this.unpinMessage);
    this.$root.$on('insertEmoji', this.insertEmoji);
    this.$root.$on('closeEmojiWindow', this.closeEmojiWindow);
    this.$root.$on('markAsAnswered', this.markAsAnswered);
    this.$root.$on('postQuestion', this.postQuestion);
    this.$root.$on('messageMenuToggled', this.messageMenuToggledHandler);
  },
  watch: {
    $_messages_count: function $_messages_count() {
      this.scrollMessages();
    },
    $_errors_count: function $_errors_count() {
      this.scrollMessages();
    },
    $_reply_count_label: function $_reply_count_label() {
      this.scrollThreadMessages();
    },
    $_questions_count: function $_questions_count() {
      this.scrollQuestions();
    }
  },
  methods: {
    restoreScrollState: function restoreScrollState() {
      var _this = this;

      if (this.currentTab == 'chat') {
        if (this.messagesBottom) {
          this.$nextTick(function () {
            _this.scrollMessages(true);
          });
        }
      } else {
        if (this.questionsBottom) {
          this.$nextTick(function () {
            _this.scrollQuestions(true);
          });
        }
      }
    },
    setScrollState: function setScrollState() {
      if (this.currentTab == 'chat') {
        var container = this.$refs.messages;

        if (Math.ceil(container.scrollHeight - container.scrollTop) === container.clientHeight) {
          this.messagesBottom = true;
          this.scrollingMessages = false;
        } else {
          this.messagesBottom = false;
        }
      } else {
        var _container = this.$refs.questions;

        if (Math.ceil(_container.scrollHeight - _container.scrollTop) === _container.clientHeight) {
          this.questionsBottom = true;
        } else {
          this.questionsBottom = false;
        }
      }
    },
    scrollDown: function scrollDown() {
      if (this.currentTab == 'chat') {
        this.scrollMessages(true);
      } else {
        this.scrollQuestions(true);
      }
    },
    popoutChat: function popoutChat() {
      this.chatMenu = false;
      window.open(this.embedUrl, 'ChatWindow', this.popupWindowSettings);
    },
    containerScrolled: function containerScrolled() {
      var container = this.currentTab === 'chat' ? this.$refs.messages : this.$refs.questions;

      if (this.currentTab === 'questions') {
        this.showScroll = false;
        return;
      }

      if (Math.ceil(container.scrollHeight - container.scrollTop) <= container.clientHeight + 5) {
        if (this.currentTab === 'chat') {
          this.messagesPage = 1;
        }

        this.showScroll = false;
        this.scrollingMessages = false;
      } else if (!this.scrollingMessages) {
        this.showScroll = true;
      }
    },
    loadMoreMessages: function loadMoreMessages() {
      this.messagesPage++; // let firstMessage = this.$_messages[0];
      // this.$nextTick(() => {
      //     this.$root.$emit('scrollIntoView', { message: firstMessage });
      // });
    },
    messageMenuToggledHandler: function messageMenuToggledHandler(_ref) {
      var message = _ref.message,
          value = _ref.value;

      if (message.category === 'message') {
        if (value === false) {
          this.messagesMenusOpened = false;

          if (this.messagesAutoscroll) {
            this.scrollMessages(true);
          }
        } else {
          this.messagesMenusOpened = true;
        }
      } else {
        if (value === false) {
          this.questionsMenusOpened = false;

          if (this.questionsAutoscroll) {
            this.scrollQuestions(true);
          }
        } else {
          this.questionsMenusOpened = true;
        }
      }
    },
    scrollMessages: function scrollMessages() {
      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var container = this.$refs.messages;

      if (force || Math.ceil(container.scrollHeight - container.scrollTop) <= container.clientHeight + 100) {
        if (this.messagesMenusOpened) {
          this.messagesAutoscroll = true;
        } else {
          this.scrollingMessages = true;
          this.messagesAutoscroll = false;
          this.$nextTick(function () {
            container.scroll({
              top: container.scrollHeight,
              behavior: 'smooth'
            });
          });
        }
      } else {
        this.scrollingMessages = false;
      }
    },
    scrollQuestions: function scrollQuestions() {
      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var container = this.$refs.questions;

      if (force || Math.ceil(container.scrollHeight - container.scrollTop) <= container.clientHeight + 100) {
        if (this.questionsMenusOpened) {
          this.questionsAutoscroll = true;
        } else {
          this.questionsAutoscroll = false;
          this.$nextTick(function () {
            container.scroll({
              top: container.scrollHeight,
              behavior: 'smooth'
            });
          });
        }
      }
    },
    scrollThreadMessages: function scrollThreadMessages() {
      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var container = this.$refs.threadMessages;

      if (container && (force || Math.ceil(container.scrollHeight - container.scrollTop) <= container.clientHeight + 100)) {
        this.$nextTick(function () {
          container.scroll({
            top: container.scrollHeight,
            behavior: 'smooth'
          });
        });
      }
    },
    removeAllQuestions: function removeAllQuestions() {
      var _this2 = this;

      if (this.questions.length) {
        this.chatMenu = false;
        var questionRemove = this.questions[0];
        this.streamClient.deleteMessage(questionRemove.id).then(function () {
          _this2.deleteMessage({
            message: questionRemove,
            collection: _this2.questions
          });

          _this2.removeAllQuestions();
        }).catch(function (_ref2) {
          var response = _ref2.response;

          _this2.errorHandler(response, 'Mark question as answered error', _this2.questionErrors);
        });
      }
    },
    sendMessage: function sendMessage() {
      var _this3 = this;

      var payload = {
        text: this.stripHtml(this.message).trim()
      };
      this.message = '';

      if (payload.text) {
        if (this.messageThread) {
          payload.parent_id = this.messageThread.id;
          payload.show_in_channel = false;
        }

        this.chatChannel.sendMessage(payload).then(function () {
          _this3.messageErrors = [];
        }).catch(function (_ref3) {
          var response = _ref3.response;

          _this3.errorHandler(response, 'Message send error', _this3.messageErrors);
        });
        var message = {
          'id': '',
          'type': 'regular',
          'text': payload.text.linkify({
            className: 'chat-message-link',
            target: '_blank'
          }),
          'reply_count': 0,
          'pinned': false,
          'user': this.userData,
          'reaction_counts': {},
          'reaction_scores': {},
          'own_reactions': [],
          'createdAt': luxon["DateTime"].now(),
          'pinnedAt': null,
          'reactions': [],
          'replies': [],
          'key': 'user-' + this.userId + this.userMessageId++,
          'category': 'message'
        };
        this.messages.push(message);
        this.insertedEmoji = [];
        this.$nextTick(function () {
          _this3.scrollMessages(true);
        });
      }
    },
    sendQuestion: function sendQuestion() {
      var _this4 = this;

      var text = this.stripHtml(this.question).trim();
      this.question = '';

      if (text) {
        this.questionsChannel.sendMessage({
          text: text
        }).then(function () {
          _this4.questionErrors = [];
        }).catch(function (_ref4) {
          var response = _ref4.response;

          _this4.errorHandler(response, 'Question send error', _this4.questionErrors);
        });
        var message = {
          'id': '',
          'type': 'regular',
          'text': text.linkify({
            className: 'chat-message-link',
            target: '_blank'
          }),
          'reply_count': 0,
          'pinned': false,
          'user': this.userData,
          'reaction_counts': {},
          'reaction_scores': {},
          'own_reactions': [],
          'createdAt': luxon["DateTime"].now(),
          'pinnedAt': null,
          'reactions': [],
          'replies': [],
          'key': 'user-' + this.userId + this.userQuestionId++,
          'category': 'question'
        };
        this.questions.push(message);
        this.$nextTick(function () {
          _this4.scrollQuestions(true);
        });
      }
    },
    postQuestion: function postQuestion(_ref5) {
      var text = _ref5.text;
      this.question = text;
      this.currentTab = 'questions';
      this.sendQuestion();
    },
    errorHandler: function errorHandler(response, action, errors) {
      var message = "".concat(action, ", please try again, if the error persists contact support.");

      if (response) {
        var _response$data, _response$data2;

        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.code) {
          if (response.data.code == 17) {
            message = "".concat(action, ", your account is currently suspended from chat, please contact support.");
          } else {
            message = message + ' Error code: ' + response.data.code;
          }
        } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.StatusCode) {
          message = message + ' Error status code: ' + response.data.StatusCode;
        }
      }

      errors.push(message);
    },
    attachChatEventHandlers: function attachChatEventHandlers(channel, collection, category) {
      var _this5 = this;

      channel.on('message.new', function (_ref6) {
        var message = _ref6.message;

        _this5.pushMessage({
          message: message,
          collection: collection,
          category: category
        });
      });
      channel.on('message.updated', function (_ref7) {
        var message = _ref7.message;

        _this5.updateMessageState({
          message: message,
          collection: collection
        });
      });
      channel.on('message.deleted', function (_ref8) {
        var message = _ref8.message;

        _this5.deleteMessage({
          message: message,
          collection: collection
        });
      });
      channel.on('reaction.new', function (_ref9) {
        var message = _ref9.message,
            reaction = _ref9.reaction;

        _this5.pushMessageReaction({
          message: message,
          reaction: reaction,
          collection: collection
        });
      });
      channel.on('reaction.deleted', function (_ref10) {
        var message = _ref10.message,
            reaction = _ref10.reaction;

        _this5.deleteMessageReaction({
          message: message,
          reaction: reaction,
          collection: collection
        });
      });
      channel.on('reaction.updated', function (_ref11) {
        var message = _ref11.message,
            reaction = _ref11.reaction;

        _this5.updateMessageReaction({
          message: message,
          reaction: reaction,
          collection: collection
        });
      });
      channel.on(function (_ref12) {
        var type = _ref12.type,
            channel_id = _ref12.channel_id,
            user = _ref12.user;

        if (type == 'delete_user_messages') {
          if (channel_id == _this5.chatChannelName) {
            _this5.deleteUserMessages(user);
          } else if (channel_id == _this5.questionsChannelName) {
            _this5.deleteUserQuestions(user);
          }
        }
      });
    },
    setupChat: function setupChat() {
      var _this6 = this;

      this.streamClient = new browser_es["a" /* StreamChat */](this.apiKey, {
        timeout: 6000
      });
      this.streamClient.connectUser({
        id: this.userId
      }, this.token).then(function () {
        _this6.chatChannel = _this6.streamClient.channel('messaging', _this6.chatChannelName, {});
        return _this6.chatChannel.watch();
      }).then(function (state) {
        _this6.fetchWatchers();

        _this6.fetchPinnedMessages();

        _this6.processMessages(state, _this6.messages, 'message');

        var greeting = {
          id: 'greeting',
          type: 'system',
          text: 'Welcome to chat!'
        };

        _this6.messages.push(greeting);

        _this6.chatChannel.on('user.watching.start', function (_ref13) {
          var user = _ref13.user;

          _this6.$set(_this6.channelWatchers, user.id, user);
        });

        _this6.chatChannel.on('user.watching.stop', function (_ref14) {
          var user = _ref14.user;

          if (_this6.channelWatchers[user.id]) {
            _this6.$delete(_this6.channelWatchers, user.id);
          }
        });

        _this6.attachChatEventHandlers(_this6.chatChannel, _this6.messages, 'message');

        _this6.setupQuestionsChannel();
      });
    },
    setupQuestionsChannel: function setupQuestionsChannel() {
      var _this7 = this;

      this.questionsChannel = this.streamClient.channel('messaging', this.questionsChannelName, {});
      this.questionsChannel.watch().then(function (state) {
        _this7.processMessages(state, _this7.questions, 'question');

        _this7.attachChatEventHandlers(_this7.questionsChannel, _this7.questions, 'question');
      });
    },
    fetchWatchers: function fetchWatchers() {
      var _this8 = this;

      var limit = 100;
      this.chatChannel.query({
        watchers: {
          limit: limit,
          offset: 0
        }
      }).then(function (_ref15) {
        var watchers = _ref15.watchers;

        if (watchers) {
          watchers.forEach(function (user) {
            _this8.$set(_this8.channelWatchers, user.id, user);
          });
        }
      });
    },
    fetchBannedUsers: function fetchBannedUsers() {
      var _this9 = this;

      this.fetchingBannedUsers = true;
      this.bannedUsers = {};
      var limit = 100;
      this.streamClient.queryUsers({
        banned: true
      }, {}, {
        limit: limit,
        offset: 0
      }).then(function (_ref16) {
        var users = _ref16.users;
        users.forEach(function (user) {
          _this9.$set(_this9.bannedUsers, user.id, user);
        });
        _this9.fetchingBannedUsers = false;
      });
    },
    fetchPinnedMessages: function fetchPinnedMessages() {
      var _this10 = this;

      var limit = 100;
      this.chatChannel.search({
        pinned: true
      }, null, {
        limit: limit,
        offset: 0
      }).then(function (_ref17) {
        var results = _ref17.results;
        results.forEach(function (_ref18) {
          var message = _ref18.message;

          if (message.type == 'regular') {
            _this10.insertMessage(message);
          }
        });

        _this10.unpinMessages();
      });
    },
    deleteUserMessages: function deleteUserMessages(user) {
      var _this11 = this;

      this.messages.forEach(function (message, index) {
        var _message$user;

        if (((_message$user = message.user) === null || _message$user === void 0 ? void 0 : _message$user.id) == user.id) {
          _this11.messages.splice(index, 1);
        }
      });
    },
    deleteUserQuestions: function deleteUserQuestions(user) {
      var _this12 = this;

      this.questions.forEach(function (message, index) {
        var _message$user2;

        if (((_message$user2 = message.user) === null || _message$user2 === void 0 ? void 0 : _message$user2.id) == user.id) {
          _this12.questions.splice(index, 1);
        }
      });
    },

    /**
     * Creates a list of pinned messages, reversed sorted by pinned_at
     * Unpins all but last specified value of pinned messages
     */
    unpinMessages: function unpinMessages() {
      var _this13 = this;

      var keep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;

      if (this.$_pinned_messages.length > keep) {
        var revesedSorted = this.$_pinned_messages.map(function (_ref19) {
          var id = _ref19.id,
              text = _ref19.text,
              pinnedAt = _ref19.pinnedAt;
          return {
            id: id,
            text: text,
            pinnedAt: pinnedAt
          };
        }).sort(function (a, b) {
          return b.pinnedAt - a.pinnedAt;
        });
        revesedSorted.forEach(function (message, idx) {
          if (idx > keep - 1) {
            _this13.unpinMessage({
              message: message
            });
          }
        });
      }
    },

    /**
     * Iterate over initial channel messages and call push message only for main channel non-deleted messages
     */
    processMessages: function processMessages(_ref20, collection, category) {
      var _this14 = this;

      var messages = _ref20.messages;
      messages.forEach(function (message) {
        if (message.type == 'regular') {
          _this14.pushMessage({
            message: message,
            collection: collection,
            category: category
          });
        }
      });
    },

    /**
     * Create a copy of user object
     */
    getUserCopy: function getUserCopy(_ref21) {
      var id = _ref21.id,
          displayName = _ref21.displayName,
          avatarUrl = _ref21.avatarUrl,
          profileUrl = _ref21.profileUrl,
          role = _ref21.role,
          accessLevelName = _ref21.accessLevelName;
      return {
        id: id,
        displayName: displayName,
        avatarUrl: avatarUrl,
        profileUrl: profileUrl,
        role: role,
        accessLevelName: accessLevelName
      };
    },

    /**
     * Create a copy of message object
     * If the message object has more reactions than latest_reactions the method will fetch all reactions from API
     * The message replies are not populated in this method
     */
    getMessageCopy: function getMessageCopy(message) {
      var _this15 = this;

      var messageCopy = function (_ref22) {
        var id = _ref22.id,
            type = _ref22.type,
            text = _ref22.text,
            reply_count = _ref22.reply_count,
            pinned = _ref22.pinned;
        return {
          id: id,
          type: type,
          text: text,
          reply_count: reply_count,
          pinned: pinned
        };
      }(message);

      messageCopy.text = this.stripHtml(messageCopy.text).linkify({
        className: 'chat-message-link',
        target: '_blank'
      });
      messageCopy.user = this.getUserCopy(message.user);
      messageCopy.reaction_counts = _objectSpread2({}, message.reaction_counts);
      messageCopy.reaction_scores = _objectSpread2({}, message.reaction_scores);
      messageCopy.own_reactions = message.own_reactions.map(function (_ref23) {
        var type = _ref23.type,
            score = _ref23.score;
        return {
          type: type,
          score: score
        };
      });
      messageCopy.createdAt = luxon["DateTime"].fromISO(message.created_at);
      messageCopy.pinnedAt = message.pinned_at ? luxon["DateTime"].fromISO(message.pinned_at) : null;
      var messageReactionsCount = Object.values(message.reaction_counts || {}).reduce(function (a, b) {
        return a + b;
      }, 0);
      messageCopy.reactions = [];
      messageCopy.replies = [];

      if (message.latest_reactions.length == messageReactionsCount) {
        message.latest_reactions.forEach(function (reaction) {
          messageCopy.reactions.push({
            type: reaction.type,
            user: _this15.getUserCopy(reaction.user)
          });
        });
      } else {
        this.chatChannel.getReactions(message.id, {
          limit: 100
        }).then(function (_ref24) {
          var reactions = _ref24.reactions;
          reactions.forEach(function (reaction) {
            messageCopy.reactions.push({
              type: reaction.type,
              user: _this15.getUserCopy(reaction.user)
            });
          });
        });
      }

      return messageCopy;
    },

    /**
     * Push a message into internal state
     * If the message has replies the method will fetch them from API
     */
    pushMessage: function pushMessage(_ref25) {
      var _this16 = this;

      var message = _ref25.message,
          collection = _ref25.collection,
          category = _ref25.category;
      var messageCopy = this.getMessageCopy(message);
      messageCopy.category = category;
      messageCopy.key = messageCopy.id;

      if (message.reply_count) {
        this.chatChannel.getReplies(message.id, {
          limit: 100
        }).then(function (_ref26) {
          var _this16$messageThread;

          var messages = _ref26.messages;
          messages.forEach(function (reply) {
            messageCopy.replies.push(_this16.getMessageCopy(reply));
          });

          if (((_this16$messageThread = _this16.messageThread) === null || _this16$messageThread === void 0 ? void 0 : _this16$messageThread.id) == messageCopy.id) {
            _this16.scrollThreadMessages();
          }
        });
      }

      var found = false;

      if (message.user.id == this.userId) {
        if (message.type == 'regular') {
          var messageIdx = null;
          collection.forEach(function (msg, idx) {
            if (!msg.id && msg.user.id == _this16.userId && msg.text == messageCopy.text) {
              messageIdx = idx;
              found = true;
            }
          });

          if (messageIdx != null) {
            messageCopy.key = collection[messageIdx].key;
            collection.splice(messageIdx, 1, messageCopy);
          }
        } else if (message.type == 'reply' && message.parent_id) {
          collection.forEach(function (parentMessage, parrentIdx) {
            if (parentMessage.id == message.parent_id) {
              var _messageIdx;

              parentMessage.replies.forEach(function (msg, idx) {
                if (!msg.id && msg.user.id == _this16.userId && msg.text == messageCopy.text) {
                  _messageIdx = idx;
                  found = true;
                }
              });

              if (_messageIdx) {
                messageCopy.key = collection[parrentIdx].replies[_messageIdx].key;
                collection[parrentIdx].replies.splice(_messageIdx, 1, messageCopy);
              }
            }
          });
        }
      }

      if (message.type == 'regular' && message.user.id == this.userId && category == 'question' && !message.own_reactions.length) {
        this.$nextTick(function () {
          _this16.toggleMessageReaction({
            message: messageCopy,
            reaction: 'upvote'
          });
        });
      }

      if (!found) {
        if (message.type == 'regular') {
          collection.push(messageCopy);
        } else if (message.type == 'reply' && message.parent_id) {
          collection.forEach(function (parentMessage) {
            if (parentMessage.id == message.parent_id) {
              parentMessage.replies.push(messageCopy);
              parentMessage.reply_count = parentMessage.reply_count + 1;
            }
          });
        }
      }
    },

    /**
     * Inserts a message into internal state
     * If the message has replies the method will fetch them from API
     * If the message already exists in the internal state, it will not be duplicated
     */
    insertMessage: function insertMessage(message) {
      var _this17 = this;

      var exists = false;
      var idx = null;
      var messageCreatedAt = luxon["DateTime"].fromISO(message.created_at);
      this.messages.forEach(function (storedMessage, storedIndex) {
        if (message.id == storedMessage.id) {
          exists = true;
        }

        if (idx == null && messageCreatedAt < storedMessage.createdAt) {
          idx = storedIndex;
        }
      });

      if (!exists) {
        var messageCopy = this.getMessageCopy(message);

        if (message.reply_count) {
          this.chatChannel.getReplies(message.id, {
            limit: 100
          }).then(function (_ref27) {
            var messages = _ref27.messages;
            messages.forEach(function (reply) {
              messageCopy.replies.push(_this17.getMessageCopy(reply));
            });
          });
        }

        if (idx) {
          this.messages.splice(idx, 0, messageCopy);
        } else {
          this.messages.push(messageCopy);
        }
      }
    },

    /**
     * Update message text and pinned status
     */
    updateMessageState: function updateMessageState(_ref28) {
      var _this18 = this;

      var message = _ref28.message,
          collection = _ref28.collection;
      collection.forEach(function (storedMessage) {
        if (message.type == 'regular' && storedMessage.id == message.id) {
          storedMessage.text = message.text;
          storedMessage.pinned = message.pinned;
          storedMessage.pinnedAt = message.pinned_at ? luxon["DateTime"].fromISO(message.pinned_at) : null;

          _this18.unpinMessages();
        } else if (message.type == 'reply' && message.parent_id && storedMessage.id == message.parent_id) {
          storedMessage.replies.forEach(function (storedReplyMessage) {
            if (storedReplyMessage.id == message.id) {
              storedReplyMessage.text = message.text;
            }
          });
        }
      });
    },

    /**
     * Delete a message from internal state
     */
    deleteMessage: function deleteMessage(_ref29) {
      var message = _ref29.message,
          collection = _ref29.collection;
      var idx = null;
      collection.forEach(function (storedMessage, messageIndex) {
        if (message.parent_id && storedMessage.id == message.parent_id) {
          storedMessage.replies.forEach(function (storedReplyMessage, replyIndex) {
            if (storedReplyMessage.id == message.id) {
              idx = replyIndex;
            }
          });

          if (idx != null) {
            storedMessage.replies.splice(idx, 1);
            storedMessage.reply_count = storedMessage.reply_count - 1;
            idx = null;
          }
        } else if (storedMessage.id == message.id) {
          idx = messageIndex;
        }
      });

      if (idx != null && !message.parent_id) {
        collection.splice(idx, 1);
      }
    },

    /**
     * Locates the internal message, main channel message or reply, and calls addMessageReaction
     */
    pushMessageReaction: function pushMessageReaction(_ref30) {
      var _this19 = this;

      var message = _ref30.message,
          reaction = _ref30.reaction,
          collection = _ref30.collection;
      var scroll = !this.showScroll;
      collection.forEach(function (storedMessage) {
        if (message.parent_id && storedMessage.id == message.parent_id) {
          storedMessage.replies.forEach(function (storedReplyMessage) {
            if (storedReplyMessage.id == message.id) {
              _this19.addMessageReaction(storedReplyMessage, reaction, _objectSpread2({}, message.reaction_counts), _objectSpread2({}, message.reaction_scores));
            }
          });
        } else if (storedMessage.id == message.id) {
          _this19.addMessageReaction(storedMessage, reaction, _objectSpread2({}, message.reaction_counts), _objectSpread2({}, message.reaction_scores));
        }
      });

      if (this.messageThread && this.messageThread.id == message.id) {
        this.$nextTick(function () {
          _this19.scrollThreadMessages();
        });
      } else if (this.messageThread == null && scroll) {
        this.$nextTick(function () {
          _this19.scrollMessages(true);
        });
      }
    },

    /**
     * Adds a reaction to an internal state message and updates reaction counts
     */
    addMessageReaction: function addMessageReaction(storedMessage, reaction, messageRectionCounts, messageRectionScores) {
      storedMessage.reactions.push({
        type: reaction.type,
        user: this.getUserCopy(reaction.user)
      });
      storedMessage.reaction_counts = messageRectionCounts;
      storedMessage.reaction_scores = messageRectionScores;

      if (reaction.user.id == this.userId) {
        storedMessage.own_reactions.push({
          type: reaction.type,
          score: reaction.score
        });
        this.$root.$emit('messageOwnReactionUpdate', {
          message: storedMessage
        });
      }
    },

    /**
     * Locates the internal message, main channel message or reply, and calls removeMessageReaction
     */
    deleteMessageReaction: function deleteMessageReaction(_ref31) {
      var _this20 = this;

      var message = _ref31.message,
          reaction = _ref31.reaction,
          collection = _ref31.collection;
      collection.forEach(function (storedMessage) {
        if (message.parent_id && storedMessage.id == message.parent_id) {
          storedMessage.replies.forEach(function (storedReplyMessage) {
            if (storedReplyMessage.id == message.id) {
              _this20.removeMessageReaction(storedReplyMessage, reaction, _objectSpread2({}, message.reaction_counts), _objectSpread2({}, message.reaction_scores));
            }
          });
        } else if (storedMessage.id == message.id) {
          _this20.removeMessageReaction(storedMessage, reaction, _objectSpread2({}, message.reaction_counts), _objectSpread2({}, message.reaction_scores));
        }
      });
    },

    /**
     * Removes a reaction from an internal state message and updates reaction counts
     */
    removeMessageReaction: function removeMessageReaction(storedMessage, reaction, messageRectionCounts, messageRectionScores) {
      var idx;
      storedMessage.reactions.forEach(function (storedReaction, index) {
        if (storedReaction.type == reaction.type && storedReaction.user.id == reaction.user.id) {
          idx = index;
        }
      });
      storedMessage.reactions.splice(idx, 1);
      storedMessage.reaction_counts = messageRectionCounts;
      storedMessage.reaction_scores = messageRectionScores;

      if (reaction.user.id == this.userId) {
        storedMessage.own_reactions.forEach(function (ownReaction, index) {
          if (ownReaction.type == reaction.type) {
            idx = index;
          }
        });
        storedMessage.own_reactions.splice(idx, 1);
      }
    },
    updateMessageReaction: function updateMessageReaction(_ref32) {
      var _this21 = this;

      var message = _ref32.message,
          reaction = _ref32.reaction,
          collection = _ref32.collection;
      collection.forEach(function (storedMessage) {
        if (storedMessage.id == message.id) {
          storedMessage.reaction_counts = _objectSpread2({}, message.reaction_counts);
          storedMessage.reaction_scores = _objectSpread2({}, message.reaction_scores);

          if (reaction.user.id == _this21.userId) {
            storedMessage.own_reactions.forEach(function (ownReaction) {
              if (ownReaction.type == reaction.type) {
                ownReaction.score = reaction.score;
              }
            });

            _this21.$root.$emit('messageOwnReactionUpdate', {
              message: message
            });
          }
        }
      });
    },
    toggleShowMembers: function toggleShowMembers() {
      this.showMembers = !this.showMembers;
      this.chatMenu = false;
    },
    toggleShowBannedUsers: function toggleShowBannedUsers() {
      this.showBannedUsers = !this.showBannedUsers;
      this.chatMenu = false;

      if (this.showBannedUsers) {
        this.fetchBannedUsers();
      }
    },
    toggleShowEmoji: function toggleShowEmoji() {
      this.showEmoji = !this.showEmoji;
    },
    updateMessage: function updateMessage(_ref33) {
      var _this22 = this;

      var message = _ref33.message,
          text = _ref33.text;
      var errors = this.currentTab == 'chat' ? this.messageErrors : this.questionErrors;
      this.streamClient.updateMessage({
        id: message.id,
        text: text,
        pinned: message.pinned
      }).then(function () {
        _this22.messageErrors = [];
      }).catch(function (_ref34) {
        var response = _ref34.response;

        _this22.errorHandler(response, 'Message update error', errors);
      });
    },
    removeMessage: function removeMessage(_ref35) {
      var _this23 = this;

      var message = _ref35.message;
      this.streamClient.deleteMessage(message.id).then(function () {
        _this23.messageErrors = [];
      }).catch(function (_ref36) {
        var response = _ref36.response;

        _this23.errorHandler(response, 'Message delete error', _this23.messageErrors);
      });
    },
    blockUser: function blockUser(_ref37) {
      var user = _ref37.user;
      this.userBlock = user;
      this.showDialog = true;
    },
    removeAllMessages: function removeAllMessages(_ref38) {
      var user = _ref38.user;
      this.userDeleteMessages = user;
      this.showDialog = true;
    },
    markAsAnswered: function markAsAnswered(_ref39) {
      var message = _ref39.message;
      this.questionRemove = message;
      this.showDialog = true;
    },
    closeDialog: function closeDialog(confirmation) {
      var _this24 = this;

      var errors = this.currentTab == 'chat' ? this.messageErrors : this.questionErrors;

      if (confirmation) {
        if (this.userBlock) {
          railchat.banUser(this.userBlock.id).then(function () {
            errors = [];
          }).catch(function (_ref40) {
            var response = _ref40.response;

            _this24.railErrorHandler(response, 'User ban error', errors);
          });
        } else if (this.questionRemove) {
          this.streamClient.deleteMessage(this.questionRemove.id).then(function () {
            _this24.questionErrors = [];
          }).catch(function (_ref41) {
            var response = _ref41.response;

            _this24.errorHandler(response, 'Mark question as answered error', _this24.questionErrors);
          });
        } else if (this.userDeleteMessages) {
          railchat.deleteUserMessages(this.userDeleteMessages.id).then(function () {
            _this24.messageErrors = [];
            _this24.questionErrors = [];
          }).catch(function (_ref42) {
            var response = _ref42.response;

            _this24.railErrorHandler(response, 'Delete user messages error', errors);
          });
        }
      }

      this.showDialog = false;
      this.questionRemove = null;
      this.userBlock = null;
      this.userDeleteMessages = null;
    },
    hasOwnReaction: function hasOwnReaction(message, reactionType) {
      var has = false;
      message.own_reactions.forEach(function (reaction) {
        has = has || reaction.type == reactionType;
      });
      return has;
    },
    removeOwnReaction: function removeOwnReaction(_ref43) {
      var message = _ref43.message,
          reaction = _ref43.reaction;
      var collection = message.category == 'message' ? this.messages : this.questions;
      var selectedMessage;
      collection.forEach(function (msg) {
        if (msg.id == message.id) {
          selectedMessage = msg;
        }
      });

      if (selectedMessage.reaction_counts[reaction] > 1) {
        selectedMessage.reaction_counts[reaction] = selectedMessage.reaction_counts[reaction] - 1;
      } else {
        delete selectedMessage.reaction_counts[reaction];
      }

      var reactionIndex;
      selectedMessage.own_reactions.forEach(function (_ref44, idx) {
        var type = _ref44.type;

        if (type == reaction) {
          reactionIndex = idx;
        }
      });

      if (reactionIndex) {
        selectedMessage.own_reactions.splice(reactionIndex, 1);
      }
    },
    addOwnReaction: function addOwnReaction(_ref45) {
      var _this25 = this;

      var message = _ref45.message,
          reaction = _ref45.reaction;
      var collection = message.category == 'message' ? this.messages : this.questions;
      var selectedMessage;
      collection.forEach(function (msg) {
        if (msg.id == message.id) {
          selectedMessage = msg;
        }
      });

      if (selectedMessage) {
        var scroll = !this.showScroll;
        selectedMessage.reaction_counts[reaction] = (selectedMessage.reaction_counts[reaction] || 0) + 1;
        selectedMessage.own_reactions.push({
          type: reaction,
          score: 1
        });

        if (scroll) {
          this.$nextTick(function () {
            _this25.scrollMessages(true);
          });
        }
      }
    },
    toggleMessageReaction: function toggleMessageReaction(_ref46) {
      var _this26 = this;

      var message = _ref46.message,
          reaction = _ref46.reaction;
      var errors = this.currentTab == 'chat' ? this.messageErrors : this.questionErrors;
      var channel = message.category == 'message' ? this.chatChannel : this.questionsChannel;

      if (this.hasOwnReaction(message, reaction)) {
        this.removeOwnReaction({
          message: message,
          reaction: reaction
        });
        channel.deleteReaction(message.id, reaction).then(function () {
          _this26.messageErrors = [];
        }).catch(function (_ref47) {
          var response = _ref47.response;

          _this26.errorHandler(response, 'Message reaction remove error', errors);
        });
      } else {
        this.addOwnReaction({
          message: message,
          reaction: reaction
        });
        channel.sendReaction(message.id, {
          type: reaction
        }).then(function () {
          _this26.messageErrors = [];
        }).catch(function (_ref48) {
          var response = _ref48.response;

          _this26.errorHandler(response, 'Message reaction send error', errors);
        });
      }
    },
    showMessageThread: function showMessageThread(_ref49) {
      var _this27 = this;

      var message = _ref49.message;
      this.messageThread = message;
      this.showMembers = false;
      this.showThread = true;
      this.$nextTick(function () {
        _this27.scrollThreadMessages(true);
      });
    },
    hideMessageThread: function hideMessageThread() {
      this.showThread = false;
      this.messageThread = null;
    },
    pinMessage: function pinMessage(_ref50) {
      var _this28 = this;

      var message = _ref50.message;
      this.streamClient.pinMessage({
        id: message.id,
        text: message.text
      }, null).then(function () {
        _this28.messageErrors = [];
      }).catch(function (_ref51) {
        var response = _ref51.response;

        _this28.errorHandler(response, 'Message pin error', _this28.messageErrors);
      });
    },
    unpinMessage: function unpinMessage(_ref52) {
      var _this29 = this;

      var message = _ref52.message;
      this.streamClient.unpinMessage({
        id: message.id,
        text: message.text
      }, null).then(function () {
        _this29.messageErrors = [];
      }).catch(function (_ref53) {
        var response = _ref53.response;

        _this29.errorHandler(response, 'Message unpin error', _this29.messageErrors);
      });
    },
    toggleShowPinned: function toggleShowPinned() {
      this.showPinned = !this.showPinned;
    },
    toggleChatMenu: function toggleChatMenu() {
      this.chatMenu = !this.chatMenu;
      this.showEmoji = false;
    },
    unblockUser: function unblockUser(_ref54) {
      var _this30 = this;

      var id = _ref54.id;
      railchat.unbanUser(id).then(function () {
        _this30.messageErrors = [];

        _this30.fetchBannedUsers();
      }).catch(function (_ref55) {
        var response = _ref55.response;

        _this30.railErrorHandler(response, 'User unban error');
      });
    },
    railErrorHandler: function railErrorHandler(response, action, errors) {
      var _response$data3;

      var message = "".concat(action, ", please try again, if the error persists contact support.");

      if (response && (_response$data3 = response.data) !== null && _response$data3 !== void 0 && _response$data3.errors && Array.isArray(response.data.errors)) {
        response.data.errors.forEach(function (error) {
          if (error.detail) {
            message = "".concat(action, ": ").concat(error.detail);
          } else {
            console.log("Chat::railErrorHandler unknown error message format: %s", JSON.stringify(error));
          }
        });
      } else {
        console.log("Chat::railErrorHandler unknown error response format: %s", JSON.stringify(response));
      }

      errors.push(message);
    },
    insertEmoji: function insertEmoji(emoji) {
      var textarea = this.$refs.newMessage;
      var start = textarea.selectionStart;
      var end = textarea.selectionEnd;
      textarea.setRangeText("".concat(emoji.emoji), start, end, 'end');
      this.message = textarea.value;
      this.showEmoji = false;
    },
    closeEmojiWindow: function closeEmojiWindow() {
      this.showEmoji = false;
    },
    setCurrentTab: function setCurrentTab(tab) {
      var _this31 = this;

      if (tab == 'chat' || tab == 'questions') {
        this.setScrollState();
        this.scrollingMessages = true;
        this.currentTab = tab;
        this.$nextTick(function () {
          _this31.restoreScrollState();

          _this31.containerScrolled();
        });
      }

      this.chatMenu = false;
      this.showEmoji = false;
    },
    getTabClasses: function getTabClasses(tab) {
      var active = ['t-font-semibold', 't-text-white', 't-border-white'];
      var inactive = ['cs-text-gray', 't-border-transparent'];
      return this.currentTab == tab ? active : inactive;
    },
    stripHtml: function stripHtml(html) {
      return html.replace(/(<([^>]+)>)/gi, '').replace(/[\u200B-\u200D\uFEFF\u200E\u200F]/g, '');
    }
  }
});
// CONCATENATED MODULE: ./src/components/Chat/Chat.vue?vue&type=script&lang=js&
 /* harmony default export */ var Chat_Chatvue_type_script_lang_js_ = (Chatvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/Chat/Chat.vue





/* normalize component */

var Chat_component = normalizeComponent(
  Chat_Chatvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Chat = (Chat_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"b0c63b46-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/ChatPopup.vue?vue&type=template&id=dbbe2b36&
var ChatPopupvue_type_template_id_dbbe2b36_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.message)?_c('div',{staticClass:"t-fixed t-top-0 t-right-0 t-left-0 t-h-screen",staticStyle:{"z-index":"200"}},[_c('div',{staticStyle:{"overflow-y":"scroll","top":"0","right":"0","height":"100%","position":"fixed"}}),_c('div',{staticClass:"cs-overlay t-absolute t-inset-0 t-bg-gray-100 t-bg-opacity-10",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.close()}}}),_c('div',{staticClass:"t-fixed",style:(_vm.position)},[_c('div',{staticClass:"t-absolute t-text-base",staticStyle:{"bottom":"12px","right":"10px"}},[_c('div',{staticClass:"cs-sub-menu t-w-44 t-p-3 t-flex t-flex-col t-bg-black t-rounded-lg t-text-white cs-text-sm t-z-50"},[(_vm.message.user.id != _vm.userId && !_vm.isAdministrator)?_c('div',[_c('a',{staticClass:"t-no-underline t-text-white",attrs:{"href":_vm.message.user.profileUrl,"target":"_blank"}},[_vm._v("View Profile")])]):_vm._e(),(_vm.message.user.id == _vm.userId)?_c('div',{class:{'t-mb-2': _vm.isAdministrator}},[_c('div',{staticClass:"t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.editMessage()}}},[_vm._v("Edit Message")]),_c('div',{staticClass:"t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.removeMessage()}}},[_vm._v("Delete")])]):_vm._e(),(_vm.isAdministrator)?_c('div',[_c('div',{staticClass:"t-mb-2 t-font-semibold t-cursor-default"},[_vm._v("Moderation")]),(_vm.$_show_pin)?_c('div',{staticClass:"t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.pinMessage()}}},[_vm._v("Pin Message")]):_vm._e(),(_vm.$_show_unpin)?_c('div',{staticClass:"t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.unpinMessage()}}},[_vm._v("Unpin Message")]):_vm._e(),(_vm.message.user.id != _vm.userId)?_c('div',{staticClass:"t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.removeMessage()}}},[_vm._v("Remove Message")]):_vm._e(),(_vm.message.user.id != _vm.userId)?_c('div',{staticClass:"t-mb-1 t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.removeAllMessages()}}},[_vm._v("Remove All Messages")]):_vm._e(),(_vm.message.user.id != _vm.userId)?_c('div',{staticClass:"t-cursor-pointer",on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.blockUser()}}},[_vm._v("Block Student")]):_vm._e()]):_vm._e()])])])]):_vm._e()}
var ChatPopupvue_type_template_id_dbbe2b36_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/Chat/ChatPopup.vue?vue&type=template&id=dbbe2b36&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Chat/ChatPopup.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ var ChatPopupvue_type_script_lang_js_ = ({
  name: 'ChatPopup',
  props: {
    zIndex: {
      type: String,
      default: function _default() {
        return '500';
      }
    },
    userId: {
      type: String
    },
    isAdministrator: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    }
  },
  data: function data() {
    return {
      position: {
        height: 0,
        width: 0,
        left: '100px',
        top: '100px',
        zIndex: this.zIndex
      },
      message: null
    };
  },
  computed: {
    $_show_pin: {
      get: function get() {
        return this.isAdministrator && !this.message.pinned && this.message.type != 'reply' && !this.showUpvote;
      }
    },
    $_show_unpin: {
      get: function get() {
        return this.isAdministrator && this.message.pinned && this.message.type != 'reply' && !this.showUpvote;
      }
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.$root.$on('toggleChatPopup', function (_ref) {
      var message = _ref.message,
          domRect = _ref.domRect;
      _this.position.left = _this.roundedPixels(domRect.left + domRect.width);
      _this.position.top = _this.roundedPixels(domRect.top);
      _this.message = message;
      document.body.classList.add('t-fixed');
    });
  },
  methods: {
    roundedPixels: function roundedPixels(value) {
      return Math.round(value) + 'px';
    },
    editMessage: function editMessage() {},
    removeMessage: function removeMessage() {},
    pinMessage: function pinMessage() {},
    unpinMessage: function unpinMessage() {},
    removeAllMessages: function removeAllMessages() {},
    blockUser: function blockUser() {},
    close: function close() {
      this.message = null;
      document.body.classList.remove('t-fixed');
    }
  }
});
// CONCATENATED MODULE: ./src/components/Chat/ChatPopup.vue?vue&type=script&lang=js&
 /* harmony default export */ var Chat_ChatPopupvue_type_script_lang_js_ = (ChatPopupvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/Chat/ChatPopup.vue





/* normalize component */

var ChatPopup_component = normalizeComponent(
  Chat_ChatPopupvue_type_script_lang_js_,
  ChatPopupvue_type_template_id_dbbe2b36_render,
  ChatPopupvue_type_template_id_dbbe2b36_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var ChatPopup = (ChatPopup_component.exports);
// CONCATENATED MODULE: ./src/components/index.js


var Components = {
  Chat: Chat,
  ChatPopup: ChatPopup
};
/* harmony default export */ var components = (Components);
// EXTERNAL MODULE: ./src/assets/sass/app.scss
var app = __webpack_require__("29d8");

// CONCATENATED MODULE: ./src/index.js




/* harmony default export */ var src_0 = ({
  install: function install(Vue) {
    Object.keys(components).forEach(function (name) {
      Vue.component(name, components[name]);
    });
  }
});
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (src_0);



/***/ }),

/***/ "fb6a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var toAbsoluteIndex = __webpack_require__("23cb");
var toLength = __webpack_require__("50c4");
var toIndexedObject = __webpack_require__("fc6a");
var createProperty = __webpack_require__("8418");
var wellKnownSymbol = __webpack_require__("b622");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');

var SPECIES = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "fc6a":
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__("44ad");
var requireObjectCoercible = __webpack_require__("1d80");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "fdbc":
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "fdbf":
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__("4930");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "fea9":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global.Promise;


/***/ }),

/***/ "feef":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var linkify = __webpack_require__("2d78");

/**
	Convert strings of text into linkable HTML text
*/
var Options = linkify.options.Options;

function escapeText(text) {
  return text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
}

function escapeAttr(href) {
  return href.replace(/"/g, '&quot;');
}

function attributesToString(attributes) {
  if (!attributes) {
    return '';
  }

  var result = [];

  for (var attr in attributes) {
    var val = attributes[attr] + '';
    result.push("".concat(attr, "=\"").concat(escapeAttr(val), "\""));
  }

  return result.join(' ');
}
/**
 * Convert a plan text string to an HTML string with links. Expects that the
 * given strings does not contain any HTML entities. Use the linkify-html
 * interface if you need to parse HTML entities.
 *
 * @param {string} str string to linkify
 * @param {object} [opts] overridable options
 * @returns {string}
 */


function linkifyStr(str) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  opts = new Options(opts);
  var tokens = linkify.tokenize(str);
  var result = [];

  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (token.t === 'nl' && opts.nl2br) {
      result.push('<br>\n');
      continue;
    } else if (!token.isLink || !opts.check(token)) {
      result.push(escapeText(token.toString()));
      continue;
    }

    var _opts$resolve = opts.resolve(token),
        formatted = _opts$resolve.formatted,
        formattedHref = _opts$resolve.formattedHref,
        tagName = _opts$resolve.tagName,
        className = _opts$resolve.className,
        target = _opts$resolve.target,
        rel = _opts$resolve.rel,
        attributes = _opts$resolve.attributes;

    var link = ["<".concat(tagName, " href=\"").concat(escapeAttr(formattedHref), "\"")];

    if (className) {
      link.push(" class=\"".concat(escapeAttr(className), "\""));
    }

    if (target) {
      link.push(" target=\"".concat(escapeAttr(target), "\""));
    }

    if (rel) {
      link.push(" rel=\"".concat(escapeAttr(rel), "\""));
    }

    if (attributes) {
      link.push(" ".concat(attributesToString(attributes)));
    }

    link.push(">".concat(escapeText(formatted), "</").concat(tagName, ">"));
    result.push(link.join(''));
  }

  return result.join('');
}

if (!String.prototype.linkify) {
  Object.defineProperty(String.prototype, 'linkify', {
    writable: false,
    value: function linkify(options) {
      return linkifyStr(this, options);
    }
  });
}

module.exports = linkifyStr;


/***/ }),

/***/ "ff91":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;(function() {
  "use strict";

function immutableInit(config) {

  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L21
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element');
  var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;

  var globalConfig = {
    use_static: false
  };
  if (isObject(config)) {
      if (config.use_static !== undefined) {
          globalConfig.use_static = Boolean(config.use_static);
      }
  }

  function isObject(data) {
    return (
      typeof data === 'object' &&
      !Array.isArray(data) &&
      data !== null
    );
  }

  function instantiateEmptyObject(obj) {
      var prototype = Object.getPrototypeOf(obj);
      if (!prototype) {
          return {};
      } else {
          return Object.create(prototype);
      }
  }

  function addPropertyTo(target, methodName, value) {
    Object.defineProperty(target, methodName, {
      enumerable: false,
      configurable: false,
      writable: false,
      value: value
    });
  }

  function banProperty(target, methodName) {
    addPropertyTo(target, methodName, function() {
      throw new ImmutableError("The " + methodName +
        " method cannot be invoked on an Immutable data structure.");
    });
  }

  var immutabilityTag = "__immutable_invariants_hold";

  function addImmutabilityTag(target) {
    addPropertyTo(target, immutabilityTag, true);
  }

  function isImmutable(target) {
    if (typeof target === "object") {
      return target === null || Boolean(
        Object.getOwnPropertyDescriptor(target, immutabilityTag)
      );
    } else {
      // In JavaScript, only objects are even potentially mutable.
      // strings, numbers, null, and undefined are all naturally immutable.
      return true;
    }
  }

  function isEqual(a, b) {
    // Avoid false positives due to (NaN !== NaN) evaluating to true
    return (a === b || (a !== a && b !== b));
  }

  function isMergableObject(target) {
    return target !== null && typeof target === "object" && !(Array.isArray(target)) && !(target instanceof Date);
  }

  var mutatingObjectMethods = [
    "setPrototypeOf"
  ];

  var nonMutatingObjectMethods = [
    "keys"
  ];

  var mutatingArrayMethods = mutatingObjectMethods.concat([
    "push", "pop", "sort", "splice", "shift", "unshift", "reverse"
  ]);

  var nonMutatingArrayMethods = nonMutatingObjectMethods.concat([
    "map", "filter", "slice", "concat", "reduce", "reduceRight"
  ]);

  var mutatingDateMethods = mutatingObjectMethods.concat([
    "setDate", "setFullYear", "setHours", "setMilliseconds", "setMinutes", "setMonth", "setSeconds",
    "setTime", "setUTCDate", "setUTCFullYear", "setUTCHours", "setUTCMilliseconds", "setUTCMinutes",
    "setUTCMonth", "setUTCSeconds", "setYear"
  ]);

  function ImmutableError(message) {
    this.name = 'MyError';
    this.message = message;
    this.stack = (new Error()).stack;
  }
  ImmutableError.prototype = new Error();
  ImmutableError.prototype.constructor = Error;

  function makeImmutable(obj, bannedMethods) {
    // Tag it so we can quickly tell it's immutable later.
    addImmutabilityTag(obj);

    if (true) {
      // Make all mutating methods throw exceptions.
      for (var index in bannedMethods) {
        if (bannedMethods.hasOwnProperty(index)) {
          banProperty(obj, bannedMethods[index]);
        }
      }

      // Freeze it and return it.
      Object.freeze(obj);
    }

    return obj;
  }

  function makeMethodReturnImmutable(obj, methodName) {
    var currentMethod = obj[methodName];

    addPropertyTo(obj, methodName, function() {
      return Immutable(currentMethod.apply(obj, arguments));
    });
  }

  function arraySet(idx, value, config) {
    var deep          = config && config.deep;

    if (idx in this) {
      if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {
        value = Immutable.merge(this[idx], value, {deep: true, mode: 'replace'});
      }
      if (isEqual(this[idx], value)) {
        return this;
      }
    }

    var mutable = asMutableArray.call(this);
    mutable[idx] = Immutable(value);
    return makeImmutableArray(mutable);
  }

  var immutableEmptyArray = Immutable([]);

  function arraySetIn(pth, value, config) {
    var head = pth[0];

    if (pth.length === 1) {
      return arraySet.call(this, head, value, config);
    } else {
      var tail = pth.slice(1);
      var thisHead = this[head];
      var newValue;

      if (typeof(thisHead) === "object" && thisHead !== null) {
        // Might (validly) be object or array
        newValue = Immutable.setIn(thisHead, tail, value);
      } else {
        var nextHead = tail[0];
        // If the next path part is a number, then we are setting into an array, else an object.
        if (nextHead !== '' && isFinite(nextHead)) {
          newValue = arraySetIn.call(immutableEmptyArray, tail, value);
        } else {
          newValue = objectSetIn.call(immutableEmptyObject, tail, value);
        }
      }

      if (head in this && thisHead === newValue) {
        return this;
      }

      var mutable = asMutableArray.call(this);
      mutable[head] = newValue;
      return makeImmutableArray(mutable);
    }
  }

  function makeImmutableArray(array) {
    // Don't change their implementations, but wrap these functions to make sure
    // they always return an immutable value.
    for (var index in nonMutatingArrayMethods) {
      if (nonMutatingArrayMethods.hasOwnProperty(index)) {
        var methodName = nonMutatingArrayMethods[index];
        makeMethodReturnImmutable(array, methodName);
      }
    }

    if (!globalConfig.use_static) {
      addPropertyTo(array, "flatMap",  flatMap);
      addPropertyTo(array, "asObject", asObject);
      addPropertyTo(array, "asMutable", asMutableArray);
      addPropertyTo(array, "set", arraySet);
      addPropertyTo(array, "setIn", arraySetIn);
      addPropertyTo(array, "update", update);
      addPropertyTo(array, "updateIn", updateIn);
      addPropertyTo(array, "getIn", getIn);
    }

    for(var i = 0, length = array.length; i < length; i++) {
      array[i] = Immutable(array[i]);
    }

    return makeImmutable(array, mutatingArrayMethods);
  }

  function makeImmutableDate(date) {
    if (!globalConfig.use_static) {
      addPropertyTo(date, "asMutable", asMutableDate);
    }

    return makeImmutable(date, mutatingDateMethods);
  }

  function asMutableDate() {
    return new Date(this.getTime());
  }

  /**
   * Effectively performs a map() over the elements in the array, using the
   * provided iterator, except that whenever the iterator returns an array, that
   * array's elements are added to the final result instead of the array itself.
   *
   * @param {function} iterator - The iterator function that will be invoked on each element in the array. It will receive three arguments: the current value, the current index, and the current object.
   */
  function flatMap(iterator) {
    // Calling .flatMap() with no arguments is a no-op. Don't bother cloning.
    if (arguments.length === 0) {
      return this;
    }

    var result = [],
        length = this.length,
        index;

    for (index = 0; index < length; index++) {
      var iteratorResult = iterator(this[index], index, this);

      if (Array.isArray(iteratorResult)) {
        // Concatenate Array results into the return value we're building up.
        result.push.apply(result, iteratorResult);
      } else {
        // Handle non-Array results the same way map() does.
        result.push(iteratorResult);
      }
    }

    return makeImmutableArray(result);
  }

  /**
   * Returns an Immutable copy of the object without the given keys included.
   *
   * @param {array} keysToRemove - A list of strings representing the keys to exclude in the return value. Instead of providing a single array, this method can also be called by passing multiple strings as separate arguments.
   */
  function without(remove) {
    // Calling .without() with no arguments is a no-op. Don't bother cloning.
    if (typeof remove === "undefined" && arguments.length === 0) {
      return this;
    }

    if (typeof remove !== "function") {
      // If we weren't given an array, use the arguments list.
      var keysToRemoveArray = (Array.isArray(remove)) ?
         remove.slice() : Array.prototype.slice.call(arguments);

      // Convert numeric keys to strings since that's how they'll
      // come from the enumeration of the object.
      keysToRemoveArray.forEach(function(el, idx, arr) {
        if(typeof(el) === "number") {
          arr[idx] = el.toString();
        }
      });

      remove = function(val, key) {
        return keysToRemoveArray.indexOf(key) !== -1;
      };
    }

    var result = instantiateEmptyObject(this);

    for (var key in this) {
      if (this.hasOwnProperty(key) && remove(this[key], key) === false) {
        result[key] = this[key];
      }
    }

    return makeImmutableObject(result);
  }

  function asMutableArray(opts) {
    var result = [], i, length;

    if(opts && opts.deep) {
      for(i = 0, length = this.length; i < length; i++) {
        result.push(asDeepMutable(this[i]));
      }
    } else {
      for(i = 0, length = this.length; i < length; i++) {
        result.push(this[i]);
      }
    }

    return result;
  }

  /**
   * Effectively performs a [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) over the elements in the array, expecting that the iterator function
   * will return an array of two elements - the first representing a key, the other
   * a value. Then returns an Immutable Object constructed of those keys and values.
   *
   * @param {function} iterator - A function which should return an array of two elements - the first representing the desired key, the other the desired value.
   */
  function asObject(iterator) {
    // If no iterator was provided, assume the identity function
    // (suggesting this array is already a list of key/value pairs.)
    if (typeof iterator !== "function") {
      iterator = function(value) { return value; };
    }

    var result = {},
        length = this.length,
        index;

    for (index = 0; index < length; index++) {
      var pair  = iterator(this[index], index, this),
          key   = pair[0],
          value = pair[1];

      result[key] = value;
    }

    return makeImmutableObject(result);
  }

  function asDeepMutable(obj) {
    if (
      (!obj) ||
      (typeof obj !== 'object') ||
      (!Object.getOwnPropertyDescriptor(obj, immutabilityTag)) ||
      (obj instanceof Date)
    ) { return obj; }
    return Immutable.asMutable(obj, {deep: true});
  }

  function quickCopy(src, dest) {
    for (var key in src) {
      if (Object.getOwnPropertyDescriptor(src, key)) {
        dest[key] = src[key];
      }
    }

    return dest;
  }

  /**
   * Returns an Immutable Object containing the properties and values of both
   * this object and the provided object, prioritizing the provided object's
   * values whenever the same key is present in both objects.
   *
   * @param {object} other - The other object to merge. Multiple objects can be passed as an array. In such a case, the later an object appears in that list, the higher its priority.
   * @param {object} config - Optional config object that contains settings. Supported settings are: {deep: true} for deep merge and {merger: mergerFunc} where mergerFunc is a function
   *                          that takes a property from both objects. If anything is returned it overrides the normal merge behaviour.
   */
  function merge(other, config) {
    // Calling .merge() with no arguments is a no-op. Don't bother cloning.
    if (arguments.length === 0) {
      return this;
    }

    if (other === null || (typeof other !== "object")) {
      throw new TypeError("Immutable#merge can only be invoked with objects or arrays, not " + JSON.stringify(other));
    }

    var receivedArray = (Array.isArray(other)),
        deep          = config && config.deep,
        mode          = config && config.mode || 'merge',
        merger        = config && config.merger,
        result;

    // Use the given key to extract a value from the given object, then place
    // that value in the result object under the same key. If that resulted
    // in a change from this object's value at that key, set anyChanges = true.
    function addToResult(currentObj, otherObj, key) {
      var immutableValue = Immutable(otherObj[key]);
      var mergerResult = merger && merger(currentObj[key], immutableValue, config);
      var currentValue = currentObj[key];

      if ((result !== undefined) ||
        (mergerResult !== undefined) ||
        (!currentObj.hasOwnProperty(key)) ||
        !isEqual(immutableValue, currentValue)) {

        var newValue;

        if (mergerResult !== undefined) {
          newValue = mergerResult;
        } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {
          newValue = Immutable.merge(currentValue, immutableValue, config);
        } else {
          newValue = immutableValue;
        }

        if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {
          if (result === undefined) {
            // Make a shallow clone of the current object.
            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));
          }

          result[key] = newValue;
        }
      }
    }

    function clearDroppedKeys(currentObj, otherObj) {
      for (var key in currentObj) {
        if (!otherObj.hasOwnProperty(key)) {
          if (result === undefined) {
            // Make a shallow clone of the current object.
            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));
          }
          delete result[key];
        }
      }
    }

    var key;

    // Achieve prioritization by overriding previous values that get in the way.
    if (!receivedArray) {
      // The most common use case: just merge one object into the existing one.
      for (key in other) {
        if (Object.getOwnPropertyDescriptor(other, key)) {
          addToResult(this, other, key);
        }
      }
      if (mode === 'replace') {
        clearDroppedKeys(this, other);
      }
    } else {
      // We also accept an Array
      for (var index = 0, length = other.length; index < length; index++) {
        var otherFromArray = other[index];

        for (key in otherFromArray) {
          if (otherFromArray.hasOwnProperty(key)) {
            addToResult(result !== undefined ? result : this, otherFromArray, key);
          }
        }
      }
    }

    if (result === undefined) {
      return this;
    } else {
      return makeImmutableObject(result);
    }
  }

  function objectReplace(value, config) {
    var deep          = config && config.deep;

    // Calling .replace() with no arguments is a no-op. Don't bother cloning.
    if (arguments.length === 0) {
      return this;
    }

    if (value === null || typeof value !== "object") {
      throw new TypeError("Immutable#replace can only be invoked with objects or arrays, not " + JSON.stringify(value));
    }

    return Immutable.merge(this, value, {deep: deep, mode: 'replace'});
  }

  var immutableEmptyObject = Immutable({});

  function objectSetIn(path, value, config) {
    if (!(Array.isArray(path)) || path.length === 0) {
      throw new TypeError("The first argument to Immutable#setIn must be an array containing at least one \"key\" string.");
    }

    var head = path[0];
    if (path.length === 1) {
      return objectSet.call(this, head, value, config);
    }

    var tail = path.slice(1);
    var newValue;
    var thisHead = this[head];

    if (this.hasOwnProperty(head) && typeof(thisHead) === "object" && thisHead !== null) {
      // Might (validly) be object or array
      newValue = Immutable.setIn(thisHead, tail, value);
    } else {
      newValue = objectSetIn.call(immutableEmptyObject, tail, value);
    }

    if (this.hasOwnProperty(head) && thisHead === newValue) {
      return this;
    }

    var mutable = quickCopy(this, instantiateEmptyObject(this));
    mutable[head] = newValue;
    return makeImmutableObject(mutable);
  }

  function objectSet(property, value, config) {
    var deep          = config && config.deep;

    if (this.hasOwnProperty(property)) {
      if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {
        value = Immutable.merge(this[property], value, {deep: true, mode: 'replace'});
      }
      if (isEqual(this[property], value)) {
        return this;
      }
    }

    var mutable = quickCopy(this, instantiateEmptyObject(this));
    mutable[property] = Immutable(value);
    return makeImmutableObject(mutable);
  }

  function update(property, updater) {
    var restArgs = Array.prototype.slice.call(arguments, 2);
    var initialVal = this[property];
    return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));
  }

  function getInPath(obj, path) {
    /*jshint eqnull:true */
    for (var i = 0, l = path.length; obj != null && i < l; i++) {
      obj = obj[path[i]];
    }

    return (i && i == l) ? obj : undefined;
  }

  function updateIn(path, updater) {
    var restArgs = Array.prototype.slice.call(arguments, 2);
    var initialVal = getInPath(this, path);

    return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));
  }

  function getIn(path, defaultValue) {
    var value = getInPath(this, path);
    return value === undefined ? defaultValue : value;
  }

  function asMutableObject(opts) {
    var result = instantiateEmptyObject(this), key;

    if(opts && opts.deep) {
      for (key in this) {
        if (this.hasOwnProperty(key)) {
          result[key] = asDeepMutable(this[key]);
        }
      }
    } else {
      for (key in this) {
        if (this.hasOwnProperty(key)) {
          result[key] = this[key];
        }
      }
    }

    return result;
  }

  // Creates plain object to be used for cloning
  function instantiatePlainObject() {
    return {};
  }

  // Finalizes an object with immutable methods, freezes it, and returns it.
  function makeImmutableObject(obj) {
    if (!globalConfig.use_static) {
      addPropertyTo(obj, "merge", merge);
      addPropertyTo(obj, "replace", objectReplace);
      addPropertyTo(obj, "without", without);
      addPropertyTo(obj, "asMutable", asMutableObject);
      addPropertyTo(obj, "set", objectSet);
      addPropertyTo(obj, "setIn", objectSetIn);
      addPropertyTo(obj, "update", update);
      addPropertyTo(obj, "updateIn", updateIn);
      addPropertyTo(obj, "getIn", getIn);
    }

    return makeImmutable(obj, mutatingObjectMethods);
  }

  // Returns true if object is a valid react element
  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L326
  function isReactElement(obj) {
    return typeof obj === 'object' &&
           obj !== null &&
           (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);
  }

  function isFileObject(obj) {
    return typeof File !== 'undefined' &&
           obj instanceof File;
  }

  function isBlobObject(obj) {
    return typeof Blob !== 'undefined' &&
           obj instanceof Blob;
  }

  function isPromise(obj) {
    return typeof obj === 'object' &&
           typeof obj.then === 'function';
  }

  function isError(obj) {
    return obj instanceof Error;
  }

  function Immutable(obj, options, stackRemaining) {
    if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {
      return obj;
    } else if (isPromise(obj)) {
      return obj.then(Immutable);
    } else if (Array.isArray(obj)) {
      return makeImmutableArray(obj.slice());
    } else if (obj instanceof Date) {
      return makeImmutableDate(new Date(obj.getTime()));
    } else {
      // Don't freeze the object we were given; make a clone and use that.
      var prototype = options && options.prototype;
      var instantiateEmptyObject =
        (!prototype || prototype === Object.prototype) ?
          instantiatePlainObject : (function() { return Object.create(prototype); });
      var clone = instantiateEmptyObject();

      if (true) {
        /*jshint eqnull:true */
        if (stackRemaining == null) {
          stackRemaining = 64;
        }
        if (stackRemaining <= 0) {
          throw new ImmutableError("Attempt to construct Immutable from a deeply nested object was detected." +
            " Have you tried to wrap an object with circular references (e.g. React element)?" +
            " See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.");
        }
        stackRemaining -= 1;
      }

      for (var key in obj) {
        if (Object.getOwnPropertyDescriptor(obj, key)) {
          clone[key] = Immutable(obj[key], undefined, stackRemaining);
        }
      }

      return makeImmutableObject(clone);
    }
  }

  // Wrapper to allow the use of object methods as static methods of Immutable.
  function toStatic(fn) {
    function staticWrapper() {
      var args = [].slice.call(arguments);
      var self = args.shift();
      return fn.apply(self, args);
    }

    return staticWrapper;
  }

  // Wrapper to allow the use of object methods as static methods of Immutable.
  // with the additional condition of choosing which function to call depending
  // if argument is an array or an object.
  function toStaticObjectOrArray(fnObject, fnArray) {
    function staticWrapper() {
      var args = [].slice.call(arguments);
      var self = args.shift();
      if (Array.isArray(self)) {
          return fnArray.apply(self, args);
      } else {
          return fnObject.apply(self, args);
      }
    }

    return staticWrapper;
  }

  // Wrapper to allow the use of object methods as static methods of Immutable.
  // with the additional condition of choosing which function to call depending
  // if argument is an array or an object or a date.
  function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {
    function staticWrapper() {
      var args = [].slice.call(arguments);
      var self = args.shift();
      if (Array.isArray(self)) {
          return fnArray.apply(self, args);
      } else if (self instanceof Date) {
          return fnDate.apply(self, args);
      } else {
          return fnObject.apply(self, args);
      }
    }

    return staticWrapper;
  }

  // Export the library
  Immutable.from           = Immutable;
  Immutable.isImmutable    = isImmutable;
  Immutable.ImmutableError = ImmutableError;
  Immutable.merge          = toStatic(merge);
  Immutable.replace        = toStatic(objectReplace);
  Immutable.without        = toStatic(without);
  Immutable.asMutable      = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);
  Immutable.set            = toStaticObjectOrArray(objectSet, arraySet);
  Immutable.setIn          = toStaticObjectOrArray(objectSetIn, arraySetIn);
  Immutable.update         = toStatic(update);
  Immutable.updateIn       = toStatic(updateIn);
  Immutable.getIn          = toStatic(getIn);
  Immutable.flatMap        = toStatic(flatMap);
  Immutable.asObject       = toStatic(asObject);
  if (!globalConfig.use_static) {
      Immutable.static = immutableInit({
          use_static: true
      });
  }

  Object.freeze(Immutable);

  return Immutable;
}

  var Immutable = immutableInit();
  /* istanbul ignore if */
  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return Immutable;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})();


/***/ })

/******/ })["default"];
});
//# sourceMappingURL=chatsora.umd.js.map